{"version":3,"file":"static/js/InnerHtml.ff1fa0a0.chunk.js","mappings":"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","sources":["pages/dom-render/innerhtml/element/newElement.js","pages/dom-render/innerhtml/generateElement.js","pages/dom-render/innerhtml/renderer/svg/renderScene.js","pages/dom-render/innerhtml/renderer/svg/renderElement.js","pages/dom-render/innerhtml/useGesture.js","webpack://excalidraw-app/./src/pages/dom-render/innerhtml/components/tools/index.module.less?734a","pages/dom-render/innerhtml/components/icons/index.jsx","pages/dom-render/innerhtml/scene/scene.js","pages/dom-render/innerhtml/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/dom-render/innerhtml/components/scale/index.module.less?0637","pages/dom-render/innerhtml/components/scale/index.jsx","webpack://excalidraw-app/./src/pages/dom-render/innerhtml/components/layer-ui/index.module.less?d3cb","pages/dom-render/innerhtml/components/layer-ui/index.jsx","webpack://excalidraw-app/./src/pages/dom-render/innerhtml/components/textarea/index.module.less?a5e1","pages/dom-render/innerhtml/components/textarea/index.jsx","pages/dom-render/innerhtml/index.jsx","util/export.js","util/gesture.js","util/index.js","util/zoom.js"],"sourcesContent":["import { randomId } from \"@/util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n  ...rest\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n    ...rest,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = newElement({\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    originalText: opts.text,\n    ...opts,\n  });\n\n  return textElement;\n};\n","import { createElement, newTextElement } from \"./element/newElement\";\nimport { rgb } from \"@/util\";\n\nconst getRandomValue = (n, m) => {\n  return Number((Math.random() * (m - n) + n).toFixed(5));\n};\nconst generateElements = (count, type, appState) => {\n  const elements = [];\n  let element;\n  for (let i = 0; i < count; i++) {\n    let x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    let y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    element = createElement({\n      elementType: type,\n      pointerDownState: {\n        origin: {\n          x,\n          y,\n        },\n      },\n      appState,\n    });\n    if (type === \"rectangle\") {\n      const width =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollX - x,\n            appState.canvasWidth - appState.scrollX - x\n          )\n        ) + 2;\n      const height =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollY - y,\n            appState.canvasHeight - appState.scrollY - y\n          )\n        ) + 2;\n      element.width = width;\n      element.height = height;\n    } else if (type === \"freedraw\") {\n      const pointsNum = getRandomValue(20, 100);\n      for (let i = 0; i < pointsNum; i++) {\n        x = getRandomValue(x, x + 10);\n        y = getRandomValue(y, y + 10);\n        element.points.push([x, y]);\n      }\n    } else if (type === \"text\") {\n      const text = `${x}, ${y}`;\n      element = newTextElement({\n        x,\n        y,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text,\n        width: text.length * 20,\n        height: 25,\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n    }\n\n    elements.push(element);\n  }\n\n  return elements;\n};\n\nexport const animateElements = (elements, appState) => {\n  elements.forEach((el) => {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    el.x = x;\n    el.y = y;\n  });\n  return elements;\n};\nexport default generateElements;\n","import { renderElementToSvg } from \"./renderElement\";\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nconst trimSpace = (str) => {\n  return str.replace(/\\s+/g,\" \")\n}\n\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  svg,\n  renderConfig,\n  isTransform,\n}) => {\n  const originSize = 30;\n  const constainerStyle = `\n    transform: translateX(${\n      appState.scrollX * appState.zoom.value\n    }px) translateY(${appState.scrollY * appState.zoom.value}px) scale(${\n      appState.zoom.value\n    });\n    width: ${originSize}px;\n    height: ${originSize}px;\n    transform-origin: left top;\n    //will-change: transform;\n  `\n  svg.setAttribute(\n    \"style\",\n    trimSpace(constainerStyle)\n  );\n  if (isTransform) return;\n  const children = elements.map((element, index) => {\n    return renderElementToSvg(element, renderConfig, appState);\n  });\n  svg.innerHTML = trimSpace(children.join(''));\n};\n","import { getElementAbsoluteCoords, distance } from \"@/util\";\n\nexport const deleteElementCache = () => {};\n\nexport const clearElementCache = () => {};\n\nexport const renderElementToSvg = (element, renderConfig, appState) => {\n  let el;\n  switch (element.type) {\n    case \"rectangle\": {\n      el = `<svg id=${element.id}\n          key=${element.id}\n          width=${element.width + element.strokeWidth * 2}\n          height=${element.height + element.strokeWidth * 2}\n          style=\"\n            position: absolute;\n            left: ${element.x}px;\n            top: ${element.y}px;\n            // background: grey;\n          \"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          version=\"1.1\"\n        >\n          <rect\n            x=${Math.ceil(element.strokeWidth / 2)}\n            y=${Math.ceil(element.strokeWidth / 2)}\n            width=${element.width}\n            height=${element.height}\n            style=\"\n              fill: none;\n              stroke-width: ${element.strokeWidth};\n              stroke: ${element.strokeStyle};\n            \"\n          />\n        </svg>`;\n      break;\n    }\n    case \"freedraw\": {\n      let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n      const width = distance(x1, x2);\n      const height = distance(y1, y2);\n      const points = element.points.map((p) => [\n        p[0] - x1 + Math.ceil(element.strokeWidth / 2),\n        p[1] - y1 + Math.ceil(element.strokeWidth / 2),\n      ]);\n      el = (\n        `<svg\n          id=${element.id}\n          key=${element.id}\n          width=${width + element.strokeWidth * 2}\n          height=${height + element.strokeWidth * 2}\n          style=\"\n            position: absolute;\n            left: ${x1}px;\n            top: ${y1}px;\n            // background: grey;\n          \"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          version=\"1.1\"\n        >\n          <polyline\n            points=\"${points.join(' ')}\"\n            style=\"\n              fill: none;\n              stroke-width: ${element.strokeWidth};\n              stroke: ${element.strokeStyle};\n            \"\n          />\n        </svg>`\n      );\n      break;\n    }\n    default: {\n    }\n  }\n  return el;\n};\n","import { useEffect } from \"react\";\nimport { getCenter, getDistance } from \"@/util/gesture\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\n\nconst gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nexport const useGesture = (canvasRef, appState) => {\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const onTouchEnd = (event) => {\n      if (!event.touches.length) {\n        gesture.pointers.clear();\n      }\n    };\n    canvas.addEventListener(\"touchend\", onTouchEnd);\n    return () => {\n      canvas.removeEventListener(\"touchend\", onTouchEnd);\n    };\n  }, [canvasRef]);\n  const removePointer = (event) => {\n    gesture.pointers.delete(event.pointerId);\n  };\n  const updateGestureOnPointerDown = (event) => {\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = appState.zoom.value;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values())\n      );\n    }\n  };\n  const handleCanvasPointerMove = (event, callback) => {\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n    const initialScale = gesture.initialScale;\n\n    if (\n      gesture.pointers.size === 2 &&\n      gesture.lastCenter &&\n      initialScale &&\n      gesture.initialDistance\n    ) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter.x;\n      const deltaY = center.y - gesture.lastCenter.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor = distance / gesture.initialDistance;\n\n      const nextZoom = scaleFactor\n        ? getNormalizedZoom(initialScale * scaleFactor)\n        : appState.zoom.value;\n      const zoomState = getStateForZoom(\n        {\n          viewportX: center.x,\n          viewportY: center.y,\n          nextZoom,\n        },\n        appState\n      );\n      Object.assign(appState, {\n        zoom: zoomState.zoom,\n        scrollX: zoomState.scrollX + deltaX / nextZoom,\n        scrollY: zoomState.scrollY + deltaY / nextZoom,\n      });\n      callback();\n    } else {\n      gesture.lastCenter =\n        gesture.initialDistance =\n        gesture.initialScale =\n          null;\n    }\n  };\n  return {\n    gesture,\n    removePointer,\n    updateGestureOnPointerDown,\n    handleCanvasPointerMove,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__L8mCP\",\"item\":\"index_item__gr8cn\",\"selected\":\"index_selected__5n0dp\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps\n);\n\nconst modifiedTablerIconProps = {\n  width: 20,\n  height: 20,\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const ZoomInIcon = createIcon(\n  <path strokeWidth=\"1.25\" d=\"M10 4.167v11.666M4.167 10h11.666\" />,\n  modifiedTablerIconProps\n);\n\nexport const ZoomOutIcon = createIcon(\n  <path d=\"M5 10h10\" strokeWidth=\"1.25\" />,\n  modifiedTablerIconProps\n);\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { renderScene } from \"../../renderer\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() => {\n          exportPng({\n            renderScene,\n            elements: scene.getElementsIncludingDeleted(),\n            appState,\n          });\n        }}\n      >\n        {ExportImageIcon}\n      </span>\n      {SHAPES.map((shape) => {\n        const isSelected = activeTool.type === shape.type;\n        return (\n          <span\n            key={shape.type}\n            className={[styles.item, isSelected && styles.selected].join(\" \")}\n            onClick={() =>\n              onActiveToolChange({ type: isSelected ? \"\" : shape.type })\n            }\n          >\n            {shape.icon}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"scale\":\"index_scale__kB0lW\",\"item\":\"index_item__LVHbs\",\"value\":\"index_value__e5ZXz\"};","import React, { memo } from \"react\";\nimport { ZoomInIcon, ZoomOutIcon } from \"../icons\";\nimport { getNormalizedZoom } from \"@/util/zoom\";\nimport styles from \"./index.module.less\";\n\nconst ZOOM_STEP = 0.1;\nconst Scale = memo(({ appState, onZoomChange }) => {\n  const zoomValue = `${(appState.zoom.value * 100).toFixed(0)}%`;\n\n  return (\n    <div className={styles.scale}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value - ZOOM_STEP))\n        }\n      >\n        {ZoomOutIcon}\n      </span>\n      <span\n        className={styles.value}\n        onClick={() => onZoomChange(getNormalizedZoom(1))}\n      >\n        {zoomValue}\n      </span>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value + ZOOM_STEP))\n        }\n      >\n        {ZoomInIcon}\n      </span>\n    </div>\n  );\n});\n\nexport default Scale;\n","// extracted by mini-css-extract-plugin\nexport default {\"layer\":\"index_layer__FUWUX\",\"ball_red\":\"index_ball_red__QKSQ3\",\"move\":\"index_move__Ptlk4\",\"boundceBall\":\"index_boundceBall__vFtLF\",\"shadowball\":\"index_shadowball__oc3-y\",\"shadowMove\":\"index_shadowMove__UDv+a\"};","import React, { memo } from \"react\";\nimport Tools from \"../tools\";\nimport Scale from \"../scale\";\nimport styles from \"./index.module.less\";\nconst LayerUI = memo(\n  ({ activeTool, onActiveToolChange, appState, onZoomChange }) => {\n    return (\n      <div className={styles.layer}>\n        <Scale appState={appState} onZoomChange={onZoomChange} />\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={onActiveToolChange}\n        />\n        <div className={styles.boundceBall}>\n          <div className={styles.ball_red}></div>\n          <div className={styles.shadowball}></div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default LayerUI;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__ap5m9\",\"textarea_copy\":\"index_textarea_copy__oszGz\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache, renderScene } from \"../../renderer\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ staticCanvasRef }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const left = event.clientX - appState.offsetLeft;\n      const top = event.clientY - appState.offsetTop;\n      const styleObj = {\n        font: getFontString(element),\n        left: `${left}px`,\n        top: `${top}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - left;\n      // textarea.style.maxWidth = `${maxWidth}px`;\n      // textarea.style.width = `${element.fontSize}px`;\n      // textarea.style.height = `${element.fontSize * 1.2}px`;\n      Object.assign(textarea.style, {\n        zIndex: 1,\n        maxWidth: `${maxWidth}px`,\n        width: `${element.fontSize}px`,\n        height: `${element.fontSize * 1.2}px`,\n      });\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            zIndex: -1,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { distance } from \"@/util\";\n// import { isAndroid } from \"@/util/device\";\nimport {\n  withBatchedUpdatesThrottled,\n  viewportCoordsToSceneCoords,\n} from \"@/util\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\nimport generateElements, { animateElements } from \"./generateElement\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer\";\nimport { useGesture } from \"./useGesture\";\nimport { deleteElementCache, clearElementCache } from \"./renderer\";\nimport LayerUI from \"./components/layer-ui\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  zoom: { value: 1 },\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst ZOOM_STEP = 0.1;\n\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const svgContainerRef = useRef(null);\n  const cursorPosition = useRef({});\n  const textareaRef = useRef(null);\n  const rafRef = useRef(null);\n  const globalVarRef = useRef({});\n  const [flag, refreshFlag] = useState(false);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  const [testObj, setTestObj] = useState({ count: \"\", type: \"rectangle\" });\n  const [animate, setAnimate] = useState(false);\n  const animateRef = useRef();\n  const refresh = () => {\n    refreshFlag(!flag);\n  };\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      svg: svgContainerRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    const updateCurrentCursorPosition = (event) => {\n      cursorPosition.current = {\n        cursorX: event.clientX,\n        cursorY: event.clientY,\n      };\n    };\n    const onTapStart = (e) => {\n      e.preventDefault();\n    };\n    const canvas = canvasRef.current;\n    canvas.addEventListener(\"touchstart\", onTapStart);\n    document.addEventListener(\"mousemove\", updateCurrentCursorPosition);\n    return () => {\n      canvas.removeEventListener(\"touchstart\", onTapStart);\n\n      wrap.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"mousemove\", updateCurrentCursorPosition);\n    };\n  }, []);\n  useEffect(() => {\n    let frame = 0;\n    let startTime = Date.now();\n\n    const loop = () => {\n      const currentTime = Date.now();\n      frame++;\n\n      if (currentTime > 1000 + startTime) {\n        const fps = Math.round((frame * 1000) / (currentTime - startTime));\n        rafRef.current.innerText = `FPS：${fps}`;\n        frame = 0;\n        startTime = currentTime;\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    loop();\n  }, []);\n  const {\n    updateGestureOnPointerDown,\n    handleCanvasPointerMove,\n    removePointer,\n    gesture,\n  } = useGesture(canvasRef, appState);\n  const reDrawAfterZoom = () => {\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      svg: svgContainerRef.current,\n      isTransform: true,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n    if (globalVarRef.current.zoomTimerId) {\n      clearTimeout(globalVarRef.current.zoomTimerId);\n    }\n    globalVarRef.current.zoomTimerId = setTimeout(() => {\n      clearElementCache();\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        svg: svgContainerRef.current,\n        isTransform: true,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    }, 300);\n  };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    // 关于缩放：双指放大时，deltaY是负数，缩小时，deltaY是正数\n    // 缩放，本质上就是对某个点的坐标进行变换\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY); // 只有两种情况，要么+1，要么-1\n      const MAX_STEP = ZOOM_STEP * 100; // 10\n      const absDelta = Math.abs(deltaY);\n      let delta = deltaY;\n      // delta最大为10\n      if (absDelta > MAX_STEP) {\n        delta = MAX_STEP * sign;\n      }\n      let newZoom = appState.zoom.value - delta / 100;\n      newZoom +=\n        Math.log10(Math.max(1, appState.zoom.value)) *\n        -sign *\n        Math.min(1, absDelta / 20);\n      const nextZoom = getNormalizedZoom(newZoom);\n      Object.assign(appState, {\n        ...getStateForZoom(\n          {\n            viewportX: cursorPosition.current.cursorX,\n            viewportY: cursorPosition.current.cursorY,\n            nextZoom: nextZoom,\n          },\n          appState\n        ),\n      });\n      refresh();\n      reDrawAfterZoom();\n      return;\n    }\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      isTransform: true,\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      svg: svgContainerRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n    if (!activeTool.type) {\n      updateGestureOnPointerDown(event);\n      return;\n    }\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    scene.replaceAllElements([\n      ...scene.getElementsIncludingDeleted(),\n      appState.draggingElement,\n    ]);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        svg: svgContainerRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      removePointer(event);\n      // scene.replaceAllElements([\n      //   ...scene.getElementsIncludingDeleted(),\n      //   appState.draggingElement,\n      // ]);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        svg: svgContainerRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    if (activeTool.type) return;\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div className=\"svg-base\" ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <div className=\"svg-container\" ref={svgContainerRef}></div>\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n          onPointerCancel={removePointer}\n          onPointerMove={(event) => {\n            handleCanvasPointerMove(event, () => {\n              refresh();\n              reDrawAfterZoom();\n            });\n          }}\n        >\n          动态canvas\n        </canvas>\n        <LayerUI\n          activeTool={activeTool}\n          onZoomChange={(zoomVal) => {\n            if (appState.zoom.value === zoomVal) return;\n            Object.assign(appState, {\n              ...getStateForZoom(\n                {\n                  viewportX: appState.canvasWidth / 2 + appState.offsetLeft,\n                  viewportY: appState.canvasHeight / 2 + appState.offsetTop,\n                  nextZoom: zoomVal,\n                },\n                appState\n              ),\n            });\n            refresh();\n            reDrawAfterZoom();\n          }}\n          appState={{ ...appState }}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} staticCanvasRef={staticCanvasRef} />\n      </div>\n      <div>\n        <span ref={rafRef}>FPS：--</span>\n        <span className=\"total\" id=\"canvas-total\"></span>\n      </div>\n      <div className=\"row\">\n        <input\n          type=\"number\"\n          value={testObj.count}\n          onChange={(e) => setTestObj({ ...testObj, count: e.target.value })}\n        />\n        <select\n          value={testObj.type}\n          onChange={(e) => setTestObj({ ...testObj, type: e.target.value })}\n        >\n          <option value=\"freedraw\">freedraw</option>\n          <option value=\"rectangle\">rectangle</option>\n          <option value=\"text\">text</option>\n        </select>\n        <button\n          onClick={() => {\n            const elements = generateElements(\n              Number(testObj.count),\n              testObj.type,\n              appState\n            );\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              ...elements,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              svg: svgContainerRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n          }}\n        >\n          生成\n        </button>\n        <button\n          onClick={() => {\n            setAnimate(!animate);\n            if (animateRef.current) {\n              cancelAnimationFrame(animateRef.current);\n            }\n            if (animate) return;\n            let diffTime = 100;\n            let lastDate = Date.now();\n            const tick = () => {\n              const currentDate = Date.now();\n              if (currentDate - lastDate >= diffTime) {\n                lastDate = currentDate;\n                const elements = animateElements(\n                  scene.getElementsIncludingDeleted(),\n                  appState\n                );\n                renderScene({\n                  elements: elements,\n                  appState: appState,\n                  scale: window.devicePixelRatio,\n                  canvas: staticCanvasRef.current,\n                  svg: svgContainerRef.current,\n                  renderConfig: {\n                    selectionColor: \"#6965db\",\n                    scrollX: appState.scrollX,\n                    scrollY: appState.scrollY,\n                    viewBackgroundColor: \"#ffffff\",\n                    zoom: appState.zoom,\n                  },\n                });\n              }\n\n              animateRef.current = requestAnimationFrame(tick);\n            };\n            animateRef.current = requestAnimationFrame(tick);\n          }}\n        >\n          {animate ? \"停止动画\" : \"动画\"}\n        </button>\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { getCommonBounds, distance } from \"./index\";\nexport const getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const canvasToDataURL = ({\n  renderScene,\n  isExport,\n  notUseCache,\n  elements,\n  appState,\n}) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: { value: 1 },\n      isExport,\n      notUseCache,\n    },\n  });\n\n  return canvas.toDataURL();\n};\nexport const exportPng = ({\n  renderScene,\n  isExport = true,\n  notUseCache = true,\n  elements,\n  appState,\n}) => {\n  const dataUrl = canvasToDataURL({\n    renderScene,\n    isExport,\n    notUseCache,\n    elements,\n    appState,\n  });\n  var a = document.createElement(\"a\");\n  a.href = dataUrl;\n  a.download = \"canvas.png\";\n  a.click();\n};\n","export const getCenter = (pointers) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: sum(allCoords, (coords) => coords.x) / allCoords.length,\n    y: sum(allCoords, (coords) => coords.y) / allCoords.length,\n  };\n};\n\nexport const getDistance = ([a, b]) => Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = (array, mapper) =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\n// for worker\n// window.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n","const MIN_ZOOM = 0.1;\n\nexport const getNormalizedZoom = (zoom) => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30));\n};\n\nexport const getStateForZoom = (\n  { viewportX, viewportY, nextZoom },\n  appState\n) => {\n  const screenX = viewportX - appState.offsetLeft;\n  const screenY = viewportY - appState.offsetTop;\n  const currentZoom = appState.zoom.value;\n\n  return {\n    scrollX: appState.scrollX + screenX / nextZoom - screenX / currentZoom,\n    scrollY: appState.scrollY + screenY / nextZoom - screenY / currentZoom,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n"],"names":["newElement","type","x","y","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","rest","id","randomId","isDeleted","createElement","elementType","pointerDownState","appState","origin","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","newTextElement","opts","text","fontSize","fontFamily","textAlign","verticalAlign","originalText","getRandomValue","n","m","Number","Math","random","toFixed","count","element","elements","i","scrollX","canvasWidth","scrollY","canvasHeight","abs","pointsNum","push","length","trimSpace","str","replace","renderScene","svg","scale","isTransform","renderConfig","constainerStyle","zoom","value","setAttribute","children","map","index","el","ceil","getElementAbsoluteCoords","x1","y1","x2","y2","distance","p","join","renderElementToSvg","innerHTML","gesture","pointers","Map","lastCenter","initialDistance","initialScale","useGesture","canvasRef","useEffect","canvas","current","onTouchEnd","event","touches","clear","addEventListener","removeEventListener","removePointer","delete","pointerId","updateGestureOnPointerDown","set","clientX","clientY","size","getCenter","getDistance","Array","from","values","handleCanvasPointerMove","callback","has","center","deltaX","deltaY","scaleFactor","nextZoom","getNormalizedZoom","zoomState","getStateForZoom","viewportX","viewportY","Object","assign","createIcon","d","style","mirror","focusable","role","viewBox","fill","RectangleIcon","stroke","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","modifiedTablerIconProps","ZoomInIcon","ZoomOutIcon","Scene","JSON","parse","localStorage","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","onClick","exportPng","getElementsIncludingDeleted","shape","isSelected","Scale","onZoomChange","zoomValue","LayerUI","Index","forwardRef","ref","staticCanvasRef","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","preventDefault","stopPropagation","viewportCoordsToSceneCoords","sceneX","sceneY","draggingElement","textarea","focus","left","offsetLeft","top","offsetTop","styleObj","font","getFontString","opacity","color","copyTextarea","document","getElementById","maxWidth","zIndex","onChange","e","target","parseFloat","innerText","copyTextWidth","getBoundingClientRect","slice","lines","split","splitResult","forEach","line","lastIdx","onBlur","offsetWidth","offsetHeight","replaceAllElements","window","devicePixelRatio","selectionColor","viewBackgroundColor","setTimeout","background","contentEditable","Canvas","canvasContainer","svgContainerRef","cursorPosition","rafRef","globalVarRef","flag","refreshFlag","setActiveTool","testObj","setTestObj","animate","setAnimate","animateRef","refresh","setCanvasSize","wrap","handleWheel","passive","updateCurrentCursorPosition","cursorX","cursorY","onTapStart","frame","startTime","Date","now","loop","currentTime","fps","round","requestAnimationFrame","reDrawAfterZoom","zoomTimerId","clearTimeout","onPointerMoveFromCanvasPointerDownHandler","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","getContext","clearRect","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","onWheel","metaKey","ctrlKey","sign","absDelta","delta","ZOOM_STEP","newZoom","log10","max","min","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","onPointerCancel","zoomVal","generateElements","cancelAnimationFrame","lastDate","tick","currentDate","animateElements","getCanvasSize","exportPadding","getCommonBounds","minX","minY","maxX","maxY","isExport","notUseCache","dataUrl","toDataURL","canvasToDataURL","a","href","download","click","allCoords","sum","coords","b","hypot","array","mapper","reduce","acc","item","r","floor","g","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","ret","trailing","flush","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","rotate","cos","sin","getElementBounds","cx","cy","x11","y11","x12","y12","x22","y22","x21","y21","testIdBase","screenX","screenY","currentZoom"],"sourceRoot":""}