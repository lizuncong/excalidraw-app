{"version":3,"file":"static/js/Canvas.b84f5efa.chunk.js","mappings":"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","sources":["pages/canvas/util.js","pages/canvas/renderer/renderElement.js","pages/canvas/renderer/renderScene.js","pages/canvas/scene/scene.js","pages/canvas/index.jsx","pages/canvas/element/newElement.js","pages/canvas/element/dragElements.js","pages/canvas/element/mutateElement.js"],"sourcesContent":["export const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\nlet testIdBase = 0;\n\nexport const randomId = () => `id${testIdBase++}`;\n","export const renderElement = (element, context, renderConfig, appState) => {\n  switch (element.type) {\n    case \"rectangle\": {\n      generateElementShape(element);\n      const elementWithCanvas = generateElementWithCanvas(\n        element,\n        renderConfig\n      );\n      drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n\n      break;\n    }\n    default: {\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nconst shapeCache = new WeakMap();\nconst elementWithCanvasCache = new WeakMap();\nconst generateElementShape = (element) => {\n  let shape = shapeCache.get(element);\n\n  if (shape === undefined) {\n    elementWithCanvasCache.delete(element);\n\n    switch (element.type) {\n      case \"rectangle\":\n        if (element.roundness) {\n          // const w = element.width;\n          // const h = element.height;\n          //   const r = getCornerRadius(Math.min(w, h), element);\n          //   shape = generator.path(\n          //     `M ${r} 0 L ${w - r} 0 Q ${w} 0, ${w} ${r} L ${w} ${\n          //       h - r\n          //     } Q ${w} ${h}, ${w - r} ${h} L ${r} ${h} Q 0 ${h}, 0 ${\n          //       h - r\n          //     } L 0 ${r} Q 0 0, ${r} 0`,\n          //     generateRoughOptions(element, true)\n          //   );\n        }\n        setShapeForElement(element, shape);\n\n        break;\n      default: {\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const zoom = renderConfig.zoom || 1;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  if (!prevElementWithCanvas) {\n    const elementWithCanvas = generateElementCanvas(\n      element,\n      zoom,\n      renderConfig\n    );\n\n    // elementWithCanvasCache.set(element, elementWithCanvas);\n\n    return elementWithCanvas;\n  }\n  return prevElementWithCanvas;\n};\nconst rightContainer = document.getElementsByClassName('right')[0]\nlet previewCanvas = null\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if(previewCanvas){\n    rightContainer.removeChild(previewCanvas)\n  }\n  previewCanvas = canvas;\n  rightContainer.appendChild(previewCanvas)\n  \n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n\n  canvas.width = \n    element.width * window.devicePixelRatio * zoom + padding * zoom * 2;\n  canvas.height =\n    element.height * window.devicePixelRatio * zoom + padding * zoom * 2;\n  context.save();\n  context.translate(padding * zoom, padding * zoom);\n\n  context.scale(window.devicePixelRatio * zoom, window.devicePixelRatio * zoom);\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.strokeStyle = 'red'\n      // context.strokeRect(20,20,50,50);\n      context.strokeRect(0,0,element.width,element.height);\n      // rc.draw(getShapeForElement(element)!);\n      break;\n    }\n\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\nexport const setShapeForElement = (element, shape) =>\n  shapeCache.set(element, shape);\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n  ];\n\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n\n  context.translate(cx, cy);\n\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from './renderElement'\nexport const drawAxis = (ctx, { scrollX, scrollY }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.translate(scrollX, scrollY);\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴\n  ctx.save();\n  ctx.beginPath();\n  ctx.setLineDash([10, 10]);\n  ctx.moveTo(0, -scrollY);\n  ctx.lineTo(0, canvas.height - scrollY);\n  ctx.moveTo(-scrollX, 0);\n  ctx.lineTo(canvas.width - scrollX, 0);\n  ctx.stroke();\n  ctx.restore();\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(-i, -25, -i * rectH);\n  }\n  for (let i = 0; i < (canvas.height - scrollY) / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(i, -25, i * rectH);\n  }\n  for (let i = 1; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(-i, -i * rectW - 10, -15);\n  }\n  for (let i = 1; i < (canvas.width - scrollX) / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(i, i * rectW - 5, -15);\n  }\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  // context.setTransform(1, 0, 0, 1, 0, 0);\n  context.save();\n  console.log('scale====', scale, renderConfig.zoom)\n  context.scale(scale, scale);\n  // When doing calculations based on canvas width we should used normalized one\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  // if (renderConfig.viewBackgroundColor) {\n  //   context.save();\n  //   context.fillStyle = renderConfig.viewBackgroundColor;\n  //   context.fillRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n  //   context.restore();\n  // }\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  // Apply zoom\n  context.save();\n  context.scale(renderConfig.zoom, renderConfig.zoom);\n  drawAxis(context, renderConfig);\n\n  // render element\n  elements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  // Reset zoom\n  context.restore();\n\n  context.restore();\n  localStorage.setItem('elements', JSON.stringify(elements))\n  localStorage.setItem('appState', JSON.stringify(appState))\n};\n\nexport const renderCanvas = (ctx, renderConfig) => {\n  const canvas = ctx.canvas;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  // drawAxis(ctx, renderConfig);\n};\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport default Scene;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport { viewportCoordsToSceneCoords, distance } from \"./util\";\nimport { dragNewElement } from \"./element/dragElements\";\nimport { newElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport Scene from \"./scene/scene\";\nimport \"./index.less\";\nconst scene = new Scene();\nconst temp = JSON.parse(localStorage.getItem('appState'))\nlet appState = temp || {\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  currentItemStrokeColor: \"#000000\",\n  currentItemBackgroundColor: \"transparent\",\n  currentItemFillStyle: \"hachure\",\n  currentItemStrokeWidth: 1,\n  currentItemStrokeStyle: \"solid\",\n  currentItemRoughness: 1,\n  currentItemOpacity: 100,\n};\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight, offsetLeft, offsetTop } = canvas;\n\n    canvas.width = offsetWidth * window.devicePixelRatio;\n    canvas.height = offsetHeight * window.devicePixelRatio;\n    appState.offsetLeft = offsetLeft;\n    appState.offsetTop = offsetTop;\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: canvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: 1,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // renderCanvas(canvasRef.current.getContext(\"2d\"), appState);\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: canvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: 1,\n      },\n    });\n    console.log(\"wheel\", appState.scrollX, appState.scrollY);\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    const pointerDownState = initialPointerDownState(event);\n    createGenericElementOnPointerDown(\"rectangle\", pointerDownState);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n  const createGenericElementOnPointerDown = (elementType, pointerDownState) => {\n    const element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: appState.currentItemStrokeStyle,\n      roughness: appState.currentItemRoughness,\n      opacity: appState.currentItemOpacity,\n      roundness: null,\n      locked: false,\n    });\n    scene.replaceAllElements([...scene.getElementsIncludingDeleted(), element]);\n    appState.draggingElement = element;\n  };\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n  const onPointerMoveFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      maybeDragNewGenericElement(pointerDownState, event);\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: 1,\n        },\n      });\n    };\n  const maybeDragNewGenericElement = (pointerDownState, event) => {\n    const pointerCoords = pointerDownState.lastCoords;\n    const draggingElement = appState.draggingElement;\n    dragNewElement(\n      draggingElement,\n      \"rectangle\",\n      pointerDownState.origin.x,\n      pointerDownState.origin.y,\n      pointerCoords.x,\n      pointerCoords.y,\n      distance(pointerDownState.origin.x, pointerCoords.x),\n      distance(pointerDownState.origin.y, pointerCoords.y),\n      false,\n      false,\n      null\n    );\n  };\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  return (\n    <div ref={canvasContainer}>\n      <div className=\"refer\">\n        参照物\n      </div>\n      <canvas\n        onWheel={handleCanvasWheel}\n        onPointerDown={handleCanvasPointerDown}\n        // onPointerUp={(e) => {\n        //   window.removeEventListener(\"pointermove\", handleWindowPointerMove);\n        // }}\n        ref={canvasRef}\n        className=\"canvas\"\n      >\n        绘制canvas\n      </canvas>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { randomId } from '../util'\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth,\n  strokeStyle,\n  roughness,\n  opacity,\n  width = 0,\n  height = 0,\n  angle = 0,\n  groupIds = [],\n  roundness = null,\n  boundElements = null,\n  link = null,\n  locked,\n  ...rest\n}) => {\n    return  {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    angle,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    roughness,\n    opacity,\n    groupIds,\n    roundness,\n    version: rest.version || 1,\n    versionNonce: rest.versionNonce ?? 0,\n    isDeleted: false,\n    boundElements,\n    updated: Date.now(),\n    link,\n    locked,\n  };\n};\n","import { mutateElement } from './mutateElement'\nexport const dragNewElement = (\n  draggingElement,\n  elementType,\n  originX,\n  originY,\n  x,\n  y,\n  width,\n  height,\n  shouldMaintainAspectRatio,\n  shouldResizeFromCenter,\n  widthAspectRatio\n) => {\n  let newX = x < originX ? originX - width : originX;\n  let newY = y < originY ? originY - height : originY;\n  if (width !== 0 && height !== 0) {\n    mutateElement(draggingElement, {\n      x: newX,\n      y: newY,\n      width,\n      height,\n    });\n  }\n};\n","export const mutateElement = (element, updates, informMutation = true) => {\n  for (const key in updates) {\n    const value = updates[key];\n    if (typeof value !== \"undefined\") {\n      element[key] = value;\n    }\n  }\n\n  return element;\n};\n"],"names":["viewportCoordsToSceneCoords","clientX","clientY","offsetLeft","offsetTop","x","scrollX","y","scrollY","distance","Math","abs","testIdBase","shapeCache","WeakMap","elementWithCanvasCache","generateElementShape","element","shape","get","undefined","delete","type","Error","roundness","setShapeForElement","generateElementWithCanvas","renderConfig","zoom","prevElementWithCanvas","generateElementCanvas","rightContainer","document","getElementsByClassName","previewCanvas","canvas","createElement","context","getContext","padding","getCanvasPadding","removeChild","appendChild","width","window","devicePixelRatio","height","save","translate","scale","drawElementOnCanvas","restore","theme","canvasZoom","canvasOffsetX","canvasOffsetY","globalAlpha","opacity","lineJoin","lineCap","strokeStyle","strokeRect","set","strokeWidth","drawElementFromCanvas","elementWithCanvas","x1","y1","x2","y2","cx","cy","drawImage","renderScene","elements","appState","console","log","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","rectH","rectW","fillStyle","beginPath","setLineDash","moveTo","lineTo","stroke","lineWidth","textBaseline","i","font","fillText","drawAxis","forEach","renderElement","localStorage","setItem","JSON","stringify","parse","getItem","this","nextElements","scene","Scene","draggingElement","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","currentItemStrokeStyle","currentItemRoughness","currentItemOpacity","Canvas","memo","canvasRef","useRef","canvasContainer","useEffect","current","offsetWidth","offsetHeight","getElementsIncludingDeleted","selectionColor","viewBackgroundColor","wrap","handleWheel","e","preventDefault","addEventListener","passive","removeEventListener","createGenericElementOnPointerDown","elementType","pointerDownState","strokeColor","backgroundColor","roughness","angle","groupIds","boundElements","link","locked","rest","id","version","versionNonce","isDeleted","updated","Date","now","newElement","origin","replaceAllElements","onPointerUpFromCanvasPointerDownHandler","event","eventListeners","onMove","onUp","onPointerMoveFromCanvasPointerDownHandler","pointerCoords","lastCoords","maybeDragNewGenericElement","originX","originY","shouldMaintainAspectRatio","shouldResizeFromCenter","widthAspectRatio","updates","key","value","mutateElement","dragNewElement","initialPointerDownState","onKeyUp","onKeyDown","ref","className","onWheel","deltaX","deltaY","onPointerDown","onPointerMove","onPointerUp"],"sourceRoot":""}