{"version":3,"file":"static/js/Canvas.6bc0ea77.chunk.js","mappings":"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","sources":["pages/canvas/util.js","pages/canvas/element/newElement.js","pages/canvas/renderer/renderElement.js","pages/canvas/renderer/renderScene.js","webpack://excalidraw-app/./src/pages/canvas/components/tools/index.module.less?8991","pages/canvas/components/icons/index.jsx","util/export.js","pages/canvas/scene/scene.js","pages/canvas/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/textarea/index.module.less?82b0","pages/canvas/components/textarea/index.jsx","pages/canvas/index.jsx","util/index.js"],"sourcesContent":["export const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\nlet testIdBase = 0;\n\nexport const randomId = () => `id${testIdBase++}`;\n","import { randomId } from \"../util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = {\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    // x: opts.x - offsets.x,\n    // y: opts.y - offsets.y,\n    // width: metrics.width,\n    // height: metrics.height,\n    // baseline: metrics.baseline,\n    containerId: opts.containerId || null,\n    originalText: opts.text,\n    ...opts,\n  };\n\n  return textElement;\n};\n","import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nconst elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const zoom = renderConfig.zoom || 1;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  if (prevElementWithCanvas) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(element, zoom, renderConfig);\n\n  elementWithCanvasCache.set(element, elementWithCanvas);\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    // rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  // rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width = distance(x1, x2) * window.devicePixelRatio + padding * 2;\n    canvas.height = distance(y1, y2) * window.devicePixelRatio + padding * 2;\n    canvasOffsetX =\n      element.x > x1 ? distance(element.x, x1) * window.devicePixelRatio : 0;\n\n    canvasOffsetY =\n      element.y > y1 ? distance(element.y, y1) * window.devicePixelRatio : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom + padding * zoom * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom + padding * zoom * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom, padding * zoom);\n\n  context.scale(window.devicePixelRatio * zoom, window.devicePixelRatio * zoom);\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\n\n\nexport const drawAxis = (ctx, { scrollX, scrollY }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (let i = 1; i < (canvas.height - scrollY) / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (let i = 1; i < (canvas.width - scrollX) / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  // Apply zoom\n  context.save();\n  context.scale(renderConfig.zoom, renderConfig.zoom);\n  drawAxis(context, renderConfig);\n\n  // render element\n  elements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  // Reset zoom\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__ZQUTr\",\"item\":\"index_item__JCc41\",\"selected\":\"index_selected__uL6n6\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n}\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps,\n);","import { getCommonBounds, distance } from \"./index\";\nimport { renderScene } from '@/pages/canvas/renderer/renderScene'\nconst getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const exportPng = ({ elements, appState }) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  console.log(\"export...\", minX, minY, width, height);\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  // const context = canvas.getContext(\"2d\");\n  // context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: 1,\n    },\n  });\n  console.log(\"导出\", elements);\n  var a = document.createElement(\"a\");\n  a.href = canvas.toDataURL();\n  a.download = \"canvas.png\";\n  a.click();\n};\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <>\n      <div className={styles.scale}>\n        缩放\n      </div>\n      <div className={styles.tools}>\n        <span\n          className={[styles.item].join(\" \")}\n          onClick={() => {\n            exportPng({\n              elements: scene.getElementsIncludingDeleted(),\n              appState\n            });\n          }}\n        >\n          {ExportImageIcon}\n        </span>\n        {SHAPES.map((shape) => (\n          <span\n            key={shape.type}\n            className={[\n              styles.item,\n              activeTool.type === shape.type && styles.selected,\n            ].join(\" \")}\n            onClick={() => onActiveToolChange({ type: shape.type })}\n          >\n            {shape.icon}\n          </span>\n        ))}\n      </div>\n    </>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__b45r1\",\"textarea_copy\":\"index_textarea_copy__REiTG\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache } from \"../../renderer/renderElement\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ staticCanvasRef }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const styleObj = {\n        font: getFontString(element),\n        left: `${sceneX}px`,\n        top: `${sceneY}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - sceneX;\n      textarea.style.maxWidth = `${maxWidth}px`;\n      textarea.style.width = `${element.fontSize}px`;\n      textarea.style.height = `${element.fontSize * 1.2}px`;\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          // console.log(\"tex5....\", text, text.length);\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              console.log(\"正常的输入\");\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              console.log(\"粘贴进来的文本\");\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              console.log(\"splitResult..\", splitResult);\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: 1,\n              },\n            });\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            width: \"20px\",\n            height: `30px`,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { viewportCoordsToSceneCoords, distance } from \"./util\";\nimport { withBatchedUpdatesThrottled } from \"@/util\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport { deleteElementCache } from \"./renderer/renderElement\";\nimport Tools from \"./components/tools\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const textareaRef = useRef(null);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: 1,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: 1,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (!activeTool.type) return;\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: 1,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n      console.log(\"pointer up appState...\", appState);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: 1,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n        >\n          动态canvas\n        </canvas>\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} staticCanvasRef={staticCanvasRef} />\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;\n\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};"],"names":["viewportCoordsToSceneCoords","clientX","clientY","offsetLeft","offsetTop","x","scrollX","y","scrollY","distance","Math","abs","testIdBase","newElement","type","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","id","isDeleted","elementWithCanvasCache","WeakMap","deleteElementCache","element","delete","generateElementWithCanvas","renderConfig","zoom","prevElementWithCanvas","get","elementWithCanvas","generateElementCanvas","set","rightContainer","document","getElementById","canvas","createElement","context","getContext","padding","getCanvasPadding","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","window","devicePixelRatio","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeRect","font","getFontString","textAlign","lines","text","split","lineHeight","length","textBaseline","index","fillText","forEach","point","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","renderScene","elements","appState","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","rectH","rectW","beginPath","i","drawAxis","renderElement","localStorage","setItem","JSON","stringify","createIcon","d","opts","style","mirror","rest","focusable","role","viewBox","fill","RectangleIcon","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","exportPng","exportPadding","getCommonBounds","minX","minY","maxX","maxY","getCanvasSize","console","log","selectionColor","viewBackgroundColor","a","href","toDataURL","download","click","Scene","parse","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","join","onClick","getElementsIncludingDeleted","map","shape","Index","forwardRef","ref","staticCanvasRef","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","event","preventDefault","stopPropagation","sceneX","sceneY","rgb","fontSize","fontFamily","verticalAlign","containerId","originalText","draggingElement","textarea","current","focus","styleObj","left","top","color","Object","assign","copyTextarea","maxWidth","canvasWidth","onChange","e","target","value","parseFloat","innerText","copyTextWidth","getBoundingClientRect","slice","splitResult","line","push","lastIdx","str","onBlur","offsetWidth","offsetHeight","replaceAllElements","setTimeout","background","contentEditable","canvasHeight","Canvas","canvasRef","canvasContainer","setActiveTool","useEffect","setCanvasSize","wrap","handleWheel","addEventListener","passive","removeEventListener","onPointerMoveFromCanvasPointerDownHandler","pointerDownState","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","origin","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","onWheel","deltaX","deltaY","onPointerDown","elementType","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","onPointerMove","onPointerUp","onDoubleClick","r","floor","random","g","b","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","requestAnimationFrame","ret","trailing","flush","cancelAnimationFrame","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","p","min","max","rotate","cos","sin","x11","y11","x12","y12","x22","y22","x21","y21","getElementBounds","randomId","__generateExcalidrawElements","ele","xs","ys","getSizeFromPoints","roughness","groupIds","roundness","seed","version","versionNonce","boundElements","updated","Date","now","link","locked","pressures","simulatePressure","lastCommittedPoint"],"sourceRoot":""}