{"version":3,"file":"static/js/file.worker.34d42beb.worker.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/performance/offscreen-canvas/worker/util.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","pages/performance/offscreen-canvas/worker/renderElement.js","pages/performance/offscreen-canvas/worker/renderScene.js","pages/performance/offscreen-canvas/worker/file.worker.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\nexport const distance = (x, y) => Math.abs(x - y);\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { getElementAbsoluteCoords, distance, getFontString } from \"./util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nexport let elementWithCanvasCache = {};\n\nexport const deleteElementCache = (element) => {\n  delete elementWithCanvasCache[element.id]\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = {};\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache[element.id];\n  // 导出图片时，默认zoom为1，因此这里加个notusecache配置重新生成canvas\n  if (prevElementWithCanvas && !renderConfig.notUseCache) {\n    console.log('worker复用cache===========================')\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n  if (!renderConfig.notUseCache) {\n    elementWithCanvasCache[element.id] = elementWithCanvas;\n  }\n\n  return elementWithCanvas;\n};\n// for worker\nconst isWindow = typeof document === \"object\";\n\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const devicePixelRatio = isWindow\n    ? window.devicePixelRatio\n    : renderConfig.devicePixelRatio;\n\n  const padding = getCanvasPadding(element);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  let canvas;\n  let context;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas = new OffscreenCanvas(\n      distance(x1, x2) * devicePixelRatio * zoom.value +\n        padding * zoom.value * 2,\n      distance(y1, y2) * devicePixelRatio * zoom.value +\n        padding * zoom.value * 2\n    );\n    context = canvas.getContext(\"2d\");\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas = new OffscreenCanvas(\n      element.width * devicePixelRatio * zoom.value + padding * zoom.value * 2,\n      element.height * devicePixelRatio * zoom.value + padding * zoom.value * 2\n    );\n    context = canvas.getContext(\"2d\");\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(devicePixelRatio * zoom.value, devicePixelRatio * zoom.value);\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = renderConfig.strokeStyle || element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = renderConfig.fillStyle || element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = renderConfig.strokeStyle || element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const devicePixelRatio = isWindow\n    ? window.devicePixelRatio\n    : renderConfig.devicePixelRatio;\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * devicePixelRatio;\n  context.save();\n  context.scale(1 / devicePixelRatio, 1 / devicePixelRatio);\n  context.translate(cx, cy);\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import {\n  renderElement,\n  elementWithCanvasCache,\n  deleteElementCache,\n} from \"./renderElement\";\nimport { getElementBounds, viewportCoordsToSceneCoords } from \"./util\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (\n    let i = 1;\n    i < (canvas.height - scrollY * zoom.value) / (rectH * zoom.value);\n    i++\n  ) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (\n    let i = 1;\n    i < (canvas.width - scrollX * zoom.value) / (rectW * zoom.value);\n    i++\n  ) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nconst isVisibleElement = (\n  element,\n  canvasWidth,\n  canvasHeight,\n  viewTransformations\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  if (!renderConfig.isExport || !elements) {\n    // drawAxis(context, renderConfig);\n  }\n  if (elements) {\n    const visibleElements = elements.filter((element) => {\n      const isVisible = isVisibleElement(\n        element,\n        normalizedCanvasWidth,\n        normalizedCanvasHeight,\n        {\n          zoom: renderConfig.zoom,\n          offsetLeft: appState.offsetLeft,\n          offsetTop: appState.offsetTop,\n          scrollX: renderConfig.scrollX,\n          scrollY: renderConfig.scrollY,\n        }\n      );\n      const cache = elementWithCanvasCache[element.id];\n      if (isVisible && cache) {\n        if (renderConfig.zoom.value !== cache.canvasZoom.value) {\n          deleteElementCache(element);\n        }\n      }\n      return isVisible;\n    });\n    // const total = document.getElementById(\"canvas-total\");\n    // total.innerText = `总元素数：${elements.length}   实际绘制元素总数：${visibleElements.length}`;\n    console.log(\n      `worker绘制元素总数：${elements.length}，实际绘制元素总数：${visibleElements.length}`\n    );\n    visibleElements.forEach((element) => {\n      renderElement(element, context, renderConfig, appState);\n    });\n  }\n\n  context.restore();\n\n  context.restore();\n  if (elements) {\n    // localStorage.setItem(\"elements\", JSON.stringify(elements));\n  }\n  //   localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","import { renderScene } from \"./renderScene\";\n\nlet canvas = null;\nlet canvasImg = null;\n/*eslint-disable*/\nself.onmessage = (event) => {\n  const {\n    elements,\n    canvasWorker,\n    canvasImgWorker,\n    appState,\n    scale,\n    renderConfig,\n    type,\n  } = event.data;\n  // 渲染静态的canvas\n  if (type === \"init\" || type === \"redraw\") {\n    if (canvasWorker) {\n      canvas = canvasWorker;\n    }\n\n    renderScene({\n      elements,\n      appState,\n      scale,\n      canvas,\n      renderConfig,\n    });\n  }\n\n  // 全量生成图片\n  if (type === \"init-img\" || type === \"redraw-img\") {\n    if (canvasImgWorker) {\n      canvasImg = canvasImgWorker;\n    }\n\n    renderScene({\n      elements,\n      appState,\n      scale,\n      canvasImg,\n      renderConfig,\n    });\n    postMessage({ type: 'img-finish' });\n  }\n};\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","TypeError","getBoundsFromPoints","element","minX","Infinity","minY","maxX","maxY","points","type","map","p","x","y","allowArrayLike","it","F","s","e","f","normalCompletion","didErr","step","_e2","Math","min","max","distance","abs","getElementAbsoluteCoords","x1","y1","x2","y2","width","height","rotate","angle","cos","sin","viewportCoordsToSceneCoords","clientX","clientY","zoom","offsetLeft","offsetTop","scrollX","scrollY","zoomValue","elementWithCanvasCache","generateElementWithCanvas","renderConfig","prevElementWithCanvas","id","notUseCache","console","log","elementWithCanvas","generateElementCanvas","isWindow","document","canvas","context","devicePixelRatio","window","padding","getCanvasPadding","canvasOffsetX","canvasOffsetY","OffscreenCanvas","getContext","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeWidth","strokeStyle","strokeRect","font","fontSize","fontFamily","getFontString","fillStyle","strokeColor","textAlign","lines","text","split","lineHeight","textBaseline","index","fillText","forEach","point","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","isVisibleElement","canvasWidth","canvasHeight","viewTransformations","x11","y11","x12","y12","x22","y22","x21","y21","getElementBounds","topLeftSceneCoords","bottomRightSceneCoords","renderScene","elements","appState","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","isExport","visibleElements","filter","isVisible","cache","deleteElementCache","renderElement","canvasImg","self","onmessage","event","canvasWorker","canvasImgWorker","data","postMessage"],"sourceRoot":""}