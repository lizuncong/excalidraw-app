{"version":3,"file":"static/js/DrawImage.b5be0139.chunk.js","mappings":"uSAkDA,MAvCA,SAAgB,GAAU,IAARA,EAAG,EAAHA,IAChB,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KAQxB,OAPAC,EAAAA,EAAAA,YAAU,WACRC,MAAML,GACHM,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACE,GACLL,EAAUK,EACZ,GACJ,GAAG,CAACR,KAEF,gBAAKS,UAAU,gBAAe,UAC5B,SAAC,IAAa,CACZC,SAAUR,EACVS,cAAe,CAACC,EAAAA,GAChBC,cAAe,CAACC,EAAAA,GAChBC,WAAY,CACVC,KAAI,YAAO,EAAJC,KAAgD,IAA1CC,EAAM,EAANA,OAAQT,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAAaS,GAAK,YAC1CC,EAAQ,iBAAiBC,KAAKZ,GAAa,IACjD,OAAQS,GAAUE,GAChB,SAAC,KAAiB,QAChBV,SAAUY,OAAOZ,GAAUa,QAAQ,MAAO,IAE1CC,SAAUJ,EAAM,GAChBX,UAAU,UACVgB,OAAO,OACHN,KAGN,iCAAMV,UAAWA,GAAeU,GAAK,aAClCT,IAGP,MAKV,C,8LCEagB,EAA8B,SAACC,GAC1C,OAlDyB,SAACC,EAAIC,GAC9B,IAAIC,EAAU,KACVC,EAAW,KACXC,EAAmB,KAEjBC,EAAe,SAAfA,EAAgBC,GACpBJ,EAAUK,OAAOC,uBAAsB,WACrCN,EAAU,KACVF,EAAE,qBAAIM,IACNH,EAAW,KACPC,IACFD,EAAWC,EACXA,EAAmB,KACnBC,EAAaF,GAEjB,GACF,EAEMM,EAAM,WAAc,IAAD,uBAATH,EAAI,yBAAJA,EAAI,gBAKlBH,EAAWG,EACK,OAAZJ,EACFG,EAAaF,GACA,OAAJF,QAAI,IAAJA,GAAAA,EAAMS,WACfN,EAAmBE,EAEvB,EAkBA,OAjBAG,EAAIE,MAAQ,WACM,OAAZT,IACFU,qBAAqBV,GACrBA,EAAU,MAERC,IACFH,EAAE,qBAAKI,GAAoBD,IAC3BA,EAAWC,EAAmB,KAElC,EACAK,EAAII,OAAS,WACXV,EAAWC,EAAmB,KACd,OAAZF,IACFU,qBAAqBV,GACrBA,EAAU,KAEd,EACOO,CACT,CAESK,EAAY,SAACC,IAClBC,EAAAA,EAAAA,yBAAwBjB,EAAMgB,EAChC,GACF,EAiBaE,EAA2B,SAACC,GACvC,MAhBiC,SAACC,GAClC,IAI2B,EAJvBC,EAAOC,IACPC,EAAOD,IACPE,GAAO,IACPC,GAAO,IAAU,UACAL,GAAM,IAA3B,2BAA6B,CAAC,IAAD,qBAAjBM,EAAC,KAAEC,EAAC,KACdN,EAAOO,KAAKC,IAAIR,EAAMK,GACtBH,EAAOK,KAAKC,IAAIN,EAAMI,GACtBH,EAAOI,KAAKE,IAAIN,EAAME,GACtBD,EAAOG,KAAKE,IAAIL,EAAME,EACxB,CAAC,+BAED,MAAO,CAACN,EAAME,EAAMC,EAAMC,EAC5B,CAGmCM,CAAoBZ,EAAQC,QAAO,eAA7DC,EAAI,KAAEE,EAAI,KAAEC,EAAI,KAAEC,EAAI,KACvBO,EAAKX,EAAOF,EAAQO,EACpBO,EAAKV,EAAOJ,EAAQQ,EACpBO,EAAKV,EAAOL,EAAQO,EACpBS,EAAKV,EAAON,EAAQQ,EAC1B,MAAO,CAACK,EAAIC,EAAIC,EAAIC,GAAKH,EAAKE,GAAM,GAAID,EAAKE,GAAM,EACrD,EAEaC,EAAW,SAACV,EAAGC,GAAC,OAAKC,KAAKS,IAAIX,EAAIC,EAAG,EC9E9CW,EAAgB,KAiGpB,EAPoB,SAACC,EAAQC,GAC3B,IAAMC,EAAUF,EAAOG,WAAW,MAClCD,EAAQE,UAAU,EAAG,EAAGJ,EAAOK,MAAOL,EAAOM,QA3FxB,SAACC,EAAKN,GAC3BO,EAAAA,SAAiB,SAACC,GAEhB,IAAMT,EAASU,SAASC,cAAc,UAChCT,EAAUF,EAAOG,WAAW,MAE5BS,EAAqBF,SAASG,eAAe,aAE/Cd,GACFa,EAAmBE,YAAYf,GAEjCA,EAAgBC,EAChBY,EAAmBG,YAAYhB,GAE/B,IAMIiB,EACAC,EAPJ,EAAuBtC,GAAyB,kBAC3C8B,GAAG,IACN5B,OAAQ4B,EAAI5B,OAAOqC,KAAI,SAAAC,GACrB,MAAO,CAACA,EAAE,GAAKV,EAAItB,EAAGgC,EAAE,GAAKV,EAAIrB,EACnC,OACA,eALGK,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAQbwB,EAAU,GAChBpB,EAAOK,MAAQR,EAASJ,EAAIE,GAAM1B,OAAOoD,iBAAmBD,GAC5DpB,EAAOM,OAAST,EAASH,EAAIE,GAAM3B,OAAOoD,iBAAmBD,GAC7DJ,EACEP,EAAItB,EAAIM,EAAKI,EAASY,EAAItB,EAAGM,GAAMxB,OAAOoD,iBAAmB,EAE/DJ,EACER,EAAIrB,EAAIM,EAAKG,EAASY,EAAIrB,EAAGM,GAAMzB,OAAOoD,iBAAmB,EAE/DnB,EAAQoB,UAAUN,EAAeC,GACjCf,EAAQqB,OACRrB,EAAQoB,UAAUF,EAASA,GAC3BlB,EAAQsB,MAAMvD,OAAOoD,iBAAkBpD,OAAOoD,kBAE9CnB,EAAQuB,UAAY,EACpBvB,EAAQwB,YAAcjB,EAAIiB,YAC1BjB,EAAI5B,OAAO8C,SAAQ,SAACC,EAAOC,GACzB,cAAaD,EAAK,GAAbzC,EAAC,KAAEC,EAAC,KACTD,GAAQsB,EAAItB,EACZC,GAAQqB,EAAIrB,EACPyC,EAGH3B,EAAQ4B,OAAO3C,EAAGC,GAFlBc,EAAQ6B,OAAO5C,EAAGC,EAItB,IAEAc,EAAQ8B,SAER9B,EAAQ+B,UAGRxC,EAAKJ,KAAK6C,MAAMzC,GAChBE,EAAKN,KAAK8C,KAAKxC,GACfD,EAAKL,KAAK6C,MAAMxC,GAChBE,EAAKP,KAAK8C,KAAKvC,GACf,IAAMwC,IAAO3C,EAAKE,GAAM,EAAIM,EAASoC,SAAWpE,OAAOoD,iBACjDiB,IAAO5C,EAAKE,GAAM,EAAIK,EAASsC,SAAWtE,OAAOoD,iBAEvDd,EAAIgB,OACJhB,EAAIiB,MAAM,EAAIvD,OAAOoD,iBAAkB,EAAIpD,OAAOoD,kBAClDd,EAAIe,UAAUc,EAAIE,GAElB/B,EAAIiC,UACFxC,IACGL,EAAKF,GAAM,EAAKxB,OAAOoD,iBAAmBD,IAC1CxB,EAAKF,GAAM,EAAKzB,OAAOoD,iBAAmBD,EAC7CpB,EAAOK,MACPL,EAAOM,QAgBTC,EAAI0B,SACN,GACF,CAIEQ,CAAevC,EAASD,GACxByC,aAAaC,QAAQ,qBAAsBC,KAAKC,UAAUrC,GAC5D,E,SC1FaA,EACXoC,KAAKE,MAAMJ,aAAaK,QAAQ,wBAA0B,GACtD9C,EAAW,CACf+C,WAAY,EACZC,UAAW,EACXZ,QAAS,EACTE,QAAS,EACTW,gBAAiB,MAyGnB,GAvGeC,EAAAA,EAAAA,OAAK,WAClB,IAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAkBD,EAAAA,EAAAA,QAAO,OAC/BnH,EAAAA,EAAAA,YAAU,WAER,IAAM8D,EAASoD,EAAUG,QACnBrD,EAAUF,EAAOG,WAAW,MAC1BqD,EAAqDxD,EAArDwD,YAAaC,EAAwCzD,EAAxCyD,aAAcT,EAA0BhD,EAA1BgD,WAAYC,EAAcjD,EAAdiD,UAC/CjD,EAAOK,MAAQmD,EAAcvF,OAAOoD,iBACpCrB,EAAOM,OAASmD,EAAexF,OAAOoD,iBACtCnB,EAAQsB,MAAMvD,OAAOoD,iBAAkBpD,OAAOoD,kBAC9CpB,EAAS+C,WAAaA,EACtB/C,EAASgD,UAAYA,EACrBS,EAAY1D,EAAQC,GAGpB,IAAM0D,EAAOL,EAAgBC,QACvBK,EAAc,SAACC,GACnBA,EAAEC,gBACJ,EAKA,OAHAH,EAAKI,iBAAiB,QAASH,EAAa,CAC1CI,SAAS,IAEJ,WACLL,EAAKM,oBAAoB,QAASL,EACpC,CACF,GAAG,IACH,IAiCMM,EAA4C,SAACC,GAAgB,OACjE3G,GAA4B,SAACiB,GAC3B,IAAM2F,GAAgBC,EAAAA,EAAAA,GAA4B5F,EAAOwB,GAIzDA,EAASiD,gBAAgBrE,OAAOyF,KAAK,CAACF,EAAcjF,EAAGiF,EAAchF,IACrEsE,EAAYN,EAAUG,QAAStD,EACjC,GAAG,EAECsE,EAA0C,SAACJ,GAAgB,OAAK,WACpEK,QAAQC,IAAI,cAAexE,GAC3BuE,QAAQC,IACN,cACAjE,EAASU,KAAI,SAACT,GAAG,OAAKA,EAAI5B,OAAO6F,MAAM,KAEzCzG,OAAOgG,oBACL,cACAE,EAAiBQ,eAAeC,QAElC3G,OAAOgG,oBACL,YACAE,EAAiBQ,eAAeE,KAEpC,CAAE,EACF,OACE,iBAAKtI,UAAU,YAAW,WACxB,gBAAKA,UAAU,YAAYuI,IAAKxB,EAAgB,UAC9C,mBACEwB,IAAK1B,EACL7G,UAAU,SACVwI,cAhEwB,SAACtG,GAC/B,IAAMuG,GAASX,EAAAA,EAAAA,GAA4B5F,EAAOwB,GAE5CkE,EAAmB,CACvBa,OAAAA,EACAC,YAAW,UAAMD,GACjBL,eAAgB,CACdC,OAAQ,KACRC,KAAM,OAGJjG,EAAU,CACdO,EAAGgF,EAAiBa,OAAO7F,EAC3BC,EAAG+E,EAAiBa,OAAO5F,EAC3BP,OAAQ,CAAC,CAACsF,EAAiBa,OAAO7F,EAAIgF,EAAiBa,OAAO5F,IAC9D8F,YAAa,UACbC,gBAAiB,cACjBC,UAAW,UACXC,YAAa,EACb3D,aAAa4D,EAAAA,EAAAA,MAEfrF,EAASiD,gBAAkBtE,EAC3B4B,EAAS8D,KAAK1F,GAEd,IAAM2G,EACJrB,EAA0CC,GACtCqB,EACJjB,EAAwCJ,GAC1ClG,OAAO8F,iBAAiB,cAAewB,GACvCtH,OAAO8F,iBAAiB,YAAayB,GACrCrB,EAAiBQ,eAAeC,OAASW,EACzCpB,EAAiBQ,eAAeE,KAAOW,CACzC,EAgC+C,mCAK3C,gBAAKC,GAAG,eACR,SAAC,IAAQ,CAAC3J,IAAK4J,MAGrB,G,4ECrHO,IAAMrB,EAA8B,SAAH,KAGlC,IAFFsB,EAAO,EAAPA,QAASC,EAAO,EAAPA,QACT5C,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAId,MAAO,CAAE9D,EAFCwG,EAAU3C,EAFY,EAAPX,QAIbjD,EADFwG,EAAU3C,EAHqB,EAAPV,QAKpC,EAGa+C,EAAM,WACjB,IAAMO,EAAIxG,KAAK6C,MAAsB,IAAhB7C,KAAKyG,UACpBC,EAAI1G,KAAK6C,MAAsB,IAAhB7C,KAAKyG,UACpBE,EAAI3G,KAAK6C,MAAsB,IAAhB7C,KAAKyG,UAC1B,MAAM,OAAN,OAAcD,EAAC,YAAIE,EAAC,YAAIC,EAAC,IAC3B,C","sources":["components/markdown/index.jsx","pages/free-draw/draw-image/util.js","pages/free-draw/draw-image/renderScene.js","pages/free-draw/draw-image/index.jsx","util/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport rehypeRaw from \"rehype-raw\";\n// import { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"github-markdown-css\";\n\nimport './index.less'\n\n\nfunction Shapes({ src }) {\n  const [mdText, setMdText] = useState(\"\");\n  useEffect(() => {\n    fetch(src)\n      .then((response) => response.text())\n      .then((text) => {\n        setMdText(text);\n      });\n  }, [src]);\n  return (\n    <div className=\"markdown-body\">\n      <ReactMarkdown\n        children={mdText}\n        rehypePlugins={[rehypeRaw]}\n        remarkPlugins={[remarkGfm]}\n        components={{\n          code({ node, inline, className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return !inline && match ? (\n              <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                // style={{ background: 'red'}}\n                language={match[1]}\n                className=\"my-code\"\n                PreTag=\"div\"\n                {...props}\n              />\n            ) : (\n              <code className={className} {...props}>\n                {children}\n              </code>\n            );\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Shapes;\n","import { unstable_batchedUpdates } from \"react-dom\";\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (points) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getElementAbsoluteCoords = (element) => {\n  const [minX, minY, maxX, maxY] = getBoundsFromPoints(element.points);\n  const x1 = minX + element.x;\n  const y1 = minY + element.y;\n  const x2 = maxX + element.x;\n  const y2 = maxY + element.y;\n  return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n","import { elements } from \"./index\";\nimport { getElementAbsoluteCoords, distance } from \"./util\";\nlet previewCanvas = null;\nconst renderElements = (ctx, appState) => {\n  elements.forEach((ele) => {\n    // 离屏canvas绘制\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n\n    const offscreenContainer = document.getElementById(\"offscreen\");\n\n    if (previewCanvas) {\n      offscreenContainer.removeChild(previewCanvas);\n    }\n    previewCanvas = canvas;\n    offscreenContainer.appendChild(previewCanvas);\n\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords({\n      ...ele,\n      points: ele.points.map(p => {\n        return [p[0] - ele.x, p[1] - ele.y]\n      })\n    });\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    const padding = 20;\n    canvas.width = distance(x1, x2) * window.devicePixelRatio + padding * 2;\n    canvas.height = distance(y1, y2) * window.devicePixelRatio + padding * 2;\n    canvasOffsetX =\n      ele.x > x1 ? distance(ele.x, x1) * window.devicePixelRatio : 0;\n\n    canvasOffsetY =\n      ele.y > y1 ? distance(ele.y, y1) * window.devicePixelRatio : 0;\n\n    context.translate(canvasOffsetX, canvasOffsetY);\n    context.save();\n    context.translate(padding, padding);\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n    context.lineWidth = 3;\n    context.strokeStyle = ele.strokeStyle;\n    ele.points.forEach((point, index) => {\n      let [x, y] = point;\n      x = x - ele.x;\n      y = y - ele.y;\n      if (!index) {\n        context.moveTo(x, y);\n      } else {\n        context.lineTo(x, y);\n      }\n    });\n\n    context.stroke();\n\n    context.restore();\n\n    // 真正绘制\n    x1 = Math.floor(x1);\n    x2 = Math.ceil(x2);\n    y1 = Math.floor(y1);\n    y2 = Math.ceil(y2);\n    const cx = ((x1 + x2) / 2 + appState.scrollX) * window.devicePixelRatio;\n    const cy = ((y1 + y2) / 2 + appState.scrollY) * window.devicePixelRatio;\n\n    ctx.save();\n    ctx.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n    ctx.translate(cx, cy);\n\n    ctx.drawImage(\n      canvas,\n      (-(x2 - x1) / 2) * window.devicePixelRatio - padding,\n      (-(y2 - y1) / 2) * window.devicePixelRatio - padding,\n      canvas.width,\n      canvas.height\n    );\n    // ctx.beginPath();\n    // ctx.lineWidth = 3;\n    // ctx.strokeStyle = \"blue\";\n\n    // ele.points.forEach((point, index) => {\n    //   if (!index) {\n    //     ctx.moveTo(...ele.points[0]);\n    //   } else {\n    //     ctx.lineTo(...point);\n    //   }\n    // });\n\n    // ctx.stroke();\n\n    ctx.restore();\n  });\n};\nconst renderScene = (canvas, appState) => {\n  const context = canvas.getContext(\"2d\");\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  renderElements(context, appState);\n  localStorage.setItem(\"free-draw-elements\", JSON.stringify(elements));\n};\n\nexport default renderScene;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport { viewportCoordsToSceneCoords, rgb } from \"@/util\";\nimport MarkDown from \"@/components/markdown\";\nimport doc from \"@doc/canvas进阶/点稀释.md\";\nimport \"./index.less\";\nimport renderScene from \"./renderScene\";\nimport { withBatchedUpdatesThrottled } from \"./util\";\nexport const elements =\n  JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\nconst appState = {\n  offsetLeft: 0,\n  offsetTop: 0,\n  scrollX: 0,\n  scrollY: 0,\n  draggingElement: null,\n};\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  useEffect(() => {\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const { offsetWidth, offsetHeight, offsetLeft, offsetTop } = canvas;\n    canvas.width = offsetWidth * window.devicePixelRatio;\n    canvas.height = offsetHeight * window.devicePixelRatio;\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    appState.offsetLeft = offsetLeft;\n    appState.offsetTop = offsetTop;\n    renderScene(canvas, appState);\n\n    // 防止双指滑动时切换页面\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasPointerDown = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n\n    const pointerDownState = {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n      },\n    };\n    const element = {\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x,  pointerDownState.origin.y]],\n      strokeColor: \"#000000\",\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: rgb(),\n    };\n    appState.draggingElement = element;\n    elements.push(element);\n\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      // const draggingElement = appState.draggingElement;\n      // const dx = pointerCoords.x - draggingElement.x;\n      // const dy = pointerCoords.y - draggingElement.y;\n      appState.draggingElement.points.push([pointerCoords.x, pointerCoords.y]);\n      renderScene(canvasRef.current, appState);\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler = (pointerDownState) => () => {\n    console.log(\"appState...\", appState);\n    console.log(\n      \"elements...\",\n      elements.map((ele) => ele.points.length)\n    );\n    window.removeEventListener(\n      \"pointermove\",\n      pointerDownState.eventListeners.onMove\n    );\n    window.removeEventListener(\n      \"pointerup\",\n      pointerDownState.eventListeners.onUp\n    );\n  };\n  return (\n    <div className=\"free-draw\">\n      <div className=\"container\" ref={canvasContainer}>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas\"\n          onPointerDown={handleCanvasPointerDown}\n        >\n          绘制canvas\n        </canvas>\n      </div>\n      <div id=\"offscreen\"></div>\n      <MarkDown src={doc} />\n    </div>\n  );\n});\n\nexport default Canvas;\n","export const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n"],"names":["src","useState","mdText","setMdText","useEffect","fetch","then","response","text","className","children","rehypePlugins","rehypeRaw","remarkPlugins","remarkGfm","components","code","node","inline","props","match","exec","String","replace","language","PreTag","withBatchedUpdatesThrottled","func","fn","opts","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","window","requestAnimationFrame","ret","trailing","flush","cancelAnimationFrame","cancel","throttleRAF","event","unstable_batchedUpdates","getElementAbsoluteCoords","element","points","minX","Infinity","minY","maxX","maxY","x","y","Math","min","max","getBoundsFromPoints","x1","y1","x2","y2","distance","abs","previewCanvas","canvas","appState","context","getContext","clearRect","width","height","ctx","elements","ele","document","createElement","offscreenContainer","getElementById","removeChild","appendChild","canvasOffsetX","canvasOffsetY","map","p","padding","devicePixelRatio","translate","save","scale","lineWidth","strokeStyle","forEach","point","index","lineTo","moveTo","stroke","restore","floor","ceil","cx","scrollX","cy","scrollY","drawImage","renderElements","localStorage","setItem","JSON","stringify","parse","getItem","offsetLeft","offsetTop","draggingElement","memo","canvasRef","useRef","canvasContainer","current","offsetWidth","offsetHeight","renderScene","wrap","handleWheel","e","preventDefault","addEventListener","passive","removeEventListener","onPointerMoveFromCanvasPointerDownHandler","pointerDownState","pointerCoords","viewportCoordsToSceneCoords","push","onPointerUpFromCanvasPointerDownHandler","console","log","length","eventListeners","onMove","onUp","ref","onPointerDown","origin","lastCoords","strokeColor","backgroundColor","fillStyle","strokeWidth","rgb","onPointerMove","onPointerUp","id","doc","clientX","clientY","r","random","g","b"],"sourceRoot":""}