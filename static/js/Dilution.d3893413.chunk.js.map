{"version":3,"file":"static/js/Dilution.d3893413.chunk.js","mappings":"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","sources":["components/markdown/index.jsx","pages/free-draw/dilution/renderScene.js","pages/free-draw/dilution/util.js","pages/free-draw/dilution/index.jsx","util/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport rehypeRaw from \"rehype-raw\";\n// import { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"github-markdown-css\";\n\nimport './index.less'\n\n\nfunction Shapes({ src }) {\n  const [mdText, setMdText] = useState(\"\");\n  useEffect(() => {\n    fetch(src)\n      .then((response) => response.text())\n      .then((text) => {\n        setMdText(text);\n      });\n  }, [src]);\n  return (\n    <div className=\"markdown-body\">\n      <ReactMarkdown\n        children={mdText}\n        rehypePlugins={[rehypeRaw]}\n        remarkPlugins={[remarkGfm]}\n        components={{\n          code({ node, inline, className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return !inline && match ? (\n              <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                // style={{ background: 'red'}}\n                language={match[1]}\n                className=\"my-code\"\n                PreTag=\"div\"\n                {...props}\n              />\n            ) : (\n              <code className={className} {...props}>\n                {children}\n              </code>\n            );\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Shapes;\n","import { elements } from \"./index\";\n\nconst renderElements = (ctx, appState) => {\n  elements.forEach((ele) => {\n    ctx.save();\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = ele.strokeStyle;\n\n    ele.points.forEach((point, index) => {\n      if (!index) {\n        ctx.moveTo(...ele.points[0]);\n      } else {\n        ctx.lineTo(...point);\n      }\n    });\n\n    ctx.stroke();\n\n    ctx.restore();\n  });\n};\nconst renderScene = (canvas, appState) => {\n  const context = canvas.getContext(\"2d\");\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  renderElements(context, appState);\n  localStorage.setItem(\"free-draw-elements\", JSON.stringify(elements));\n};\n\nexport default renderScene;\n","import { unstable_batchedUpdates } from \"react-dom\";\nexport const throttleRAF = (\n  fn,\n  opts,\n) => {\n  let timerId = null;\n  let lastArgs= null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF(((event) => {\n    unstable_batchedUpdates(func, event);\n  }));\n}","import React, { memo, useRef, useEffect } from \"react\";\nimport { viewportCoordsToSceneCoords, rgb } from \"@/util\";\nimport MarkDown from \"@/components/markdown\";\nimport doc from \"@doc/canvas进阶/点稀释.md\";\nimport \"./index.less\";\nimport renderScene from \"./renderScene\";\nimport { withBatchedUpdatesThrottled } from './util'\nexport const elements = JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\nconst appState = {\n  offsetLeft: 0,\n  offsetTop: 0,\n  scrollX: 0,\n  scrollY: 0,\n  draggingElement: null,\n};\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  useEffect(() => {\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const { offsetWidth, offsetHeight, offsetLeft, offsetTop } = canvas;\n    canvas.width = offsetWidth * window.devicePixelRatio;\n    canvas.height = offsetHeight * window.devicePixelRatio;\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    appState.offsetLeft = offsetLeft;\n    appState.offsetTop = offsetTop;\n    renderScene(canvas, appState);\n\n    // 防止双指滑动时切换页面\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasPointerDown = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n\n    const pointerDownState = {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n      },\n    };\n    const element = {\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: \"#000000\",\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: rgb(),\n    };\n    appState.draggingElement = element;\n    elements.push(element);\n\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n  const onPointerMoveFromCanvasPointerDownHandler =\n    (pointerDownState) => withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n\n      appState.draggingElement.points.push([pointerCoords.x, pointerCoords.y]);\n      renderScene(canvasRef.current, appState);\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler = (pointerDownState) => () => {\n    console.log('appState...', appState)\n    console.log(\"elements...\", elements.map(ele => ele.points.length));\n    window.removeEventListener(\n      \"pointermove\",\n      pointerDownState.eventListeners.onMove\n    );\n    window.removeEventListener(\n      \"pointerup\",\n      pointerDownState.eventListeners.onUp\n    );\n  };\n  return (\n    <div className=\"dilution\">\n      <div className=\"container\" ref={canvasContainer}>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas\"\n          onPointerDown={handleCanvasPointerDown}\n        >\n          绘制canvas\n        </canvas>\n      </div>\n      <MarkDown src={doc} />\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (points) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element.points);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;\n"],"names":["src","useState","mdText","setMdText","useEffect","fetch","then","response","text","className","children","rehypePlugins","rehypeRaw","remarkPlugins","remarkGfm","components","code","node","inline","props","match","exec","String","replace","language","PreTag","canvas","appState","ctx","context","getContext","clearRect","width","height","elements","ele","save","beginPath","lineWidth","strokeStyle","points","forEach","point","index","lineTo","moveTo","stroke","restore","localStorage","setItem","JSON","stringify","withBatchedUpdatesThrottled","func","fn","opts","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","window","requestAnimationFrame","ret","trailing","flush","cancelAnimationFrame","cancel","throttleRAF","event","unstable_batchedUpdates","parse","getItem","offsetLeft","offsetTop","scrollX","scrollY","draggingElement","memo","canvasRef","useRef","canvasContainer","current","offsetWidth","offsetHeight","devicePixelRatio","scale","renderScene","wrap","handleWheel","e","preventDefault","addEventListener","passive","removeEventListener","onPointerMoveFromCanvasPointerDownHandler","pointerDownState","pointerCoords","viewportCoordsToSceneCoords","push","x","y","onPointerUpFromCanvasPointerDownHandler","console","log","map","length","eventListeners","onMove","onUp","ref","onPointerDown","origin","lastCoords","element","strokeColor","backgroundColor","fillStyle","strokeWidth","rgb","onPointerMove","onPointerUp","doc","clientX","clientY","r","Math","floor","random","g","b","getElementAbsoluteCoords","type","minX","Infinity","minY","maxX","maxY","min","max","getBoundsFromPoints","x1","y1","x2","y2","distance","abs","testIdBase","__generateExcalidrawElements","p","xs","ys","getSizeFromPoints","id","angle","roughness","opacity","groupIds","roundness","seed","version","versionNonce","isDeleted","boundElements","updated","Date","now","link","locked","pressures","simulatePressure","lastCommittedPoint"],"sourceRoot":""}