{"version":3,"file":"static/js/MaxSize.f5f899ad.chunk.js","mappings":"uSAkDA,MAvCA,SAAgB,GAAU,IAARA,EAAG,EAAHA,IAChB,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KAQxB,OAPAC,EAAAA,EAAAA,YAAU,WACRC,MAAML,GACHM,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACE,GACLL,EAAUK,EACZ,GACJ,GAAG,CAACR,KAEF,gBAAKS,UAAU,gBAAe,UAC5B,SAAC,IAAa,CACZC,SAAUR,EACVS,cAAe,CAACC,EAAAA,GAChBC,cAAe,CAACC,EAAAA,GAChBC,WAAY,CACVC,KAAI,YAAO,EAAJC,KAAgD,IAA1CC,EAAM,EAANA,OAAQT,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAAaS,GAAK,YAC1CC,EAAQ,iBAAiBC,KAAKZ,GAAa,IACjD,OAAQS,GAAUE,GAChB,SAAC,KAAiB,QAChBV,SAAUY,OAAOZ,GAAUa,QAAQ,MAAO,IAE1CC,SAAUJ,EAAM,GAChBX,UAAU,UACVgB,OAAO,OACHN,KAGN,iCAAMV,UAAWA,GAAeU,GAAK,aAClCT,IAGP,MAKV,C,6LCjBA,MA1BA,WACE,IAAMgB,GAAYC,EAAAA,EAAAA,QAAO,MAezB,OAdAvB,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMwB,EAASF,EAAUG,QAEzBD,EAAOE,MAAQ,MACfF,EAAOG,OAFK,UAEUH,EAAOE,MAC7B,IAAME,EAAMJ,EAAOK,WAAW,MAC9BD,EAAIE,UAAY,MAChBF,EAAIG,SAAS,EAAG,EAAG,IAAK,KACxBC,QAAQC,IAAIT,EAAOU,YAGrB,CAFE,MAAOC,GACPH,QAAQC,IAAI,WAAYE,EAC1B,CACF,GAAG,KAED,iCACE,mBAAQC,IAAKd,EAAWjB,UAAU,SAAQ,iCAG1C,SAAC,IAAQ,CAACT,IAAKyC,MAGrB,C","sources":["components/markdown/index.jsx","pages/max-size/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport rehypeRaw from \"rehype-raw\";\n// import { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"github-markdown-css\";\n\nimport './index.less'\n\n\nfunction Shapes({ src }) {\n  const [mdText, setMdText] = useState(\"\");\n  useEffect(() => {\n    fetch(src)\n      .then((response) => response.text())\n      .then((text) => {\n        setMdText(text);\n      });\n  }, [src]);\n  return (\n    <div className=\"markdown-body\">\n      <ReactMarkdown\n        children={mdText}\n        rehypePlugins={[rehypeRaw]}\n        remarkPlugins={[remarkGfm]}\n        components={{\n          code({ node, inline, className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return !inline && match ? (\n              <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                // style={{ background: 'red'}}\n                language={match[1]}\n                className=\"my-code\"\n                PreTag=\"div\"\n                {...props}\n              />\n            ) : (\n              <code className={className} {...props}>\n                {children}\n              </code>\n            );\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Shapes;\n","import React, { useRef, useEffect } from \"react\";\nimport MarkDown from \"@/components/markdown\";\nimport doc from \"../../../doc/canvas最大尺寸限制.md\";\nimport \"./index.less\";\n\nfunction Index() {\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    try {\n      const canvas = canvasRef.current;\n      const sum = 268496895;\n      canvas.width = 65535;\n      canvas.height = sum / canvas.width;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(0, 0, 300, 300);\n      console.log(canvas.toDataURL());\n    } catch (e) {\n      console.log(\"error===\", e);\n    }\n  }, []);\n  return (\n    <>\n      <canvas ref={canvasRef} className=\"canvas\">\n        绘制canvas\n      </canvas>\n      <MarkDown src={doc} />\n    </>\n  );\n}\n\nexport default Index;\n"],"names":["src","useState","mdText","setMdText","useEffect","fetch","then","response","text","className","children","rehypePlugins","rehypeRaw","remarkPlugins","remarkGfm","components","code","node","inline","props","match","exec","String","replace","language","PreTag","canvasRef","useRef","canvas","current","width","height","ctx","getContext","fillStyle","fillRect","console","log","toDataURL","e","ref","doc"],"sourceRoot":""}