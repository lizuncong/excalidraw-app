{"version":3,"file":"static/js/Eraser.6e8eec53.chunk.js","mappings":"qJAEMA,GAAQC,EAAAA,EAAAA,OAAK,WAgEjB,OA/DAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAASC,SAASC,eAAe,YACjCC,EAAMH,EAAOI,WAAW,MAG9BD,EAAIE,UAAY,MAChBF,EAAIG,SAAS,EAAG,EAAGN,EAAOO,MAAOP,EAAOQ,QAGxC,IACIC,GAAY,EAehB,SAASC,EAAaC,GACpBF,GAAY,EACZG,EAAMD,EACR,CAGA,SAASC,EAAMD,GAIb,IAAIE,EAAGC,EAHFL,IAIU,cAAXE,EAAEI,MACJF,EAAIF,EAAEK,QAAQ,GAAGC,QAAUjB,EAAOkB,WAClCJ,EAAIH,EAAEK,QAAQ,GAAGG,QAAUnB,EAAOoB,YAElCP,EAAIF,EAAEM,QAAUjB,EAAOkB,WACvBJ,EAAIH,EAAEQ,QAAUnB,EAAOoB,WAIzBjB,EAAIkB,OACJlB,EAAImB,YACJnB,EAAIoB,IAAIV,EAAGC,EAtCM,GAsCS,EAAG,EAAIU,KAAKC,IACtCtB,EAAIuB,OAGJvB,EAAIwB,UAAU,EAAG,EAAG3B,EAAOO,MAAOP,EAAOQ,QAGzCL,EAAIyB,UACN,CAGA,SAASC,IACPpB,GAAY,CACd,CA/CAT,EAAO8B,iBAAiB,YAAapB,GACrCV,EAAO8B,iBAAiB,aAAcpB,GAGtCV,EAAO8B,iBAAiB,YAAalB,GACrCZ,EAAO8B,iBAAiB,YAAalB,GAGrCZ,EAAO8B,iBAAiB,UAAWD,GACnC7B,EAAO8B,iBAAiB,WAAYD,EAuCtC,GAAG,KAED,4BACE,+rCAiBA,mBACEE,MAAO,CACLC,SAAU,QACVC,KAAM,EACNC,IAAK,GAEP3B,MAAM,MACNC,OAAO,MACP2B,GAAG,eAIX,IAEA,W","sources":["pages/eraser/index.jsx"],"sourcesContent":["import React, { memo, useEffect } from \"react\";\n\nconst Index = memo(() => {\n  useEffect(() => {\n    // 获取canvas元素和绘图上下文\n    const canvas = document.getElementById(\"myCanvas\");\n    const ctx = canvas.getContext(\"2d\");\n\n    // 绘制背景\n    ctx.fillStyle = \"red\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // 设置橡皮擦的属性\n    const eraserSize = 20; // 橡皮擦的大小\n    let isErasing = false; // 是否正在擦除\n\n    // 鼠标按下时开始擦除\n    canvas.addEventListener(\"mousedown\", startErasing);\n    canvas.addEventListener(\"touchstart\", startErasing);\n\n    // 鼠标移动时进行擦除\n    canvas.addEventListener(\"mousemove\", erase);\n    canvas.addEventListener(\"touchmove\", erase);\n\n    // 鼠标松开时停止擦除\n    canvas.addEventListener(\"mouseup\", stopErasing);\n    canvas.addEventListener(\"touchend\", stopErasing);\n\n    // 开始擦除\n    function startErasing(e) {\n      isErasing = true;\n      erase(e);\n    }\n\n    // 擦除\n    function erase(e) {\n      if (!isErasing) return;\n\n      // 获取鼠标在canvas中的坐标\n      let x, y;\n      if (e.type === \"touchmove\") {\n        x = e.touches[0].clientX - canvas.offsetLeft;\n        y = e.touches[0].clientY - canvas.offsetTop;\n      } else {\n        x = e.clientX - canvas.offsetLeft;\n        y = e.clientY - canvas.offsetTop;\n      }\n\n      // 设置裁剪区域\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(x, y, eraserSize, 0, 2 * Math.PI);\n      ctx.clip();\n\n      // 使用透明色进行绘制\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // 恢复绘制状态\n      ctx.restore();\n    }\n\n    // 停止擦除\n    function stopErasing() {\n      isErasing = false;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n        232343434343423234343434342323434343434232343434343423234343434342323434343434\n      </div>\n      <canvas\n        style={{\n          position: \"fixed\",\n          left: 0,\n          top: 0,\n        }}\n        width=\"800\"\n        height=\"600\"\n        id=\"myCanvas\"\n      ></canvas>\n    </div>\n  );\n});\n\nexport default Index;\n"],"names":["Index","memo","useEffect","canvas","document","getElementById","ctx","getContext","fillStyle","fillRect","width","height","isErasing","startErasing","e","erase","x","y","type","touches","clientX","offsetLeft","clientY","offsetTop","save","beginPath","arc","Math","PI","clip","clearRect","restore","stopErasing","addEventListener","style","position","left","top","id"],"sourceRoot":""}