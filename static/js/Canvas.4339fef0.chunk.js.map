{"version":3,"file":"static/js/Canvas.4339fef0.chunk.js","mappings":"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","sources":["pages/canvas/util.js","pages/canvas/element/newElement.js","pages/canvas/renderer/renderElement.js","pages/canvas/renderer/renderScene.js","webpack://excalidraw-app/./src/pages/canvas/components/tools/index.module.less?8991","pages/canvas/components/icons/index.jsx","util/export.js","pages/canvas/scene/scene.js","pages/canvas/components/tools/index.jsx","pages/canvas/index.jsx","util/index.js"],"sourcesContent":["export const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\nlet testIdBase = 0;\n\nexport const randomId = () => `id${testIdBase++}`;\n","import { randomId } from \"../util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n","import { getElementAbsoluteCoords, distance } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nconst elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const zoom = renderConfig.zoom || 1;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  if (prevElementWithCanvas) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(element, zoom, renderConfig);\n\n  elementWithCanvasCache.set(element, elementWithCanvas);\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width = distance(x1, x2) * window.devicePixelRatio + padding * 2;\n    canvas.height = distance(y1, y2) * window.devicePixelRatio + padding * 2;\n    canvasOffsetX =\n      element.x > x1 ? distance(element.x, x1) * window.devicePixelRatio : 0;\n\n    canvasOffsetY =\n      element.y > y1 ? distance(element.y, y1) * window.devicePixelRatio : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom + padding * zoom * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom + padding * zoom * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom, padding * zoom);\n\n  context.scale(window.devicePixelRatio * zoom, window.devicePixelRatio * zoom);\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n\n  context.translate(cx, cy);\n\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\n\n\nexport const drawAxis = (ctx, { scrollX, scrollY }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (let i = 1; i < (canvas.height - scrollY) / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (let i = 1; i < (canvas.width - scrollX) / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  // Apply zoom\n  context.save();\n  context.scale(renderConfig.zoom, renderConfig.zoom);\n  drawAxis(context, renderConfig);\n\n  // render element\n  elements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  // Reset zoom\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__ZQUTr\",\"item\":\"index_item__JCc41\",\"selected\":\"index_selected__uL6n6\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n}\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps,\n);","import { getCommonBounds, distance } from \"./index\";\nimport { renderScene } from '@/pages/canvas/renderer/renderScene'\nconst getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const exportPng = ({ elements, appState }) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  console.log(\"export...\", minX, minY, width, height);\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  // const context = canvas.getContext(\"2d\");\n  // context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: 1,\n    },\n  });\n  console.log(\"导出\", elements);\n  var a = document.createElement(\"a\");\n  a.href = canvas.toDataURL();\n  a.download = \"canvas.png\";\n  a.click();\n};\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <>\n      <div className={styles.tools}>\n        <span\n          className={[styles.item].join(\" \")}\n          onClick={() => {\n            exportPng({\n              elements: scene.getElementsIncludingDeleted(),\n              appState\n            });\n          }}\n        >\n          {ExportImageIcon}\n        </span>\n        {SHAPES.map((shape) => (\n          <span\n            key={shape.type}\n            className={[\n              styles.item,\n              activeTool.type === shape.type && styles.selected,\n            ].join(\" \")}\n            onClick={() => onActiveToolChange({ type: shape.type })}\n          >\n            {shape.icon}\n          </span>\n        ))}\n      </div>\n    </>\n  );\n});\n\nexport default Index;\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { viewportCoordsToSceneCoords, distance } from \"./util\";\nimport { withBatchedUpdatesThrottled } from \"@/util\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport { deleteElementCache } from \"./renderer/renderElement\";\nimport Tools from \"./components/tools\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n};\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: 1,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: 1,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (!activeTool.type) return;\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: 1,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n      console.log(\"pointer up appState...\", appState);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: 1,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  return (\n    <div ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n        >\n          动态canvas\n        </canvas>\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;\n"],"names":["viewportCoordsToSceneCoords","clientX","clientY","offsetLeft","offsetTop","x","scrollX","y","scrollY","distance","Math","abs","testIdBase","newElement","type","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","id","isDeleted","elementWithCanvasCache","WeakMap","deleteElementCache","element","delete","generateElementWithCanvas","renderConfig","zoom","prevElementWithCanvas","get","elementWithCanvas","generateElementCanvas","set","rightContainer","document","getElementById","previewCanvas","canvas","createElement","context","getContext","padding","getCanvasPadding","removeChild","appendChild","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","window","devicePixelRatio","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeRect","forEach","point","index","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","renderScene","elements","appState","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","rectH","rectW","beginPath","textBaseline","i","font","fillText","drawAxis","renderElement","localStorage","setItem","JSON","stringify","createIcon","d","opts","style","mirror","rest","focusable","role","viewBox","fill","RectangleIcon","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","exportPng","exportPadding","getCommonBounds","minX","minY","maxX","maxY","getCanvasSize","console","log","selectionColor","viewBackgroundColor","a","href","toDataURL","download","click","Scene","parse","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","join","onClick","getElementsIncludingDeleted","map","shape","draggingElement","Canvas","canvasRef","useRef","canvasContainer","staticCanvasRef","useState","setActiveTool","useEffect","setCanvasSize","offsetWidth","offsetHeight","current","getBoundingClientRect","wrap","handleWheel","e","preventDefault","addEventListener","passive","removeEventListener","onPointerMoveFromCanvasPointerDownHandler","pointerDownState","withBatchedUpdatesThrottled","event","pointerCoords","lastCoords","push","originX","origin","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","replaceAllElements","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","ref","onWheel","deltaX","deltaY","onPointerDown","elementType","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","onPointerMove","onPointerUp","value","r","floor","random","g","b","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","requestAnimationFrame","ret","trailing","flush","cancelAnimationFrame","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","p","min","max","rotate","cos","sin","length","x11","y11","x12","y12","x22","y22","x21","y21","getElementBounds","__generateExcalidrawElements","ele","xs","ys","getSizeFromPoints","roughness","groupIds","roundness","seed","version","versionNonce","boundElements","updated","Date","now","link","locked","pressures","simulatePressure","lastCommittedPoint"],"sourceRoot":""}