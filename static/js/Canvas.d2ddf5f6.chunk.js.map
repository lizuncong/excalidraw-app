{"version":3,"file":"static/js/Canvas.d2ddf5f6.chunk.js","mappings":"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","sources":["util/zoom.js","pages/canvas/element/newElement.js","pages/canvas/generateElement.js","pages/canvas/renderer/renderElement.js","pages/canvas/renderer/renderScene.js","webpack://excalidraw-app/./src/pages/canvas/components/tools/index.module.less?8991","pages/canvas/components/icons/index.jsx","util/export.js","pages/canvas/scene/scene.js","pages/canvas/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/scale/index.module.less?3a8b","pages/canvas/components/scale/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/layer-ui/index.module.less?8d4d","pages/canvas/components/layer-ui/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/textarea/index.module.less?82b0","pages/canvas/components/textarea/index.jsx","pages/canvas/index.jsx","util/index.js"],"sourcesContent":["const MIN_ZOOM = 0.1;\n\nexport const getNormalizedZoom = (zoom) => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30));\n};\n\nexport const getStateForZoom = (\n  { viewportX, viewportY, nextZoom },\n  appState\n) => {\n  const screenX = viewportX - appState.offsetLeft;\n  const screenY = viewportY - appState.offsetTop;\n  const currentZoom = appState.zoom.value;\n\n  return {\n    scrollX: appState.scrollX + screenX / nextZoom - screenX / currentZoom,\n    scrollY: appState.scrollY + screenY / nextZoom - screenY / currentZoom,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n","import { randomId } from \"@/util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n  ...rest\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n    ...rest,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = newElement({\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    originalText: opts.text,\n    ...opts,\n  });\n\n  return textElement;\n};\n","import { createElement } from \"./element/newElement\";\n\nconst getRandomValue = (n, m) => {\n  return Number((Math.random() * (m - n) + n).toFixed(5));\n};\nconst generateElements = (count, type, appState) => {\n  const elements = [];\n  console.log(\"generate elements...\", count, type);\n  let element;\n  for (let i = 0; i < count; i++) {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    const width =\n      Math.abs(\n        getRandomValue(\n          -appState.scrollX - x,\n          appState.canvasWidth - appState.scrollX - x\n        )\n      ) + 2;\n    const height =\n      Math.abs(\n        getRandomValue(\n          -appState.scrollY - y,\n          appState.canvasHeight - appState.scrollY - y\n        )\n      ) + 2;\n    element = createElement({\n      elementType: type,\n      pointerDownState: {\n        origin: {\n          x,\n          y,\n        },\n      },\n      appState,\n    });\n    element.width = width;\n    element.height = height;\n    elements.push(element);\n  }\n\n  return elements;\n};\n\nexport const animateElements = (elements, appState) => {\n  elements.forEach((el) => {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    el.x = x;\n    el.y = y;\n  });\n  return elements;\n};\nexport default generateElements;\n","import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nlet elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = new WeakMap();\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  if (prevElementWithCanvas) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n\n  elementWithCanvasCache.set(element, elementWithCanvas);\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    // rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  // rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value\n  );\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\nimport { getElementBounds, viewportCoordsToSceneCoords } from \"@/util\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (\n    let i = 1;\n    i < (canvas.height - scrollY * zoom.value) / (rectH * zoom.value);\n    i++\n  ) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (\n    let i = 1;\n    i < (canvas.width - scrollX * zoom.value) / (rectW * zoom.value);\n    i++\n  ) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  canvasWidth: number,\n  canvasHeight: number,\n  viewTransformations: {\n    zoom: Zoom,\n    offsetLeft: number,\n    offsetTop: number,\n    scrollX: number,\n    scrollY: number,\n  }\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  drawAxis(context, renderConfig);\n\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(element, normalizedCanvasWidth, normalizedCanvasHeight, {\n      zoom: renderConfig.zoom,\n      offsetLeft: appState.offsetLeft,\n      offsetTop: appState.offsetTop,\n      scrollX: renderConfig.scrollX,\n      scrollY: renderConfig.scrollY,\n    })\n  );\n  const total = document.getElementById('canvas-total')\n  total.innerText = `总元素数：${elements.length}   可见区域内元素：${visibleElements.length}`\n  visibleElements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__ZQUTr\",\"item\":\"index_item__JCc41\",\"selected\":\"index_selected__uL6n6\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps\n);\n\nconst modifiedTablerIconProps = {\n  width: 20,\n  height: 20,\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const ZoomInIcon = createIcon(\n  <path strokeWidth=\"1.25\" d=\"M10 4.167v11.666M4.167 10h11.666\" />,\n  modifiedTablerIconProps\n);\n\nexport const ZoomOutIcon = createIcon(\n  <path d=\"M5 10h10\" strokeWidth=\"1.25\" />,\n  modifiedTablerIconProps\n);\n","import { getCommonBounds, distance } from \"./index\";\nimport { renderScene } from '@/pages/canvas/renderer/renderScene'\nconst getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const exportPng = ({ elements, appState }) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  console.log(\"export...\", minX, minY, width, height);\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  // const context = canvas.getContext(\"2d\");\n  // context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: 1,\n    },\n  });\n  console.log(\"导出\", elements);\n  var a = document.createElement(\"a\");\n  a.href = canvas.toDataURL();\n  a.download = \"canvas.png\";\n  a.click();\n};\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() => {\n          exportPng({\n            elements: scene.getElementsIncludingDeleted(),\n            appState,\n          });\n        }}\n      >\n        {ExportImageIcon}\n      </span>\n      {SHAPES.map((shape) => {\n        const isSelected = activeTool.type === shape.type;\n        return (\n          <span\n            key={shape.type}\n            className={[styles.item, isSelected && styles.selected].join(\" \")}\n            onClick={() =>\n              onActiveToolChange({ type: isSelected ? \"\" : shape.type })\n            }\n          >\n            {shape.icon}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"scale\":\"index_scale__7GBXS\",\"item\":\"index_item__EjyQO\",\"value\":\"index_value__oZ-q0\"};","import React, { memo } from \"react\";\nimport { ZoomInIcon, ZoomOutIcon } from \"../icons\";\nimport { getNormalizedZoom } from \"@/util/zoom\";\nimport styles from \"./index.module.less\";\n\nconst ZOOM_STEP = 0.1;\nconst Scale = memo(({ appState, onZoomChange }) => {\n  const zoomValue = `${(appState.zoom.value * 100).toFixed(0)}%`;\n\n  return (\n    <div className={styles.scale}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value - ZOOM_STEP))\n        }\n      >\n        {ZoomOutIcon}\n      </span>\n      <span\n        className={styles.value}\n        onClick={() => onZoomChange(getNormalizedZoom(1))}\n      >\n        {zoomValue}\n      </span>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value + ZOOM_STEP))\n        }\n      >\n        {ZoomInIcon}\n      </span>\n    </div>\n  );\n});\n\nexport default Scale;\n","// extracted by mini-css-extract-plugin\nexport default {\"layer\":\"index_layer__JlGve\",\"ball_red\":\"index_ball_red__Sy41Y\",\"move\":\"index_move__+FZgw\",\"boundceBall\":\"index_boundceBall__4iw92\",\"shadowball\":\"index_shadowball__QeKta\",\"shadowMove\":\"index_shadowMove__4eBWH\"};","import React, { memo } from \"react\";\nimport Tools from \"../tools\";\nimport Scale from \"../scale\";\nimport styles from \"./index.module.less\";\nconst LayerUI = memo(\n  ({ activeTool, onActiveToolChange, appState, onZoomChange }) => {\n    return (\n      <div className={styles.layer}>\n        <Scale appState={appState} onZoomChange={onZoomChange} />\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={onActiveToolChange}\n        />\n        <div className={styles.boundceBall}>\n          <div className={styles.ball_red}></div>\n          <div className={styles.shadowball}></div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default LayerUI;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__b45r1\",\"textarea_copy\":\"index_textarea_copy__REiTG\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache } from \"../../renderer/renderElement\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ staticCanvasRef }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const left = event.clientX - appState.offsetLeft;\n      const top = event.clientY - appState.offsetTop;\n      const styleObj = {\n        font: getFontString(element),\n        left: `${left}px`,\n        top: `${top}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - left;\n      // textarea.style.maxWidth = `${maxWidth}px`;\n      // textarea.style.width = `${element.fontSize}px`;\n      // textarea.style.height = `${element.fontSize * 1.2}px`;\n      Object.assign(textarea.style, {\n        zIndex: 1,\n        maxWidth: `${maxWidth}px`,\n        width: `${element.fontSize}px`,\n        height: `${element.fontSize * 1.2}px`,\n      });\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          // console.log(\"tex5....\", text, text.length);\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              console.log(\"正常的输入\");\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              console.log(\"粘贴进来的文本\");\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              console.log(\"splitResult..\", splitResult);\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            zIndex: -1,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { distance } from \"@/util\";\nimport {\n  withBatchedUpdatesThrottled,\n  viewportCoordsToSceneCoords,\n} from \"@/util\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\nimport generateElements, { animateElements } from \"./generateElement\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport {\n  deleteElementCache,\n  clearElementCache,\n} from \"./renderer/renderElement\";\nimport LayerUI from \"./components/layer-ui\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  zoom: { value: 1 },\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst ZOOM_STEP = 0.1;\n\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const cursorPosition = useRef({});\n  const textareaRef = useRef(null);\n  const rafRef = useRef(null);\n  const globalVarRef = useRef({});\n  const [flag, refreshFlag] = useState(false);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  const [testObj, setTestObj] = useState({ count: \"\", type: \"rectangle\" });\n  const [animate, setAnimate] = useState(false);\n  const animateRef = useRef();\n  const refresh = () => {\n    refreshFlag(!flag);\n  };\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    const updateCurrentCursorPosition = (event) => {\n      cursorPosition.current = {\n        cursorX: event.clientX,\n        cursorY: event.clientY,\n      };\n    };\n    document.addEventListener(\"mousemove\", updateCurrentCursorPosition);\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"mousemove\", updateCurrentCursorPosition);\n    };\n  }, []);\n  useEffect(() => {\n    let frame = 0;\n    let startTime = Date.now();\n\n    const loop = () => {\n      const currentTime = Date.now();\n      frame++;\n\n      if (currentTime > 1000 + startTime) {\n        const fps = Math.round((frame * 1000) / (currentTime - startTime));\n        rafRef.current.innerText = `FPS：${fps}`;\n        frame = 0;\n        startTime = currentTime;\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    loop();\n  }, []);\n  const reDrawAfterZoom = () => {\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n    if (globalVarRef.current.zoomTimerId) {\n      clearTimeout(globalVarRef.current.zoomTimerId);\n    }\n    globalVarRef.current.zoomTimerId = setTimeout(() => {\n      clearElementCache();\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    }, 300);\n  };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    // 关于缩放：双指放大时，deltaY是负数，缩小时，deltaY是正数\n    // 缩放，本质上就是对某个点的坐标进行变换\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY); // 只有两种情况，要么+1，要么-1\n      const MAX_STEP = ZOOM_STEP * 100; // 10\n      const absDelta = Math.abs(deltaY);\n      let delta = deltaY;\n      // delta最大为10\n      if (absDelta > MAX_STEP) {\n        delta = MAX_STEP * sign;\n      }\n      let newZoom = appState.zoom.value - delta / 100;\n      newZoom +=\n        Math.log10(Math.max(1, appState.zoom.value)) *\n        -sign *\n        Math.min(1, absDelta / 20);\n      const nextZoom = getNormalizedZoom(newZoom);\n      Object.assign(appState, {\n        ...getStateForZoom(\n          {\n            viewportX: cursorPosition.current.cursorX,\n            viewportY: cursorPosition.current.cursorY,\n            nextZoom: nextZoom,\n          },\n          appState\n        ),\n      });\n      // renderScene(canvasRef.current, appState);\n      refresh();\n      reDrawAfterZoom();\n      return;\n    }\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (!activeTool.type) return;\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n      console.log(\"pointer up appState...\", appState);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    if (activeTool.type) return;\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n        >\n          动态canvas\n        </canvas>\n        <LayerUI\n          activeTool={activeTool}\n          onZoomChange={(zoomVal) => {\n            if (appState.zoom.value === zoomVal) return;\n            Object.assign(appState, {\n              ...getStateForZoom(\n                {\n                  viewportX: appState.canvasWidth / 2 + appState.offsetLeft,\n                  viewportY: appState.canvasHeight / 2 + appState.offsetTop,\n                  nextZoom: zoomVal,\n                },\n                appState\n              ),\n            });\n            refresh();\n            reDrawAfterZoom();\n          }}\n          appState={{ ...appState }}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} staticCanvasRef={staticCanvasRef} />\n      </div>\n      <div>\n        <span ref={rafRef}>FPS：--</span>\n        <span className=\"total\" id=\"canvas-total\"></span>\n      </div>\n      <div className=\"row\">\n        <input\n          type=\"number\"\n          value={testObj.count}\n          onChange={(e) => setTestObj({ ...testObj, count: e.target.value })}\n        />\n        <select\n          value={testObj.type}\n          onChange={(e) => setTestObj({ ...testObj, type: e.target.value })}\n        >\n          <option value=\"freedraw\">freedraw</option>\n          <option value=\"rectangle\">rectangle</option>\n          <option value=\"text\">text</option>\n        </select>\n        <button\n          onClick={() => {\n            const elements = generateElements(\n              Number(testObj.count),\n              testObj.type,\n              appState\n            );\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              ...elements,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n          }}\n        >\n          生成\n        </button>\n        <button\n          onClick={() => {\n            setAnimate(!animate);\n            if (animateRef.current) {\n              cancelAnimationFrame(animateRef.current);\n            }\n            if (animate) return;\n            let diffTime = 100;\n            let lastDate = Date.now();\n            const tick = () => {\n              const currentDate = Date.now();\n              if (currentDate - lastDate >= diffTime) {\n                lastDate = currentDate;\n                const elements = animateElements(\n                  scene.getElementsIncludingDeleted(),\n                  appState\n                );\n                renderScene({\n                  elements: elements,\n                  appState: appState,\n                  scale: window.devicePixelRatio,\n                  canvas: staticCanvasRef.current,\n                  renderConfig: {\n                    selectionColor: \"#6965db\",\n                    scrollX: appState.scrollX,\n                    scrollY: appState.scrollY,\n                    viewBackgroundColor: \"#ffffff\",\n                    zoom: appState.zoom,\n                  },\n                });\n              }\n\n              animateRef.current = requestAnimationFrame(tick);\n            };\n            animateRef.current = requestAnimationFrame(tick);\n          }}\n        >\n          {animate ? \"停止动画\" : \"动画\"}\n        </button>\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n"],"names":["getNormalizedZoom","zoom","Math","max","min","getStateForZoom","appState","viewportX","viewportY","nextZoom","screenX","offsetLeft","screenY","offsetTop","currentZoom","value","scrollX","scrollY","newElement","type","x","y","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","rest","id","randomId","isDeleted","createElement","elementType","pointerDownState","origin","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","getRandomValue","n","m","Number","random","toFixed","count","element","elements","console","log","i","canvasWidth","canvasHeight","abs","push","elementWithCanvasCache","WeakMap","deleteElementCache","delete","generateElementWithCanvas","renderConfig","prevElementWithCanvas","get","elementWithCanvas","generateElementCanvas","set","rightContainer","document","getElementById","canvas","context","getContext","padding","getCanvasPadding","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","distance","window","devicePixelRatio","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeRect","font","getFontString","textAlign","lines","text","split","lineHeight","length","textBaseline","index","fillText","forEach","point","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","renderScene","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","rectH","rectW","beginPath","drawAxis","visibleElements","filter","viewTransformations","getElementBounds","topLeftSceneCoords","viewportCoordsToSceneCoords","clientX","clientY","bottomRightSceneCoords","isVisibleElement","innerText","renderElement","localStorage","setItem","JSON","stringify","createIcon","d","opts","style","mirror","focusable","role","viewBox","fill","RectangleIcon","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","modifiedTablerIconProps","ZoomInIcon","ZoomOutIcon","exportPng","exportPadding","getCommonBounds","minX","minY","maxX","maxY","getCanvasSize","selectionColor","viewBackgroundColor","a","href","toDataURL","download","click","Scene","parse","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","join","onClick","getElementsIncludingDeleted","map","shape","isSelected","Scale","onZoomChange","zoomValue","LayerUI","Index","forwardRef","ref","staticCanvasRef","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","event","preventDefault","stopPropagation","sceneX","sceneY","fontSize","fontFamily","verticalAlign","originalText","draggingElement","textarea","current","focus","left","top","styleObj","color","Object","assign","copyTextarea","maxWidth","zIndex","onChange","e","target","parseFloat","copyTextWidth","getBoundingClientRect","slice","splitResult","line","lastIdx","str","onBlur","offsetWidth","offsetHeight","replaceAllElements","setTimeout","background","contentEditable","Canvas","canvasRef","canvasContainer","cursorPosition","rafRef","globalVarRef","flag","refreshFlag","setActiveTool","testObj","setTestObj","animate","setAnimate","animateRef","refresh","useEffect","setCanvasSize","wrap","handleWheel","addEventListener","passive","updateCurrentCursorPosition","cursorX","cursorY","removeEventListener","frame","startTime","Date","now","loop","currentTime","fps","round","requestAnimationFrame","reDrawAfterZoom","zoomTimerId","clearTimeout","onPointerMoveFromCanvasPointerDownHandler","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","onWheel","deltaX","deltaY","metaKey","ctrlKey","sign","absDelta","delta","ZOOM_STEP","newZoom","log10","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","zoomVal","generateElements","cancelAnimationFrame","lastDate","tick","currentDate","el","animateElements","r","floor","g","b","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","ret","trailing","flush","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","p","rotate","cos","sin","x11","y11","x12","y12","x22","y22","x21","y21","testIdBase","__generateExcalidrawElements","ele","xs","ys","getSizeFromPoints","roughness","groupIds","roundness","seed","version","versionNonce","boundElements","updated","link","locked","pressures","simulatePressure","lastCommittedPoint"],"sourceRoot":""}