{"version":3,"file":"static/js/OffscreenCanvas.490dab19.chunk.js","mappings":"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","sources":["pages/performance/offscreen-canvas/element/newElement.js","pages/performance/offscreen-canvas/generateElement.js","pages/performance/offscreen-canvas/renderer/renderElement.js","pages/performance/offscreen-canvas/renderer/renderScene.js","pages/performance/offscreen-canvas/worker/index.js","pages/performance/offscreen-canvas/worker/file.worker.js","pages/performance/offscreen-canvas/renderBackground.js","pages/performance/offscreen-canvas/useGesture.js","webpack://excalidraw-app/./src/pages/performance/offscreen-canvas/components/tools/index.module.less?0710","pages/performance/offscreen-canvas/components/icons/index.jsx","pages/performance/offscreen-canvas/scene/scene.js","pages/performance/offscreen-canvas/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/performance/offscreen-canvas/components/scale/index.module.less?cfac","pages/performance/offscreen-canvas/components/scale/index.jsx","webpack://excalidraw-app/./src/pages/performance/offscreen-canvas/components/layer-ui/index.module.less?a6dc","pages/performance/offscreen-canvas/components/layer-ui/index.jsx","webpack://excalidraw-app/./src/pages/performance/offscreen-canvas/components/textarea/index.module.less?088f","pages/performance/offscreen-canvas/components/textarea/index.jsx","pages/performance/offscreen-canvas/index.jsx","util/export.js","util/gesture.js","util/index.js","util/zoom.js"],"sourcesContent":["import { randomId } from \"@/util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n  ...rest\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n    ...rest,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = newElement({\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    originalText: opts.text,\n    ...opts,\n  });\n\n  return textElement;\n};\n","import { createElement, newTextElement } from \"./element/newElement\";\nimport { rgb } from \"@/util\";\n\nconst getRandomValue = (n, m) => {\n  return Number((Math.random() * (m - n) + n).toFixed(5));\n};\nconst generateElements = (count, type, appState) => {\n  const elements = [];\n  let element;\n  for (let i = 0; i < count; i++) {\n    let x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    let y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    element = createElement({\n      elementType: type,\n      pointerDownState: {\n        origin: {\n          x,\n          y,\n        },\n      },\n      appState,\n    });\n    if (type === \"rectangle\") {\n      const width =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollX - x,\n            appState.canvasWidth - appState.scrollX - x\n          )\n        ) + 2;\n      const height =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollY - y,\n            appState.canvasHeight - appState.scrollY - y\n          )\n        ) + 2;\n      element.width = width;\n      element.height = height;\n    } else if (type === \"freedraw\") {\n      const pointsNum = getRandomValue(20, 100);\n      for (let i = 0; i < pointsNum; i++) {\n        x = getRandomValue(x, x + 10);\n        y = getRandomValue(y, y + 10);\n        element.points.push([x, y]);\n      }\n    } else if (type === \"text\") {\n      const text = `${x}, ${y}`;\n      element = newTextElement({\n        x,\n        y,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text,\n        width: text.length * 20,\n        height: 25,\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n    }\n\n    elements.push(element);\n  }\n\n  return elements;\n};\n\nexport const animateElements = (elements, appState) => {\n  elements.forEach((el) => {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    el.x = x;\n    el.y = y;\n  });\n  return elements;\n};\nexport default generateElements;\n","import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nlet elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = new WeakMap();\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  // 导出图片时，默认zoom为1，因此这里加个notusecache配置重新生成canvas\n  if (prevElementWithCanvas && !renderConfig.notUseCache) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n  if (!renderConfig.notUseCache) {\n    elementWithCanvasCache.set(element, elementWithCanvas);\n  }\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    // rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  // rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value\n  );\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = renderConfig.strokeStyle || element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = renderConfig.fillStyle || element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = renderConfig.strokeStyle || element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\nimport { getElementBounds, viewportCoordsToSceneCoords } from \"@/util\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (\n    let i = 1;\n    i < (canvas.height - scrollY * zoom.value) / (rectH * zoom.value);\n    i++\n  ) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (\n    let i = 1;\n    i < (canvas.width - scrollX * zoom.value) / (rectW * zoom.value);\n    i++\n  ) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nconst isVisibleElement = (\n  element,\n  canvasWidth,\n  canvasHeight,\n  viewTransformations\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  if (!renderConfig.isExport || !elements) {\n    drawAxis(context, renderConfig);\n  }\n  if (elements) {\n    const visibleElements = elements.filter((element) =>\n      isVisibleElement(element, normalizedCanvasWidth, normalizedCanvasHeight, {\n        zoom: renderConfig.zoom,\n        offsetLeft: appState.offsetLeft,\n        offsetTop: appState.offsetTop,\n        scrollX: renderConfig.scrollX,\n        scrollY: renderConfig.scrollY,\n      })\n    );\n    const total = document.getElementById(\"canvas-total\");\n    total.innerText = `总元素数：${elements.length}   实际绘制元素总数：${visibleElements.length}`;\n\n    visibleElements.forEach((element) => {\n      renderElement(element, context, renderConfig, appState);\n    });\n  }\n\n  context.restore();\n\n  context.restore();\n  if (elements) {\n    // localStorage.setItem(\"elements\", JSON.stringify(elements));\n  }\n  // localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","import Worker from \"./file.worker.js\";\nconst worker = new Worker();\nlet callback;\nworker.onmessage = (event) => {\n  const { type } = event.data;\n  if (type === \"img-finish\") {\n    callback();\n  }\n};\nlet canvasWorker;\nlet canvasImgWorker;\nexport const renderSceneInWorker = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  canvasImg,\n  renderConfig,\n  cb,\n}) => {\n  renderConfig.devicePixelRatio = window.devicePixelRatio;\n  const params = {\n    appState,\n    scale,\n    renderConfig,\n    elements,\n  };\n  if (canvas) {\n    if (!canvasWorker) {\n      canvasWorker = canvas.transferControlToOffscreen();\n      worker.postMessage(\n        {\n          canvasWorker: canvasWorker,\n          type: \"init\",\n          ...params,\n        },\n        [canvasWorker]\n      );\n    } else {\n      worker.postMessage({\n        type: \"redraw\",\n        ...params,\n      });\n    }\n  }\n\n  if (canvasImg) {\n    // 如果是生成图片，则每次都重新创建一个offscreen canvas\n    canvasImgWorker = canvasImg.transferControlToOffscreen();\n    worker.postMessage(\n      {\n        canvasImgWorker: canvasImgWorker,\n        type: \"init-img\",\n        ...params,\n      },\n      [canvasImgWorker]\n    );\n\n    callback = (data) => {\n      if (cb) {\n        cb({\n          base64: canvasImg.toDataURL(),\n        });\n      }\n    };\n  }\n};\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/file.worker.8a9bf481.worker.js\");\n}\n","import { getCanvasSize } from \"@/util/export\";\nimport { renderSceneInWorker } from \"./worker\";\n\nlet canvas;\n\nexport const canvasToDataURL = ({\n  isExport,\n  notUseCache,\n  elements,\n  appState,\n  callback,\n}) => {\n  const exportPadding = 1.6;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n  canvas = document.createElement(\"canvas\");\n\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n\n  renderSceneInWorker({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvasImg: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: { value: 1 },\n      fillStyle: appState.fillStyle,\n      // strokeStyle: 'black', //appState.strokeStyle,\n      isExport,\n      notUseCache,\n    },\n    cb: ({ base64 }) => {\n      callback({\n        base64,\n        minX,\n        minY,\n        width,\n        height,\n      });\n    },\n  });\n};\n","import { useEffect } from \"react\";\nimport { getCenter, getDistance } from \"@/util/gesture\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\n\nconst gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nexport const useGesture = (canvasRef, appState) => {\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const onTouchEnd = (event) => {\n      if (!event.touches.length) {\n        gesture.pointers.clear();\n      }\n    };\n    canvas.addEventListener(\"touchend\", onTouchEnd);\n    return () => {\n      canvas.removeEventListener(\"touchend\", onTouchEnd);\n    };\n  }, [canvasRef]);\n  const removePointer = (event) => {\n    gesture.pointers.delete(event.pointerId);\n  };\n  const updateGestureOnPointerDown = (event) => {\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = appState.zoom.value;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values())\n      );\n    }\n  };\n  const handleCanvasPointerMove = (event, callback) => {\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n    const initialScale = gesture.initialScale;\n\n    if (\n      gesture.pointers.size === 2 &&\n      gesture.lastCenter &&\n      initialScale &&\n      gesture.initialDistance\n    ) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter.x;\n      const deltaY = center.y - gesture.lastCenter.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor = distance / gesture.initialDistance;\n\n      const nextZoom = scaleFactor\n        ? getNormalizedZoom(initialScale * scaleFactor)\n        : appState.zoom.value;\n      const zoomState = getStateForZoom(\n        {\n          viewportX: center.x,\n          viewportY: center.y,\n          nextZoom,\n        },\n        appState\n      );\n      Object.assign(appState, {\n        zoom: zoomState.zoom,\n        scrollX: zoomState.scrollX + deltaX / nextZoom,\n        scrollY: zoomState.scrollY + deltaY / nextZoom,\n      });\n      callback();\n    } else {\n      gesture.lastCenter =\n        gesture.initialDistance =\n        gesture.initialScale =\n          null;\n    }\n  };\n  return {\n    gesture,\n    removePointer,\n    updateGestureOnPointerDown,\n    handleCanvasPointerMove,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__F11CL\",\"item\":\"index_item__qZvQR\",\"selected\":\"index_selected__e5hcZ\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps\n);\n\nconst modifiedTablerIconProps = {\n  width: 20,\n  height: 20,\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const ZoomInIcon = createIcon(\n  <path strokeWidth=\"1.25\" d=\"M10 4.167v11.666M4.167 10h11.666\" />,\n  modifiedTablerIconProps\n);\n\nexport const ZoomOutIcon = createIcon(\n  <path d=\"M5 10h10\" strokeWidth=\"1.25\" />,\n  modifiedTablerIconProps\n);\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() => {\n          exportPng({\n            renderScene,\n            elements: scene.getElementsIncludingDeleted(),\n            appState,\n          });\n        }}\n      >\n        {ExportImageIcon}\n      </span>\n      {SHAPES.map((shape) => {\n        const isSelected = activeTool.type === shape.type;\n        return (\n          <span\n            key={shape.type}\n            className={[styles.item, isSelected && styles.selected].join(\" \")}\n            onClick={() =>\n              onActiveToolChange({ type: isSelected ? \"\" : shape.type })\n            }\n          >\n            {shape.icon}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"scale\":\"index_scale__Xgs3R\",\"item\":\"index_item__jlc7V\",\"value\":\"index_value__9glOL\"};","import React, { memo } from \"react\";\nimport { ZoomInIcon, ZoomOutIcon } from \"../icons\";\nimport { getNormalizedZoom } from \"@/util/zoom\";\nimport styles from \"./index.module.less\";\n\nconst ZOOM_STEP = 0.1;\nconst Scale = memo(({ appState, onZoomChange }) => {\n  const zoomValue = `${(appState.zoom.value * 100).toFixed(0)}%`;\n\n  return (\n    <div className={styles.scale}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value - ZOOM_STEP))\n        }\n      >\n        {ZoomOutIcon}\n      </span>\n      <span\n        className={styles.value}\n        onClick={() => onZoomChange(getNormalizedZoom(1))}\n      >\n        {zoomValue}\n      </span>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value + ZOOM_STEP))\n        }\n      >\n        {ZoomInIcon}\n      </span>\n    </div>\n  );\n});\n\nexport default Scale;\n","// extracted by mini-css-extract-plugin\nexport default {\"layer\":\"index_layer__n2wKC\",\"ball_red\":\"index_ball_red__487Jk\",\"move\":\"index_move__KEHQh\",\"boundceBall\":\"index_boundceBall__ulji4\",\"shadowball\":\"index_shadowball__HLlgs\",\"shadowMove\":\"index_shadowMove__9Qyni\"};","import React, { memo } from \"react\";\nimport Tools from \"../tools\";\nimport Scale from \"../scale\";\nimport styles from \"./index.module.less\";\nconst LayerUI = memo(\n  ({ activeTool, onActiveToolChange, appState, onZoomChange }) => {\n    return (\n      <div className={styles.layer}>\n        <Scale appState={appState} onZoomChange={onZoomChange} />\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={onActiveToolChange}\n        />\n        <div className={styles.boundceBall}>\n          <div className={styles.ball_red}></div>\n          <div className={styles.shadowball}></div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default LayerUI;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__Z5y--\",\"textarea_copy\":\"index_textarea_copy__PICl+\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache } from \"../../renderer/renderElement\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\n// import { renderScene } from \"../../renderer/renderScene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ renderStaticCanvas }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const left = event.clientX - appState.offsetLeft;\n      const top = event.clientY - appState.offsetTop;\n      const styleObj = {\n        font: getFontString(element),\n        left: `${left}px`,\n        top: `${top}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - left;\n      // textarea.style.maxWidth = `${maxWidth}px`;\n      // textarea.style.width = `${element.fontSize}px`;\n      // textarea.style.height = `${element.fontSize * 1.2}px`;\n      Object.assign(textarea.style, {\n        zIndex: 1,\n        maxWidth: `${maxWidth}px`,\n        width: `${element.fontSize}px`,\n        height: `${element.fontSize * 1.2}px`,\n      });\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          // console.log(\"tex5....\", text, text.length);\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              console.log(\"正常的输入\");\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              console.log(\"粘贴进来的文本\");\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              console.log(\"splitResult..\", splitResult);\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            // renderScene({\n            //   elements: scene.getElementsIncludingDeleted(),\n            //   appState: appState,\n            //   scale: window.devicePixelRatio,\n            //   canvas: staticCanvasRef.current,\n            //   renderConfig: {\n            //     selectionColor: \"#6965db\",\n            //     scrollX: appState.scrollX,\n            //     scrollY: appState.scrollY,\n            //     viewBackgroundColor: \"#ffffff\",\n            //     zoom: appState.zoom,\n            //   },\n            // });\n            renderStaticCanvas()\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            zIndex: -1,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { distance } from \"@/util\";\nimport {\n  withBatchedUpdatesThrottled,\n  viewportCoordsToSceneCoords,\n} from \"@/util\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\nimport generateElements, { animateElements } from \"./generateElement\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport { canvasToDataURL } from \"./renderBackground\";\nimport { renderSceneInWorker } from \"./worker\";\nimport {\n  deleteElementCache,\n  clearElementCache,\n} from \"./renderer/renderElement\";\nimport { useGesture } from \"./useGesture\";\nimport LayerUI from \"./components/layer-ui\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  zoom: { value: 1 },\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst ZOOM_STEP = 0.1;\n\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const cursorPosition = useRef({});\n  const textareaRef = useRef(null);\n  const rafRef = useRef(null);\n  const globalVarRef = useRef({});\n  const [flag, refreshFlag] = useState(false);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  const [testObj, setTestObj] = useState({ count: \"\", type: \"rectangle\" });\n  const [animate, setAnimate] = useState(false);\n  const animateRef = useRef();\n  const containerRef = useRef();\n  const imgRef = useRef();\n  const canvasStatus = useRef({});\n  const refresh = () => {\n    refreshFlag(!flag);\n  };\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    //eslint-disable-line\n    renderStaticCanvas(true);\n    /*eslint-disable*/\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    const updateCurrentCursorPosition = (event) => {\n      cursorPosition.current = {\n        cursorX: event.clientX,\n        cursorY: event.clientY,\n      };\n    };\n    const onTapStart = (e) => {\n      e.preventDefault();\n    };\n    const canvas = canvasRef.current;\n    canvas.addEventListener(\"touchstart\", onTapStart);\n    document.addEventListener(\"mousemove\", updateCurrentCursorPosition);\n    return () => {\n      canvas.removeEventListener(\"touchstart\", onTapStart);\n\n      wrap.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"mousemove\", updateCurrentCursorPosition);\n    };\n  }, []);\n  useEffect(() => {\n    let frame = 0;\n    let startTime = Date.now();\n    const loop = () => {\n      const currentTime = Date.now();\n      frame++;\n      if (currentTime > 1000 + startTime) {\n        const fps = Math.round((frame * 1000) / (currentTime - startTime));\n        rafRef.current.innerText = `FPS：${fps}`;\n        frame = 0;\n        startTime = currentTime;\n      }\n      requestAnimationFrame(loop);\n    };\n    loop();\n  }, []);\n  const {\n    updateGestureOnPointerDown,\n    handleCanvasPointerMove,\n    removePointer,\n    gesture,\n  } = useGesture(canvasRef, appState);\n  const resizeBg = () => {\n    // 只绘制坐标轴\n    renderScene({\n      // elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: canvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n    const { minX, minY, width, height } = canvasStatus.current;\n    Object.assign(imgRef.current.style, {\n      transform: `translate(${\n        (minX + appState.scrollX) * appState.zoom.value\n      }px, ${(minY + appState.scrollY) * appState.zoom.value}px)`,\n      width: `${width * appState.zoom.value}px`,\n      height: `${height * appState.zoom.value}px`,\n    });\n  };\n\n  const renderStaticCanvas = (reRenderImg) => {\n    resizeBg();\n    renderSceneInWorker({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n    if (reRenderImg) {\n      canvasToDataURL({\n        isExport: true,\n        notUseCache: true,\n        elements: scene.getElementsIncludingDeleted(),\n        appState,\n        callback: ({ base64, minX, minY, width, height }) => {\n          canvasStatus.current.minX = minX;\n          canvasStatus.current.minY = minY;\n          canvasStatus.current.width = width;\n          canvasStatus.current.height = height;\n          imgRef.current.src = base64;\n          resizeBg();\n        },\n      });\n    }\n  };\n  const reDrawAfterZoom = () => {\n    imgRef.current.style.opacity = 1;\n    staticCanvasRef.current.style.opacity = 0;\n    console.log(\"appstate...\", appState);\n    resizeBg();\n    if (globalVarRef.current.zoomTimerId) {\n      clearTimeout(globalVarRef.current.zoomTimerId);\n    }\n    globalVarRef.current.zoomTimerId = setTimeout(() => {\n      clearElementCache();\n      // 重新绘制，否则元素会很模糊\n      renderStaticCanvas();\n      setTimeout(() => {\n        staticCanvasRef.current.style.opacity = 1;\n        imgRef.current.style.opacity = 0;\n      }, 1000);\n    }, 600);\n  };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    // 关于缩放：双指放大时，deltaY是负数，缩小时，deltaY是正数\n    // 缩放，本质上就是对某个点的坐标进行变换\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY); // 只有两种情况，要么+1，要么-1\n      const MAX_STEP = ZOOM_STEP * 100; // 10\n      const absDelta = Math.abs(deltaY);\n      let delta = deltaY;\n      // delta最大为10\n      if (absDelta > MAX_STEP) {\n        delta = MAX_STEP * sign;\n      }\n      let newZoom = appState.zoom.value - delta / 100;\n      newZoom +=\n        Math.log10(Math.max(1, appState.zoom.value)) *\n        -sign *\n        Math.min(1, absDelta / 20);\n      const nextZoom = getNormalizedZoom(newZoom);\n      Object.assign(appState, {\n        ...getStateForZoom(\n          {\n            viewportX: cursorPosition.current.cursorX,\n            viewportY: cursorPosition.current.cursorY,\n            nextZoom: nextZoom,\n          },\n          appState\n        ),\n      });\n      refresh();\n      reDrawAfterZoom();\n      return;\n    }\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n    reDrawAfterZoom();\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n    if (!activeTool.type) {\n      updateGestureOnPointerDown(event);\n      return;\n    }\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      removePointer(event);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n      console.log(\"pointer up appState...\", appState);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      // const canvas = canvasRef.current;\n      // const context = canvas.getContext(\"2d\");\n      // context.clearRect(0, 0, canvas.width, canvas.height);\n      renderStaticCanvas(true);\n\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    if (activeTool.type) return;\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div className=\"performance-transform\" ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div ref={containerRef} className=\"container wrap\">\n        <img ref={imgRef} className=\"img\" src=\"\" alt=\"\" />\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n          onPointerCancel={removePointer}\n          onPointerMove={(event) => {\n            handleCanvasPointerMove(event, () => {\n              refresh();\n              reDrawAfterZoom();\n            });\n          }}\n        >\n          动态canvas\n        </canvas>\n        <LayerUI\n          activeTool={activeTool}\n          onZoomChange={(zoomVal) => {\n            if (appState.zoom.value === zoomVal) return;\n            Object.assign(appState, {\n              ...getStateForZoom(\n                {\n                  viewportX: appState.canvasWidth / 2 + appState.offsetLeft,\n                  viewportY: appState.canvasHeight / 2 + appState.offsetTop,\n                  nextZoom: zoomVal,\n                },\n                appState\n              ),\n            });\n            refresh();\n            reDrawAfterZoom();\n          }}\n          appState={{ ...appState }}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} renderStaticCanvas={renderStaticCanvas} />\n      </div>\n      <div>\n        <span ref={rafRef}>FPS：--</span>\n        <span className=\"total\" id=\"canvas-total\"></span>\n      </div>\n      <div className=\"row\">\n        <input\n          type=\"number\"\n          value={testObj.count}\n          onChange={(e) => setTestObj({ ...testObj, count: e.target.value })}\n        />\n        <select\n          value={testObj.type}\n          onChange={(e) => setTestObj({ ...testObj, type: e.target.value })}\n        >\n          <option value=\"freedraw\">freedraw</option>\n          <option value=\"rectangle\">rectangle</option>\n          <option value=\"text\">text</option>\n        </select>\n        <button\n          onClick={() => {\n            const elements = generateElements(\n              Number(testObj.count),\n              testObj.type,\n              appState\n            );\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              ...elements,\n            ]);\n            renderStaticCanvas(true);\n          }}\n        >\n          生成\n        </button>\n        <button\n          onClick={() => {\n            setAnimate(!animate);\n            if (animateRef.current) {\n              cancelAnimationFrame(animateRef.current);\n            }\n            if (animate) return;\n            let diffTime = 100;\n            let lastDate = Date.now();\n            const tick = () => {\n              const currentDate = Date.now();\n              if (currentDate - lastDate >= diffTime) {\n                lastDate = currentDate;\n                const elements = animateElements(\n                  scene.getElementsIncludingDeleted(),\n                  appState\n                );\n                // renderScene({\n                //   elements: elements,\n                //   appState: appState,\n                //   scale: window.devicePixelRatio,\n                //   canvas: staticCanvasRef.current,\n                //   renderConfig: {\n                //     selectionColor: \"#6965db\",\n                //     scrollX: appState.scrollX,\n                //     scrollY: appState.scrollY,\n                //     viewBackgroundColor: \"#ffffff\",\n                //     zoom: appState.zoom,\n                //   },\n                // });\n              }\n\n              animateRef.current = requestAnimationFrame(tick);\n            };\n            animateRef.current = requestAnimationFrame(tick);\n          }}\n        >\n          {animate ? \"停止动画\" : \"动画\"}\n        </button>\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { getCommonBounds, distance } from \"./index\";\nexport const getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const canvasToDataURL = ({\n  renderScene,\n  isExport,\n  notUseCache,\n  elements,\n  appState,\n}) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  console.log(\"export...\", minX, minY, width, height);\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: { value: 1 },\n      isExport,\n      notUseCache,\n    },\n  });\n\n  return canvas.toDataURL();\n};\nexport const exportPng = ({\n  renderScene,\n  isExport = true,\n  notUseCache = true,\n  elements,\n  appState,\n}) => {\n  const dataUrl = canvasToDataURL({\n    renderScene,\n    isExport,\n    notUseCache,\n    elements,\n    appState,\n  });\n  var a = document.createElement(\"a\");\n  a.href = dataUrl;\n  a.download = \"canvas.png\";\n  a.click();\n};\n","export const getCenter = (pointers) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: sum(allCoords, (coords) => coords.x) / allCoords.length,\n    y: sum(allCoords, (coords) => coords.y) / allCoords.length,\n  };\n};\n\nexport const getDistance = ([a, b]) => Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = (array, mapper) =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\n// for worker\n// window.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n","const MIN_ZOOM = 0.1;\n\nexport const getNormalizedZoom = (zoom) => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30));\n};\n\nexport const getStateForZoom = (\n  { viewportX, viewportY, nextZoom },\n  appState\n) => {\n  const screenX = viewportX - appState.offsetLeft;\n  const screenY = viewportY - appState.offsetTop;\n  const currentZoom = appState.zoom.value;\n\n  return {\n    scrollX: appState.scrollX + screenX / nextZoom - screenX / currentZoom,\n    scrollY: appState.scrollY + screenY / nextZoom - screenY / currentZoom,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n"],"names":["newElement","type","x","y","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","rest","id","randomId","isDeleted","createElement","elementType","pointerDownState","appState","origin","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","newTextElement","opts","text","fontSize","fontFamily","textAlign","verticalAlign","originalText","getRandomValue","n","m","Number","Math","random","toFixed","count","element","elements","i","scrollX","canvasWidth","scrollY","canvasHeight","abs","pointsNum","push","length","elementWithCanvasCache","WeakMap","deleteElementCache","delete","generateElementWithCanvas","renderConfig","prevElementWithCanvas","get","notUseCache","elementWithCanvas","generateElementCanvas","zoom","set","rightContainer","document","getElementById","canvas","context","getContext","padding","getCanvasPadding","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","distance","window","devicePixelRatio","value","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeRect","font","getFontString","lines","split","lineHeight","textBaseline","index","fillText","forEach","point","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","renderScene","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","isExport","ctx","rectH","rectW","beginPath","drawAxis","visibleElements","filter","viewTransformations","getElementBounds","topLeftSceneCoords","viewportCoordsToSceneCoords","clientX","offsetLeft","clientY","offsetTop","bottomRightSceneCoords","isVisibleElement","innerText","renderElement","callback","canvasWorker","canvasImgWorker","worker","Worker","onmessage","event","data","renderSceneInWorker","canvasImg","cb","params","postMessage","transferControlToOffscreen","base64","toDataURL","gesture","pointers","Map","lastCenter","initialDistance","initialScale","useGesture","canvasRef","useEffect","current","onTouchEnd","touches","clear","addEventListener","removeEventListener","removePointer","pointerId","updateGestureOnPointerDown","size","getCenter","getDistance","Array","from","values","handleCanvasPointerMove","has","center","deltaX","deltaY","scaleFactor","nextZoom","getNormalizedZoom","zoomState","getStateForZoom","viewportX","viewportY","Object","assign","createIcon","d","style","mirror","focusable","role","viewBox","fill","RectangleIcon","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","modifiedTablerIconProps","ZoomInIcon","ZoomOutIcon","Scene","JSON","parse","localStorage","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","join","onClick","exportPng","getElementsIncludingDeleted","map","shape","isSelected","Scale","onZoomChange","zoomValue","LayerUI","Index","forwardRef","ref","renderStaticCanvas","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","preventDefault","stopPropagation","sceneX","sceneY","draggingElement","textarea","focus","left","top","styleObj","color","copyTextarea","maxWidth","zIndex","onChange","e","target","parseFloat","copyTextWidth","getBoundingClientRect","console","log","slice","splitResult","line","lastIdx","str","onBlur","offsetWidth","offsetHeight","replaceAllElements","setTimeout","background","contentEditable","Canvas","canvasContainer","staticCanvasRef","cursorPosition","rafRef","globalVarRef","flag","refreshFlag","setActiveTool","testObj","setTestObj","animate","setAnimate","animateRef","containerRef","imgRef","canvasStatus","refresh","setCanvasSize","wrap","handleWheel","passive","updateCurrentCursorPosition","cursorX","cursorY","onTapStart","frame","startTime","Date","now","loop","currentTime","fps","round","requestAnimationFrame","resizeBg","selectionColor","viewBackgroundColor","minX","minY","transform","reRenderImg","exportPadding","getCanvasSize","canvasToDataURL","src","reDrawAfterZoom","zoomTimerId","clearTimeout","onPointerMoveFromCanvasPointerDownHandler","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","alt","onWheel","metaKey","ctrlKey","sign","absDelta","delta","ZOOM_STEP","newZoom","log10","max","min","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","onPointerCancel","zoomVal","generateElements","cancelAnimationFrame","lastDate","tick","currentDate","el","animateElements","getCommonBounds","maxX","maxY","dataUrl","a","href","download","click","allCoords","sum","coords","b","hypot","array","mapper","reduce","acc","item","r","floor","g","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","ret","trailing","flush","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","p","rotate","cos","sin","x11","y11","x12","y12","x22","y22","x21","y21","testIdBase","screenX","screenY","currentZoom"],"sourceRoot":""}