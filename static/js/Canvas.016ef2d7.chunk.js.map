{"version":3,"file":"static/js/Canvas.016ef2d7.chunk.js","mappings":"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","sources":["pages/canvas/element/newElement.js","pages/canvas/generateElement.js","pages/canvas/renderer/renderElement.js","pages/canvas/renderer/renderScene.js","webpack://excalidraw-app/./src/pages/canvas/components/tools/index.module.less?8991","pages/canvas/components/icons/index.jsx","pages/canvas/scene/scene.js","pages/canvas/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/scale/index.module.less?3a8b","pages/canvas/components/scale/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/layer-ui/index.module.less?8d4d","pages/canvas/components/layer-ui/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/textarea/index.module.less?82b0","pages/canvas/components/textarea/index.jsx","pages/canvas/index.jsx","util/export.js","util/index.js","util/zoom.js"],"sourcesContent":["import { randomId } from \"@/util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n  ...rest\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n    ...rest,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = newElement({\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    originalText: opts.text,\n    ...opts,\n  });\n\n  return textElement;\n};\n","import { createElement, newTextElement } from \"./element/newElement\";\nimport { rgb } from \"@/util\";\n\nconst getRandomValue = (n, m) => {\n  return Number((Math.random() * (m - n) + n).toFixed(5));\n};\nconst generateElements = (count, type, appState) => {\n  const elements = [];\n  console.log(\"generate elements...\", count, type);\n  let element;\n  for (let i = 0; i < count; i++) {\n    let x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    let y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    element = createElement({\n      elementType: type,\n      pointerDownState: {\n        origin: {\n          x,\n          y,\n        },\n      },\n      appState,\n    });\n    if (type === \"rectangle\") {\n      const width =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollX - x,\n            appState.canvasWidth - appState.scrollX - x\n          )\n        ) + 2;\n      const height =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollY - y,\n            appState.canvasHeight - appState.scrollY - y\n          )\n        ) + 2;\n      element.width = width;\n      element.height = height;\n    } else if (type === \"freedraw\") {\n      const pointsNum = getRandomValue(20, 100);\n      for (let i = 0; i < pointsNum; i++) {\n        x = getRandomValue(x, x + 10);\n        y = getRandomValue(y, y + 10);\n        element.points.push([x, y]);\n      }\n    } else if (type === \"text\") {\n      const text = `${x}, ${y}`;\n      element = newTextElement({\n        x,\n        y,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text,\n        width: text.length * 20,\n        height: 25,\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n    }\n\n    elements.push(element);\n  }\n\n  return elements;\n};\n\nexport const animateElements = (elements, appState) => {\n  elements.forEach((el) => {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    el.x = x;\n    el.y = y;\n  });\n  return elements;\n};\nexport default generateElements;\n","import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nlet elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = new WeakMap();\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  if (prevElementWithCanvas) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n\n  elementWithCanvasCache.set(element, elementWithCanvas);\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    // rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  // rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value\n  );\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  console.log('x2, ',padding,elementWithCanvas.canvasZoom.value)\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\nimport { getElementBounds, viewportCoordsToSceneCoords } from \"@/util\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (\n    let i = 1;\n    i < (canvas.height - scrollY * zoom.value) / (rectH * zoom.value);\n    i++\n  ) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (\n    let i = 1;\n    i < (canvas.width - scrollX * zoom.value) / (rectW * zoom.value);\n    i++\n  ) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  canvasWidth: number,\n  canvasHeight: number,\n  viewTransformations: {\n    zoom: Zoom,\n    offsetLeft: number,\n    offsetTop: number,\n    scrollX: number,\n    scrollY: number,\n  }\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\nexport const renderScene = ({\n  elements,\n  isExport,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  drawAxis(context, renderConfig);\n\n  const visibleElements = isExport\n    ? elements\n    : elements.filter((element) =>\n        isVisibleElement(\n          element,\n          normalizedCanvasWidth,\n          normalizedCanvasHeight,\n          {\n            zoom: renderConfig.zoom,\n            offsetLeft: appState.offsetLeft,\n            offsetTop: appState.offsetTop,\n            scrollX: renderConfig.scrollX,\n            scrollY: renderConfig.scrollY,\n          }\n        )\n      );\n      console.log('render..', elements)\n  const total = document.getElementById(\"canvas-total\");\n  total.innerText = `总元素数：${elements.length}   可见区域内元素：${visibleElements.length}`;\n  visibleElements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__ZQUTr\",\"item\":\"index_item__JCc41\",\"selected\":\"index_selected__uL6n6\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps\n);\n\nconst modifiedTablerIconProps = {\n  width: 20,\n  height: 20,\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const ZoomInIcon = createIcon(\n  <path strokeWidth=\"1.25\" d=\"M10 4.167v11.666M4.167 10h11.666\" />,\n  modifiedTablerIconProps\n);\n\nexport const ZoomOutIcon = createIcon(\n  <path d=\"M5 10h10\" strokeWidth=\"1.25\" />,\n  modifiedTablerIconProps\n);\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { exportPng } from \"@/util/export\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() => {\n          exportPng({\n            renderScene,\n            elements: scene.getElementsIncludingDeleted(),\n            appState,\n          });\n        }}\n      >\n        {ExportImageIcon}\n      </span>\n      {SHAPES.map((shape) => {\n        const isSelected = activeTool.type === shape.type;\n        return (\n          <span\n            key={shape.type}\n            className={[styles.item, isSelected && styles.selected].join(\" \")}\n            onClick={() =>\n              onActiveToolChange({ type: isSelected ? \"\" : shape.type })\n            }\n          >\n            {shape.icon}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"scale\":\"index_scale__7GBXS\",\"item\":\"index_item__EjyQO\",\"value\":\"index_value__oZ-q0\"};","import React, { memo } from \"react\";\nimport { ZoomInIcon, ZoomOutIcon } from \"../icons\";\nimport { getNormalizedZoom } from \"@/util/zoom\";\nimport styles from \"./index.module.less\";\n\nconst ZOOM_STEP = 0.1;\nconst Scale = memo(({ appState, onZoomChange }) => {\n  const zoomValue = `${(appState.zoom.value * 100).toFixed(0)}%`;\n\n  return (\n    <div className={styles.scale}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value - ZOOM_STEP))\n        }\n      >\n        {ZoomOutIcon}\n      </span>\n      <span\n        className={styles.value}\n        onClick={() => onZoomChange(getNormalizedZoom(1))}\n      >\n        {zoomValue}\n      </span>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value + ZOOM_STEP))\n        }\n      >\n        {ZoomInIcon}\n      </span>\n    </div>\n  );\n});\n\nexport default Scale;\n","// extracted by mini-css-extract-plugin\nexport default {\"layer\":\"index_layer__JlGve\",\"ball_red\":\"index_ball_red__Sy41Y\",\"move\":\"index_move__+FZgw\",\"boundceBall\":\"index_boundceBall__4iw92\",\"shadowball\":\"index_shadowball__QeKta\",\"shadowMove\":\"index_shadowMove__4eBWH\"};","import React, { memo } from \"react\";\nimport Tools from \"../tools\";\nimport Scale from \"../scale\";\nimport styles from \"./index.module.less\";\nconst LayerUI = memo(\n  ({ activeTool, onActiveToolChange, appState, onZoomChange }) => {\n    return (\n      <div className={styles.layer}>\n        <Scale appState={appState} onZoomChange={onZoomChange} />\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={onActiveToolChange}\n        />\n        <div className={styles.boundceBall}>\n          <div className={styles.ball_red}></div>\n          <div className={styles.shadowball}></div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default LayerUI;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__b45r1\",\"textarea_copy\":\"index_textarea_copy__REiTG\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache } from \"../../renderer/renderElement\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ staticCanvasRef }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const left = event.clientX - appState.offsetLeft;\n      const top = event.clientY - appState.offsetTop;\n      const styleObj = {\n        font: getFontString(element),\n        left: `${left}px`,\n        top: `${top}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - left;\n      // textarea.style.maxWidth = `${maxWidth}px`;\n      // textarea.style.width = `${element.fontSize}px`;\n      // textarea.style.height = `${element.fontSize * 1.2}px`;\n      Object.assign(textarea.style, {\n        zIndex: 1,\n        maxWidth: `${maxWidth}px`,\n        width: `${element.fontSize}px`,\n        height: `${element.fontSize * 1.2}px`,\n      });\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          // console.log(\"tex5....\", text, text.length);\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              console.log(\"正常的输入\");\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              console.log(\"粘贴进来的文本\");\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              console.log(\"splitResult..\", splitResult);\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            zIndex: -1,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { distance } from \"@/util\";\n// import { isAndroid } from \"@/util/device\";\nimport {\n  withBatchedUpdatesThrottled,\n  viewportCoordsToSceneCoords,\n} from \"@/util\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\nimport generateElements, { animateElements } from \"./generateElement\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport {\n  deleteElementCache,\n  clearElementCache,\n} from \"./renderer/renderElement\";\nimport LayerUI from \"./components/layer-ui\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  zoom: { value: 1 },\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst ZOOM_STEP = 0.1;\n\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const cursorPosition = useRef({});\n  const textareaRef = useRef(null);\n  const rafRef = useRef(null);\n  const globalVarRef = useRef({});\n  const [flag, refreshFlag] = useState(false);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  const [testObj, setTestObj] = useState({ count: \"\", type: \"rectangle\" });\n  const [animate, setAnimate] = useState(false);\n  const animateRef = useRef();\n  const refresh = () => {\n    refreshFlag(!flag);\n  };\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    const updateCurrentCursorPosition = (event) => {\n      cursorPosition.current = {\n        cursorX: event.clientX,\n        cursorY: event.clientY,\n      };\n    };\n    const onTapStart = (e) => {\n      e.preventDefault();\n    };\n    const canvas = canvasRef.current;\n    canvas.addEventListener(\"touchstart\", onTapStart);\n    document.addEventListener(\"mousemove\", updateCurrentCursorPosition);\n    return () => {\n      canvas.removeEventListener(\"touchstart\", onTapStart);\n\n      wrap.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"mousemove\", updateCurrentCursorPosition);\n    };\n  }, []);\n  useEffect(() => {\n    let frame = 0;\n    let startTime = Date.now();\n\n    const loop = () => {\n      const currentTime = Date.now();\n      frame++;\n\n      if (currentTime > 1000 + startTime) {\n        const fps = Math.round((frame * 1000) / (currentTime - startTime));\n        rafRef.current.innerText = `FPS：${fps}`;\n        frame = 0;\n        startTime = currentTime;\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    loop();\n  }, []);\n  const reDrawAfterZoom = () => {\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n    if (globalVarRef.current.zoomTimerId) {\n      clearTimeout(globalVarRef.current.zoomTimerId);\n    }\n    globalVarRef.current.zoomTimerId = setTimeout(() => {\n      clearElementCache();\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    }, 300);\n  };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    // 关于缩放：双指放大时，deltaY是负数，缩小时，deltaY是正数\n    // 缩放，本质上就是对某个点的坐标进行变换\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY); // 只有两种情况，要么+1，要么-1\n      const MAX_STEP = ZOOM_STEP * 100; // 10\n      const absDelta = Math.abs(deltaY);\n      let delta = deltaY;\n      // delta最大为10\n      if (absDelta > MAX_STEP) {\n        delta = MAX_STEP * sign;\n      }\n      let newZoom = appState.zoom.value - delta / 100;\n      newZoom +=\n        Math.log10(Math.max(1, appState.zoom.value)) *\n        -sign *\n        Math.min(1, absDelta / 20);\n      const nextZoom = getNormalizedZoom(newZoom);\n      Object.assign(appState, {\n        ...getStateForZoom(\n          {\n            viewportX: cursorPosition.current.cursorX,\n            viewportY: cursorPosition.current.cursorY,\n            nextZoom: nextZoom,\n          },\n          appState\n        ),\n      });\n      // renderScene(canvasRef.current, appState);\n      refresh();\n      reDrawAfterZoom();\n      return;\n    }\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (!activeTool.type) return;\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n      console.log(\"pointer up appState...\", appState);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    if (activeTool.type) return;\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n        >\n          动态canvas\n        </canvas>\n        <LayerUI\n          activeTool={activeTool}\n          onZoomChange={(zoomVal) => {\n            if (appState.zoom.value === zoomVal) return;\n            Object.assign(appState, {\n              ...getStateForZoom(\n                {\n                  viewportX: appState.canvasWidth / 2 + appState.offsetLeft,\n                  viewportY: appState.canvasHeight / 2 + appState.offsetTop,\n                  nextZoom: zoomVal,\n                },\n                appState\n              ),\n            });\n            refresh();\n            reDrawAfterZoom();\n          }}\n          appState={{ ...appState }}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} staticCanvasRef={staticCanvasRef} />\n      </div>\n      <div>\n        <span ref={rafRef}>FPS：--</span>\n        <span className=\"total\" id=\"canvas-total\"></span>\n      </div>\n      <div className=\"row\">\n        <input\n          type=\"number\"\n          value={testObj.count}\n          onChange={(e) => setTestObj({ ...testObj, count: e.target.value })}\n        />\n        <select\n          value={testObj.type}\n          onChange={(e) => setTestObj({ ...testObj, type: e.target.value })}\n        >\n          <option value=\"freedraw\">freedraw</option>\n          <option value=\"rectangle\">rectangle</option>\n          <option value=\"text\">text</option>\n        </select>\n        <button\n          onClick={() => {\n            const elements = generateElements(\n              Number(testObj.count),\n              testObj.type,\n              appState\n            );\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              ...elements,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n          }}\n        >\n          生成\n        </button>\n        <button\n          onClick={() => {\n            setAnimate(!animate);\n            if (animateRef.current) {\n              cancelAnimationFrame(animateRef.current);\n            }\n            if (animate) return;\n            let diffTime = 100;\n            let lastDate = Date.now();\n            const tick = () => {\n              const currentDate = Date.now();\n              if (currentDate - lastDate >= diffTime) {\n                lastDate = currentDate;\n                const elements = animateElements(\n                  scene.getElementsIncludingDeleted(),\n                  appState\n                );\n                renderScene({\n                  elements: elements,\n                  appState: appState,\n                  scale: window.devicePixelRatio,\n                  canvas: staticCanvasRef.current,\n                  renderConfig: {\n                    selectionColor: \"#6965db\",\n                    scrollX: appState.scrollX,\n                    scrollY: appState.scrollY,\n                    viewBackgroundColor: \"#ffffff\",\n                    zoom: appState.zoom,\n                  },\n                });\n              }\n\n              animateRef.current = requestAnimationFrame(tick);\n            };\n            animateRef.current = requestAnimationFrame(tick);\n          }}\n        >\n          {animate ? \"停止动画\" : \"动画\"}\n        </button>\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { getCommonBounds, distance } from \"./index\";\nconst getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const canvasToDataURL = ({ renderScene, elements, appState }) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  console.log(\"export...\", minX, minY, width, height);\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  renderScene({\n    elements,\n    isExport: true,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: appState.zoom,\n    },\n  });\n\n  return canvas.toDataURL();\n};\nexport const exportPng = ({ renderScene, elements, appState }) => {\n  const dataUrl = canvasToDataURL({ renderScene, elements, appState });\n  var a = document.createElement(\"a\");\n  a.href = dataUrl;\n  a.download = \"canvas.png\";\n  a.click();\n};\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n","const MIN_ZOOM = 0.1;\n\nexport const getNormalizedZoom = (zoom) => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30));\n};\n\nexport const getStateForZoom = (\n  { viewportX, viewportY, nextZoom },\n  appState\n) => {\n  const screenX = viewportX - appState.offsetLeft;\n  const screenY = viewportY - appState.offsetTop;\n  const currentZoom = appState.zoom.value;\n\n  return {\n    scrollX: appState.scrollX + screenX / nextZoom - screenX / currentZoom,\n    scrollY: appState.scrollY + screenY / nextZoom - screenY / currentZoom,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n"],"names":["newElement","type","x","y","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","rest","id","randomId","isDeleted","createElement","elementType","pointerDownState","appState","origin","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","newTextElement","opts","text","fontSize","fontFamily","textAlign","verticalAlign","originalText","getRandomValue","n","m","Number","Math","random","toFixed","count","element","elements","console","log","i","scrollX","canvasWidth","scrollY","canvasHeight","abs","pointsNum","push","length","elementWithCanvasCache","WeakMap","deleteElementCache","delete","generateElementWithCanvas","renderConfig","prevElementWithCanvas","get","elementWithCanvas","generateElementCanvas","zoom","set","rightContainer","document","getElementById","canvas","context","getContext","padding","getCanvasPadding","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","distance","window","devicePixelRatio","value","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeRect","font","getFontString","lines","split","lineHeight","textBaseline","index","fillText","forEach","point","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","renderScene","isExport","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","rectH","rectW","beginPath","drawAxis","visibleElements","filter","viewTransformations","getElementBounds","topLeftSceneCoords","viewportCoordsToSceneCoords","clientX","offsetLeft","clientY","offsetTop","bottomRightSceneCoords","isVisibleElement","innerText","renderElement","localStorage","setItem","JSON","stringify","createIcon","d","style","mirror","focusable","role","viewBox","fill","RectangleIcon","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","modifiedTablerIconProps","ZoomInIcon","ZoomOutIcon","Scene","parse","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","join","onClick","exportPng","getElementsIncludingDeleted","map","shape","isSelected","Scale","onZoomChange","zoomValue","getNormalizedZoom","LayerUI","Index","forwardRef","ref","staticCanvasRef","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","event","preventDefault","stopPropagation","sceneX","sceneY","draggingElement","textarea","current","focus","left","top","styleObj","color","Object","assign","copyTextarea","maxWidth","zIndex","onChange","e","target","parseFloat","copyTextWidth","getBoundingClientRect","slice","splitResult","line","lastIdx","str","onBlur","offsetWidth","offsetHeight","replaceAllElements","selectionColor","viewBackgroundColor","setTimeout","background","contentEditable","Canvas","canvasRef","canvasContainer","cursorPosition","rafRef","globalVarRef","flag","refreshFlag","setActiveTool","testObj","setTestObj","animate","setAnimate","animateRef","refresh","useEffect","setCanvasSize","wrap","handleWheel","addEventListener","passive","updateCurrentCursorPosition","cursorX","cursorY","onTapStart","removeEventListener","frame","startTime","Date","now","loop","currentTime","fps","round","requestAnimationFrame","reDrawAfterZoom","zoomTimerId","clearTimeout","onPointerMoveFromCanvasPointerDownHandler","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","onWheel","deltaX","deltaY","metaKey","ctrlKey","sign","absDelta","delta","ZOOM_STEP","newZoom","log10","max","min","nextZoom","getStateForZoom","viewportX","viewportY","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","zoomVal","generateElements","cancelAnimationFrame","lastDate","tick","currentDate","el","animateElements","canvasToDataURL","exportPadding","getCommonBounds","minX","minY","maxX","maxY","getCanvasSize","toDataURL","dataUrl","a","href","download","click","r","floor","g","b","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","ret","trailing","flush","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","p","rotate","cos","sin","x11","y11","x12","y12","x22","y22","x21","y21","testIdBase","__generateExcalidrawElements","ele","xs","ys","getSizeFromPoints","roughness","groupIds","roundness","seed","version","versionNonce","boundElements","updated","link","locked","pressures","simulatePressure","lastCommittedPoint","screenX","screenY","currentZoom"],"sourceRoot":""}