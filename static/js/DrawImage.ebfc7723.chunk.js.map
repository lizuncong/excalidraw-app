{"version":3,"file":"static/js/DrawImage.ebfc7723.chunk.js","mappings":"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","sources":["components/markdown/index.jsx","pages/free-draw/draw-image/renderScene.js","pages/free-draw/draw-image/index.jsx","pages/free-draw/draw-image/util.js","util/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport rehypeRaw from \"rehype-raw\";\n// import { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"github-markdown-css\";\n\nimport './index.less'\n\n\nfunction Shapes({ src }) {\n  const [mdText, setMdText] = useState(\"\");\n  useEffect(() => {\n    fetch(src)\n      .then((response) => response.text())\n      .then((text) => {\n        setMdText(text);\n      });\n  }, [src]);\n  return (\n    <div className=\"markdown-body\">\n      <ReactMarkdown\n        children={mdText}\n        rehypePlugins={[rehypeRaw]}\n        remarkPlugins={[remarkGfm]}\n        components={{\n          code({ node, inline, className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return !inline && match ? (\n              <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                // style={{ background: 'red'}}\n                language={match[1]}\n                className=\"my-code\"\n                PreTag=\"div\"\n                {...props}\n              />\n            ) : (\n              <code className={className} {...props}>\n                {children}\n              </code>\n            );\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Shapes;\n","import { elements } from \"./index\";\nimport { getElementAbsoluteCoords, distance } from \"./util\";\n// let previewCanvas = null;\nconst elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nconst generateCanvas = (ele) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(ele);\n\n  if (prevElementWithCanvas) {\n    return prevElementWithCanvas;\n  }\n  // 离屏canvas绘制\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n\n  // const offscreenContainer = document.getElementById(\"offscreen\");\n\n  // if (previewCanvas) {\n  //   offscreenContainer.removeChild(previewCanvas);\n  // }\n  // previewCanvas = canvas;\n  // offscreenContainer.appendChild(previewCanvas);\n\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords({\n    ...ele,\n    points: ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    }),\n  });\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  const padding = 20;\n  canvas.width = distance(x1, x2) * window.devicePixelRatio + padding * 2;\n  canvas.height = distance(y1, y2) * window.devicePixelRatio + padding * 2;\n  canvasOffsetX =\n    ele.x > x1 ? distance(ele.x, x1) * window.devicePixelRatio : 0;\n\n  canvasOffsetY =\n    ele.y > y1 ? distance(ele.y, y1) * window.devicePixelRatio : 0;\n\n  context.translate(canvasOffsetX, canvasOffsetY);\n  context.save();\n  context.translate(padding, padding);\n  context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  context.lineWidth = 3;\n  context.strokeStyle = ele.strokeStyle;\n  ele.points.forEach((point, index) => {\n    let [x, y] = point;\n    x = x - ele.x;\n    y = y - ele.y;\n    if (!index) {\n      context.moveTo(x, y);\n    } else {\n      context.lineTo(x, y);\n    }\n  });\n\n  context.stroke();\n\n  context.restore();\n\n  elementWithCanvasCache.set(ele, canvas);\n  return canvas;\n};\nconst renderElements = (ctx, appState) => {\n  elements.forEach((ele) => {\n    // 离屏canvas绘制\n    // const canvas = document.createElement(\"canvas\");\n    // const context = canvas.getContext(\"2d\");\n\n    // const offscreenContainer = document.getElementById(\"offscreen\");\n\n    // if (previewCanvas) {\n    //   offscreenContainer.removeChild(previewCanvas);\n    // }\n    // previewCanvas = canvas;\n    // offscreenContainer.appendChild(previewCanvas);\n    const canvas = generateCanvas(ele);\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords({\n      ...ele,\n      points: ele.points.map((p) => {\n        return [p[0] - ele.x, p[1] - ele.y];\n      }),\n    });\n\n    const padding = 20;\n\n    // 真正绘制\n    x1 = Math.floor(x1);\n    x2 = Math.ceil(x2);\n    y1 = Math.floor(y1);\n    y2 = Math.ceil(y2);\n    const cx = ((x1 + x2) / 2 + appState.scrollX) * window.devicePixelRatio;\n    const cy = ((y1 + y2) / 2 + appState.scrollY) * window.devicePixelRatio;\n\n    ctx.save();\n    ctx.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n    ctx.translate(cx, cy);\n\n    ctx.drawImage(\n      canvas,\n      (-(x2 - x1) / 2) * window.devicePixelRatio - padding,\n      (-(y2 - y1) / 2) * window.devicePixelRatio - padding,\n      canvas.width,\n      canvas.height\n    );\n    // ctx.beginPath();\n    // ctx.lineWidth = 3;\n    // ctx.strokeStyle = \"blue\";\n\n    // ele.points.forEach((point, index) => {\n    //   if (!index) {\n    //     ctx.moveTo(...ele.points[0]);\n    //   } else {\n    //     ctx.lineTo(...point);\n    //   }\n    // });\n\n    // ctx.stroke();\n\n    ctx.restore();\n  });\n};\nconst renderScene = (canvas, appState) => {\n  const context = canvas.getContext(\"2d\");\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  renderElements(context, appState);\n  localStorage.setItem(\"free-draw-elements\", JSON.stringify(elements));\n};\n\nexport default renderScene;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport { viewportCoordsToSceneCoords, rgb } from \"@/util\";\nimport MarkDown from \"@/components/markdown\";\nimport doc from \"@doc/canvas进阶/点稀释.md\";\nimport \"./index.less\";\nimport renderScene, { deleteElementCache } from \"./renderScene\";\nimport { withBatchedUpdatesThrottled } from \"./util\";\nexport const elements =\n  JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\nconst appState = {\n  offsetLeft: 0,\n  offsetTop: 0,\n  scrollX: 0,\n  scrollY: 0,\n  draggingElement: null,\n};\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  useEffect(() => {\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const { offsetWidth, offsetHeight, offsetLeft, offsetTop } = canvas;\n    canvas.width = offsetWidth * window.devicePixelRatio;\n    canvas.height = offsetHeight * window.devicePixelRatio;\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    appState.offsetLeft = offsetLeft;\n    appState.offsetTop = offsetTop;\n    renderScene(canvas, appState);\n\n    // 防止双指滑动时切换页面\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasPointerDown = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n\n    const pointerDownState = {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n      },\n    };\n    const element = {\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: \"#000000\",\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: rgb(),\n    };\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    elements.push(element);\n\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      // const draggingElement = appState.draggingElement;\n      // const dx = pointerCoords.x - draggingElement.x;\n      // const dy = pointerCoords.y - draggingElement.y;\n      appState.draggingElement.points.push([pointerCoords.x, pointerCoords.y]);\n      deleteElementCache(appState.draggingElement);\n\n      renderScene(canvasRef.current, appState);\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler = (pointerDownState) => () => {\n    console.log(\"appState...\", appState);\n    console.log(\n      \"elements...\",\n      elements.map((ele) => ele.points.length)\n    );\n    window.removeEventListener(\n      \"pointermove\",\n      pointerDownState.eventListeners.onMove\n    );\n    window.removeEventListener(\n      \"pointerup\",\n      pointerDownState.eventListeners.onUp\n    );\n  };\n  return (\n    <div className=\"draw-image\">\n      <div className=\"container\" ref={canvasContainer}>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas\"\n          onPointerDown={handleCanvasPointerDown}\n        >\n          绘制canvas\n        </canvas>\n      </div>\n      {/* <div id=\"offscreen\"></div> */}\n      <MarkDown src={doc} />\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { unstable_batchedUpdates } from \"react-dom\";\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (points) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getElementAbsoluteCoords = (element) => {\n  const [minX, minY, maxX, maxY] = getBoundsFromPoints(element.points);\n  const x1 = minX + element.x;\n  const y1 = minY + element.y;\n  const x2 = maxX + element.x;\n  const y2 = maxY + element.y;\n  return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const {width, height} = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length -1 ],\n    };\n  });\n  return result\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;\n"],"names":["src","useState","mdText","setMdText","useEffect","fetch","then","response","text","className","children","rehypePlugins","rehypeRaw","remarkPlugins","remarkGfm","components","code","node","inline","props","match","exec","String","replace","language","PreTag","elementWithCanvasCache","WeakMap","deleteElementCache","element","delete","renderElements","ctx","appState","elements","ele","canvas","prevElementWithCanvas","get","canvasOffsetX","canvasOffsetY","document","createElement","context","getContext","getElementAbsoluteCoords","points","map","p","x","y","x1","y1","x2","y2","width","distance","window","devicePixelRatio","padding","height","translate","save","scale","lineWidth","strokeStyle","forEach","point","index","lineTo","moveTo","stroke","restore","set","generateCanvas","Math","floor","ceil","cx","scrollX","cy","scrollY","drawImage","clearRect","localStorage","setItem","JSON","stringify","parse","getItem","offsetLeft","offsetTop","draggingElement","memo","canvasRef","useRef","canvasContainer","current","offsetWidth","offsetHeight","renderScene","wrap","handleWheel","e","preventDefault","addEventListener","passive","removeEventListener","onPointerMoveFromCanvasPointerDownHandler","pointerDownState","withBatchedUpdatesThrottled","event","pointerCoords","viewportCoordsToSceneCoords","push","onPointerUpFromCanvasPointerDownHandler","console","log","length","eventListeners","onMove","onUp","ref","onPointerDown","origin","lastCoords","strokeColor","backgroundColor","fillStyle","strokeWidth","rgb","onPointerMove","onPointerUp","doc","func","fn","opts","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","requestAnimationFrame","ret","trailing","flush","cancelAnimationFrame","cancel","throttleRAF","unstable_batchedUpdates","minX","Infinity","minY","maxX","maxY","min","max","getBoundsFromPoints","abs","testIdBase","generateExcalidrawElements","xs","ys","getSizeFromPoints","id","type","angle","roughness","opacity","groupIds","roundness","seed","random","version","versionNonce","isDeleted","boundElements","updated","Date","now","link","locked","pressures","simulatePressure","lastCommittedPoint","__generateExcalidrawElements","clientX","clientY","r","g","b","rotate","cos","sin","getCommonBounds","x11","y11","x12","y12","x22","y22","x21","y21","getElementBounds"],"sourceRoot":""}