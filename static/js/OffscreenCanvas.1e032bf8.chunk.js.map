{"version":3,"file":"static/js/OffscreenCanvas.1e032bf8.chunk.js","mappings":"yYAGaA,EAAa,SAAH,GAchB,IAbLC,EAAI,EAAJA,KACAC,EAAC,EAADA,EACAC,EAAC,EAADA,EACAC,EAAW,EAAXA,YACAC,EAAe,EAAfA,gBACAC,EAAS,EAATA,UAAU,EAAD,EACTC,YAAAA,OAAW,MAAG,EAAC,EACfC,EAAW,EAAXA,YAAY,EAAD,EACXC,MAAAA,OAAK,MAAG,EAAC,MACTC,OAAAA,OAAM,MAAG,EAAC,MACVC,MAAAA,OAAK,MAAG,EAAC,MACTC,OAAAA,OAAM,MAAG,GAAE,EACRC,GAAI,YAEP,OAAO,QACLC,IAAIC,EAAAA,EAAAA,MACJd,KAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAM,MAAAA,EACAC,OAAAA,EACAN,YAAAA,EACAC,gBAAAA,EACAC,UAAAA,EACAC,YAAAA,EACAC,YAAAA,EACAG,MAAAA,EACAK,WAAW,EACXJ,OAAAA,GACGC,EAEP,EAEaI,EAAgB,SAAH,GAAqD,IAA/CC,EAAW,EAAXA,YAAaC,EAAgB,EAAhBA,iBAAkBC,EAAQ,EAARA,SA2B7D,OAxBYpB,EADQ,aAAhBkB,EACmB,CACnBjB,KAAMiB,EACNhB,EAAGiB,EAAiBE,OAAOnB,EAC3BC,EAAGgB,EAAiBE,OAAOlB,EAC3BS,OAAQ,CAAC,CAACO,EAAiBE,OAAOnB,EAAGiB,EAAiBE,OAAOlB,IAC7DC,YAAagB,EAASE,uBACtBjB,gBAAiBe,EAASG,2BAC1BjB,UAAWc,EAASI,qBACpBjB,YAAaa,EAASK,uBACtBjB,aAAakB,EAAAA,EAAAA,OAGM,CACnBzB,KAAMiB,EACNhB,EAAGiB,EAAiBE,OAAOnB,EAC3BC,EAAGgB,EAAiBE,OAAOlB,EAC3BC,YAAagB,EAASE,uBACtBjB,gBAAiBe,EAASG,2BAC1BjB,UAAWc,EAASI,qBACpBjB,YAAaa,EAASK,uBACtBjB,aAAakB,EAAAA,EAAAA,OAKnB,EAEaC,EAAiB,SAACC,GAY7B,OAXoB5B,GAAW,QAC7BC,KAAM,OACN4B,KAAMD,EAAKC,KACXC,SAAUF,EAAKE,SACfC,WAAYH,EAAKG,WACjBC,UAAWJ,EAAKI,UAChBC,cAAeL,EAAKK,cACpBC,aAAcN,EAAKC,MAChBD,GAIP,EC7EMO,EAAiB,SAACC,EAAGC,GACzB,OAAOC,QAAQC,KAAKC,UAAYH,EAAID,GAAKA,GAAGK,QAAQ,GACtD,EAyFA,EAxFyB,SAACC,EAAOzC,EAAMmB,GACrC,IAEIuB,EAFEC,EAAW,GACjBC,QAAQC,IAAI,uBAAwBJ,EAAOzC,GAE3C,IAAK,IAAI8C,EAAI,EAAGA,EAAIL,EAAOK,IAAK,CAC9B,IAAI7C,EAAIiC,GACLf,EAAS4B,QACV5B,EAAS6B,YAAc7B,EAAS4B,SAE9B7C,EAAIgC,GACLf,EAAS8B,QACV9B,EAAS+B,aAAe/B,EAAS8B,SAYnC,GAVAP,EAAU1B,EAAc,CACtBC,YAAajB,EACbkB,iBAAkB,CAChBE,OAAQ,CACNnB,EAAAA,EACAC,EAAAA,IAGJiB,SAAAA,IAEW,cAATnB,EAAsB,CACxB,IAAMQ,EACJ8B,KAAKa,IACHjB,GACGf,EAAS4B,QAAU9C,EACpBkB,EAAS6B,YAAc7B,EAAS4B,QAAU9C,IAE1C,EACAQ,EACJ6B,KAAKa,IACHjB,GACGf,EAAS8B,QAAU/C,EACpBiB,EAAS+B,aAAe/B,EAAS8B,QAAU/C,IAE3C,EACNwC,EAAQlC,MAAQA,EAChBkC,EAAQjC,OAASA,CACnB,MAAO,GAAa,aAATT,EAET,IADA,IAAMoD,EAAYlB,EAAe,GAAI,KAC5BY,EAAI,EAAGA,EAAIM,EAAWN,IAC7B7C,EAAIiC,EAAejC,EAAGA,EAAI,IAC1BC,EAAIgC,EAAehC,EAAGA,EAAI,IAC1BwC,EAAQ/B,OAAO0C,KAAK,CAACpD,EAAGC,SAErB,GAAa,SAATF,EAAiB,CAC1B,IAAM4B,EAAI,UAAM3B,EAAC,aAAKC,GACtBwC,EAAUhB,EAAe,CACvBzB,EAAAA,EACAC,EAAAA,EACAC,aAAasB,EAAAA,EAAAA,MACbrB,gBAAiB,cACjBC,UAAW,UACXC,YAAa,EACbC,YAAa,QACbqB,KAAAA,EACApB,MAAqB,GAAdoB,EAAK0B,OACZ7C,OAAQ,GACRoB,SAAU,GACVC,WAAY,SACZC,UAAW,OACXC,cAAe,OAEnB,CAEAW,EAASU,KAAKX,EAChB,CAEA,OAAOC,CACT,ECvEIY,EAAyB,IAAIC,QAEpBC,EAAqB,SAACf,GACjCa,EAAuBG,OAAOhB,EAChC,EAKMiB,EAA4B,SAACjB,EAASkB,GAC1C,IAAMC,EAAwBN,EAAuBO,IAAIpB,GAEzD,GAAImB,IAA0BD,EAAaG,YACzC,OAAOF,EAET,IAAMG,EAAoBC,EACxBvB,EACAkB,EAAaM,KACbN,GAMF,OAJKA,EAAaG,aAChBR,EAAuBY,IAAIzB,EAASsB,GAG/BA,CACT,EACII,EAAiBC,SAASC,eAAe,eAEvCL,EAAwB,SAACvB,EAASwB,EAAMN,GAC5C,IAAMW,EAASF,SAASrD,cAAc,UAChCwD,EAAUD,EAAOE,WAAW,MAC5BC,EAAUC,EAAiBjC,GAC5B0B,IACHA,EAAiBC,SAASC,eAAe,gBAK3BC,EAKhB,GAAqB,aAAjB7B,EAAQ1C,KAAqB,CAC/B,IACI4E,EACAC,EAFJ,GAAuBC,EAAAA,EAAAA,IAAyBpC,GAAQ,eAAnDqC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAGnBX,EAAO/D,OACL2E,EAAAA,EAAAA,IAASJ,EAAIE,GAAMG,OAAOC,iBAAmBnB,EAAKoB,MAClDZ,EAAUR,EAAKoB,MAAQ,EACzBf,EAAO9D,QACL0E,EAAAA,EAAAA,IAASH,EAAIE,GAAME,OAAOC,iBAAmBnB,EAAKoB,MAClDZ,EAAUR,EAAKoB,MAAQ,EACzBV,EACElC,EAAQzC,EAAI8E,GACRI,EAAAA,EAAAA,IAASzC,EAAQzC,EAAG8E,GAAMK,OAAOC,iBAAmBnB,EAAKoB,MACzD,EAENT,EACEnC,EAAQxC,EAAI8E,GACRG,EAAAA,EAAAA,IAASzC,EAAQxC,EAAG8E,GAAMd,EAAKoB,MAAQF,OAAOC,iBAC9C,EACNb,EAAQe,UAAUX,EAAeC,EACnC,MACEN,EAAO/D,MACLkC,EAAQlC,MAAQ4E,OAAOC,iBAAmBnB,EAAKoB,MAC/CZ,EAAUR,EAAKoB,MAAQ,EACzBf,EAAO9D,OACLiC,EAAQjC,OAAS2E,OAAOC,iBAAmBnB,EAAKoB,MAChDZ,EAAUR,EAAKoB,MAAQ,EAc3B,OAXAd,EAAQgB,OACRhB,EAAQe,UAAUb,EAAUR,EAAKoB,MAAOZ,EAAUR,EAAKoB,OAEvDd,EAAQiB,MACNL,OAAOC,iBAAmBnB,EAAKoB,MAC/BF,OAAOC,iBAAmBnB,EAAKoB,OAGjCI,EAAoBhD,EAAS8B,EAASZ,GACtCY,EAAQmB,UAED,CACLjD,QAAAA,EACA6B,OAAAA,EACAqB,MAAOhC,EAAagC,MACpBC,WAAY3B,EACZU,cA/CkB,EAgDlBC,cA/CkB,EAiDtB,EAEMa,EAAsB,SAAChD,EAAS8B,EAASZ,GAE7C,OADAY,EAAQsB,YAAcpD,EAAQqD,QAAU,IAChCrD,EAAQ1C,MACd,IAAK,YACHwE,EAAQwB,SAAW,QACnBxB,EAAQyB,QAAU,QAClBzB,EAAQ0B,UAAYxD,EAAQpC,YAC5BkE,EAAQjE,YAAcmC,EAAQnC,YAC9BiE,EAAQ2B,WAAW,EAAG,EAAGzD,EAAQlC,MAAOkC,EAAQjC,QAChD,MAEF,IAAK,OACH+D,EAAQ4B,MAAOC,EAAAA,EAAAA,IAAc3D,GAC7B8B,EAAQnE,UAAYqC,EAAQvC,YAC5BqE,EAAQzC,UAAYW,EAAQX,UAC5B,IAAMuE,EAAQ5D,EAAQd,KAAK2E,MAAM,MAC3BC,EAAaF,EAAMhD,OAASZ,EAAQjC,OAAS6F,EAAMhD,OAAS,GAClEkB,EAAQiC,aAAe,SACvB,IAAK,IAAIC,EAAQ,EAAGA,EAAQJ,EAAMhD,OAAQoD,IACxClC,EAAQmC,SAASL,EAAMI,GAAQ,GAAIA,EAAQ,GAAKF,GAElD,MAEF,IAAK,WACHhC,EAAQgB,OACRhB,EAAQ0B,UAAYxD,EAAQpC,YAC5BkE,EAAQjE,YAAcmC,EAAQnC,YAC9BmC,EAAQ/B,OAAOiG,SAAQ,SAACC,EAAOH,GAC7B,cAAaG,EAAK,GAAb5G,EAAC,KAAEC,EAAC,KACTD,GAAQyC,EAAQzC,EAChBC,GAAQwC,EAAQxC,EACXwG,EAGHlC,EAAQsC,OAAO7G,EAAGC,GAFlBsE,EAAQuC,OAAO9G,EAAGC,EAItB,IAEAsE,EAAQwC,SAERxC,EAAQmB,UAMZnB,EAAQsB,YAAc,CACxB,EAEMnB,EAAmB,SAACjC,GAAO,MACd,aAAjBA,EAAQ1C,KAA4C,GAAtB0C,EAAQpC,YAAmB,EAAG,EAExD2G,EAAwB,SAACjD,EAAmBQ,EAASZ,GACzD,IAAMlB,EAAUsB,EAAkBtB,QAC5BgC,EAAUC,EAAiBjC,GACjC,GAAuBoC,EAAAA,EAAAA,IAAyBpC,GAAQ,eAAnDqC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KACnB,GAAqB,aAAjBxC,EAAQ1C,KAAqB,CAAC,IAAD,GACZ8E,EAAAA,EAAAA,IAAyBpC,GAAQ,eAAnDqC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEC,EAAE,IACjB,CACA,IAAMgC,IAAOnC,EAAKE,GAAM,EAAIrB,EAAab,SAAWqC,OAAOC,iBACrD8B,IAAOnC,EAAKE,GAAM,EAAItB,EAAaX,SAAWmC,OAAOC,iBAC3Db,EAAQgB,OACRhB,EAAQiB,MAAM,EAAIL,OAAOC,iBAAkB,EAAID,OAAOC,kBACtDb,EAAQe,UAAU2B,EAAIC,GACtB3C,EAAQ4C,UACNpD,EAAkBO,SACfU,EAAKF,GAAM,EAAKK,OAAOC,iBACvBX,EAAUV,EAAkB6B,WAAWP,MACtCtB,EAAkB6B,WAAWP,QAC9BJ,EAAKF,GAAM,EAAKI,OAAOC,iBACvBX,EAAUV,EAAkB6B,WAAWP,MACtCtB,EAAkB6B,WAAWP,MACjCtB,EAAkBO,OAAO/D,MAAQwD,EAAkB6B,WAAWP,MAC9DtB,EAAkBO,OAAO9D,OAASuD,EAAkB6B,WAAWP,OAGjEd,EAAQmB,SAGV,ECtFa0B,EAAc,SAAH,GAMjB,IALL1E,EAAQ,EAARA,SACAxB,EAAQ,EAARA,SACAsE,EAAK,EAALA,MACAlB,EAAM,EAANA,OACAX,EAAY,EAAZA,aAEMY,EAAUD,EAAOE,WAAW,MAElCD,EAAQgB,OACRhB,EAAQiB,MAAMA,EAAOA,GAErB,IAAM6B,EAAwB/C,EAAO/D,MAAQiF,EACvC8B,EAAyBhD,EAAO9D,OAASgF,EAC/CjB,EAAQgD,UAAU,EAAG,EAAGF,EAAuBC,GAE/C/C,EAAQgB,OAERhB,EAAQiB,MAAM7B,EAAaM,KAAKoB,MAAO1B,EAAaM,KAAKoB,OA3GnC,SAACmC,EAAI,GAAiC,IAA9B1E,EAAO,EAAPA,QAASE,EAAO,EAAPA,QAASiB,EAAI,EAAJA,KAChDuD,EAAIjC,OACJ,IAAMkC,EAAQ,IACRC,EAAQ,IAERpD,EAASkD,EAAIlD,OACnBkD,EAAIlH,YAAc,MAClBkH,EAAIpH,UAAY,MAEhBoH,EAAIG,YACJH,EAAIvB,UAAY,EAChBuB,EAAIhB,aAAe,SACnBgB,EAAIjC,OACJiC,EAAIlC,UAAU,EAAGtC,GACjB,IAAK,IAAIH,EAAI,EAAGA,EAAIG,EAAUyE,EAAO5E,IAEnC2E,EAAIV,OAAO,GAAIjE,EAAI4E,GACnBD,EAAIX,OAba,GAaOhE,EAAI4E,GAC5BD,EAAIrB,KAAO,aACXqB,EAAId,UAAU7D,EAAG,GAAIA,EAAI4E,EAAQ,IAEnC,IACE,IAAI5E,EAAI,EACRA,GAAKyB,EAAO9D,OAASwC,EAAUiB,EAAKoB,QAAUoC,EAAQxD,EAAKoB,OAC3DxC,IAGA2E,EAAIV,OAAO,EAAGjE,EAAI4E,GAClBD,EAAIX,OAxBa,EAwBMhE,EAAI4E,GAC3BD,EAAIrB,KAAO,aACXqB,EAAId,SAAS7D,EAAG,EAAGA,EAAI4E,EAAQ,IAEjCD,EAAI9B,UACJ8B,EAAIjC,OACJiC,EAAIlC,UAAUxC,EAAS,GAEvB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAU4E,EAAO7E,IAEnC2E,EAAIV,QAAQjE,EAAI6E,EAAO,GACvBF,EAAIX,QAAQhE,EAAI6E,EAnCC,GAoCjBF,EAAIrB,KAAO,aACXqB,EAAId,UAAU7D,GAAIA,EAAI6E,EAAQ,EAAG,GAEnC,IACE,IAAI7E,EAAI,EACRA,GAAKyB,EAAO/D,MAAQuC,EAAUmB,EAAKoB,QAAUqC,EAAQzD,EAAKoB,OAC1DxC,IAGA2E,EAAIV,OAAOjE,EAAI6E,EAAO,GACtBF,EAAIX,OAAOhE,EAAI6E,EA9CE,GA+CjBF,EAAIrB,KAAO,aACXqB,EAAId,SAAS7D,EAAGA,EAAI6E,EAAQ,EAAG,GAEjCF,EAAI9B,UACJ8B,EAAIT,SAEJS,EAAI9B,SACN,CAkDEkC,CAASrD,EAASZ,GAElB,IAAMkE,EAAkBnF,EAASoF,QAAO,SAACrF,GAAO,OAlDzB,SACvBA,EACAM,EACAE,EACA8E,GAEA,OAAyBC,EAAAA,EAAAA,IAAiBvF,GAAQ,eAA3CqC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KACfgD,GAAqBC,EAAAA,EAAAA,IACzB,CACEC,QAASJ,EAAoBK,WAC7BC,QAASN,EAAoBO,WAE/BP,GAEIQ,GAAyBL,EAAAA,EAAAA,IAC7B,CACEC,QAASJ,EAAoBK,WAAarF,EAC1CsF,QAASN,EAAoBO,UAAYrF,GAE3C8E,GAGF,OACEE,EAAmBjI,GAAKgF,GACxBiD,EAAmBhI,GAAKgF,GACxBsD,EAAuBvI,GAAK8E,GAC5ByD,EAAuBtI,GAAK8E,CAEhC,CAuBIyD,CAAiB/F,EAAS4E,EAAuBC,EAAwB,CACvErD,KAAMN,EAAaM,KACnBmE,WAAYlH,EAASkH,WACrBE,UAAWpH,EAASoH,UACpBxF,QAASa,EAAab,QACtBE,QAASW,EAAaX,SACtB,IAEUoB,SAASC,eAAe,gBAChCoE,UAAS,wCAAW/F,EAASW,OAAM,oEAAewE,EAAgBxE,QAExEwE,EAAgBlB,SAAQ,SAAClE,ID5HE,SAACA,EAAS8B,EAASZ,EAAczC,GAC5D,IAAM6C,EAAoBL,EAA0BjB,EAASkB,GAC7DqD,EAAsBjD,EAAmBQ,EAASZ,EACpD,CC0HI+E,CAAcjG,EAAS8B,EAASZ,EAClC,IACAY,EAAQmB,UAERnB,EAAQmB,SAGV,ECpIA,GAAgB,MAAQ,qBAAqB,KAAO,oBAAoB,SAAW,yB,gDCDtEiD,EAAa,SAACC,EAAGlH,GAC5B,MAMoB,kBAATA,EAAoB,CAAEnB,MAAOmB,GAASA,EAAI,IALnDnB,MAAAA,OAAK,MAAG,IAAG,MACXC,OAAAA,OAAM,MAAGD,EAAK,EAEdsI,GADM,EAANC,OACK,EAALD,OACGlI,GAAI,YAET,OACE,gCACE,cAAY,OACZoI,UAAU,QACVC,KAAK,MACLC,QAAO,cAAS1I,EAAK,YAAIC,GACzBqI,MAAOA,GACHlI,GAAI,aAEM,kBAANiI,GAAiB,iBAAMM,KAAK,eAAeN,EAAGA,IAAQA,IAGpE,EAWaO,EAAgBR,GAC3B,eAAGtI,YAAY,MAAK,WAClB,iBAAM0G,OAAO,OAAO6B,EAAE,gBAAgBM,KAAK,UAC3C,iBAAMlJ,EAAE,IAAIC,EAAE,IAAIM,MAAM,KAAKC,OAAO,KAAK4I,GAAG,SAE9C,CACE7I,MAAO,GACPC,OAAQ,GACR0I,KAAM,OACN7I,YAAa,EACb0G,OAAQ,eACRsC,cAAe,QACfC,eAAgB,UAIPC,EAAeZ,GAC1B,eAAGtI,YAAY,OAAM,WACnB,iBACEmJ,SAAS,UACTZ,EAAE,+IAEJ,iBAAMA,EAAE,gCAEV,CACErI,MAAO,GACPC,OAAQ,GACR0I,KAAM,OACNnC,OAAQ,eACRsC,cAAe,QACfC,eAAgB,UAIPG,EAAkBd,GAC7B,eAAGtI,YAAY,OAAM,WACnB,iBAAM0G,OAAO,OAAO6B,EAAE,gBAAgBM,KAAK,UAC3C,iBAAMN,EAAE,eACR,iBAAMA,EAAE,qEACR,iBAAMA,EAAE,+CACR,iBAAMA,EAAE,oDACR,iBAAMA,EAAE,cACR,iBAAMA,EAAE,yBAnDY,CACtBrI,MAAO,GACPC,OAAQ,GACR0I,KAAM,OACN7I,YAAa,EACb0G,OAAQ,eACRsC,cAAe,QACfC,eAAgB,UAiDZI,EAA0B,CAC9BnJ,MAAO,GACPC,OAAQ,GACR0I,KAAM,OACNnC,OAAQ,eACRsC,cAAe,QACfC,eAAgB,SAELK,EAAahB,GACxB,iBAAMtI,YAAY,OAAOuI,EAAE,qCAC3Bc,GAGWE,EAAcjB,GACzB,iBAAMC,EAAE,WAAWvI,YAAY,SAC/BqJ,G,8BC7FIG,EAAK,WACT,cAAe,eACb,IAAMnH,EAAWoH,KAAKC,MAAMC,aAAaC,QAAQ,aACjDC,KAAKxH,SAAWA,GAAY,EAC9B,CAMC,OANA,mDACD,WACE,OAAOwH,KAAKxH,QACd,GAAC,gCACD,SAAmByH,GACjBD,KAAKxH,SAAWyH,CAClB,KAAC,EAVQ,GAaEC,EAAQ,IAAIP,ECLnBQ,EAAS,CACb,CACEtK,KAAM,YACNuK,KAAMnB,GAER,CACEpJ,KAAM,WACNuK,KAAMf,IAoCV,GAjCcgB,EAAAA,EAAAA,OAAK,YAAyC,IAAtCC,EAAU,EAAVA,WAAYC,EAAkB,EAAlBA,mBAChC,OACE,iBAAKC,UAAWC,EAAAA,MAAa,WAC3B,iBACED,UAAW,CAACC,EAAAA,MAAaC,KAAK,KAC9BC,QAAS,YACPC,EAAAA,EAAAA,IAAU,CACR1D,YAAAA,EACA1E,SAAU0H,EAAMW,8BAChB7J,SAAAA,IAEJ,EAAE,SAEDuI,IAEFY,EAAOW,KAAI,SAACC,GACX,IAAMC,EAAaV,EAAWzK,OAASkL,EAAMlL,KAC7C,OACE,iBAEE2K,UAAW,CAACC,EAAAA,KAAaO,GAAcP,EAAAA,UAAiBC,KAAK,KAC7DC,QAAS,kBACPJ,EAAmB,CAAE1K,KAAMmL,EAAa,GAAKD,EAAMlL,MAAO,EAC3D,SAEAkL,EAAMX,MANFW,EAAMlL,KASjB,MAGN,IChDA,GAAgB,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,sBCK1EoL,GAAQZ,EAAAA,EAAAA,OAAK,YAAiC,IAA9BrJ,EAAQ,EAARA,SAAUkK,EAAY,EAAZA,aACxBC,EAAS,WAA6B,IAAtBnK,EAAS+C,KAAKoB,OAAa9C,QAAQ,GAAE,KAE3D,OACE,iBAAKmI,UAAWC,EAAAA,MAAa,WAC3B,iBACED,UAAW,CAACC,EAAAA,MAAaC,KAAK,KAC9BC,QAAS,kBACPO,GAAaE,EAAAA,EAAAA,GAAkBpK,EAAS+C,KAAKoB,MATrC,IASwD,EACjE,SAEAuE,KAEH,iBACEc,UAAWC,EAAAA,MACXE,QAAS,kBAAMO,GAAaE,EAAAA,EAAAA,GAAkB,GAAG,EAAC,SAEjDD,KAEH,iBACEX,UAAW,CAACC,EAAAA,MAAaC,KAAK,KAC9BC,QAAS,kBACPO,GAAaE,EAAAA,EAAAA,GAAkBpK,EAAS+C,KAAKoB,MAvBrC,IAuBwD,EACjE,SAEAsE,MAIT,IAEA,ICpCA,EAAwB,qBAAxB,EAAwD,wBAAxD,EAAyH,2BAAzH,EAAiK,0BCG3J4B,GAAUhB,EAAAA,EAAAA,OACd,YAAiE,IAA9DC,EAAU,EAAVA,WAAYC,EAAkB,EAAlBA,mBAAoBvJ,EAAQ,EAARA,SAAUkK,EAAY,EAAZA,aAC3C,OACE,iBAAKV,UAAWC,EAAa,WAC3B,SAAC,EAAK,CAACzJ,SAAUA,EAAUkK,aAAcA,KACzC,SAAC,EAAK,CACJZ,WAAYA,EACZC,mBAAoBA,KAEtB,iBAAKC,UAAWC,EAAmB,WACjC,gBAAKD,UAAWC,KAChB,gBAAKD,UAAWC,SAIxB,IAGF,ICrBA,GAAgB,SAAW,wBAAwB,cAAgB,8BCc7Da,GAAQC,EAAAA,EAAAA,aAAW,WAAsBC,GAAS,IAA5BC,EAAe,EAAfA,gBACpBC,GAAcC,EAAAA,EAAAA,QAAO,MAC3B,GAA0CC,EAAAA,EAAAA,UAAS,IAAG,eAA/CC,EAAa,KAAEC,EAAgB,KAoDtC,OAnDAC,EAAAA,EAAAA,qBAAoBP,GAAK,iBAAO,CAC9BQ,cAAe,SAACC,GACdA,EAAMC,iBACND,EAAME,kBACN,OAA+BnE,EAAAA,EAAAA,IAC7BiE,EACAjL,IAFOoL,EAAM,EAATtM,EAAcuM,EAAM,EAATtM,EAIXwC,EAAUhB,EAAe,CAC7BzB,EAAGsM,EACHrM,EAAGsM,EACHrM,aAAasB,EAAAA,EAAAA,MACbrB,gBAAiB,cACjBC,UAAW,UACXC,YAAa,EACbC,YAAa,QACbqB,KAAM,GACNC,SAAU,GACVC,WAAY,SACZC,UAAW,OACXC,cAAe,QAEjBb,GAASsL,gBAAkB/J,EAC3B,IAAMgK,EAAWb,EAAYc,QAC7BD,EAASE,QACT,IAAMC,EAAOT,EAAMhE,QAAUjH,GAASkH,WAChCyE,EAAMV,EAAM9D,QAAUnH,GAASoH,UAC/BwE,EAAW,CACf3G,MAAMC,EAAAA,EAAAA,IAAc3D,GACpBmK,KAAK,GAAD,OAAKA,EAAI,MACbC,IAAI,GAAD,OAAKA,EAAG,MACX/G,QAAS,EACTiH,MAAOtK,EAAQvC,YACf0B,SAAUa,EAAQb,UAEpBoL,OAAOC,OAAOR,EAAS5D,MAAOiE,GAC9B,IAAMI,EAAe9I,SAASC,eAAe,YAC7C2I,OAAOC,OAAOC,EAAarE,MAAOiE,GAElC,IAAMK,EAAWjM,GAAS6B,YAAc6J,EAIxCI,OAAOC,OAAOR,EAAS5D,MAAO,CAC5BuE,OAAQ,EACRD,SAAS,GAAD,OAAKA,EAAQ,MACrB5M,MAAM,GAAD,OAAKkC,EAAQb,SAAQ,MAC1BpB,OAAO,GAAD,OAAwB,IAAnBiC,EAAQb,SAAc,OAErC,EACD,KAEC,iCACE,qBACEyL,SAAU,SAACC,GACT,IAAI3L,EAAO2L,EAAEC,OAAOlI,MAEdoH,EAAWb,EAAYc,QACvBS,EAAWK,WAAWf,EAAS5D,MAAMsE,UAErCD,EAAe9I,SAASC,eAAe,YAC7C6I,EAAazE,UAAY9G,EACzB,IAAM8L,EAAgBP,EAAaQ,wBAAwBnN,MAC3D,GAAIkN,EAAgBN,EAGlB,GAAIM,EAAgBN,EAAW,GAC7BxK,QAAQC,IAAI,kCACZjB,EAAOuL,EAAazE,UAClB9G,EAAKgM,MAAM,EAAGhM,EAAK0B,OAAS,GAC5B,KACA1B,EAAKgM,MAAMhM,EAAK0B,OAAS,OACtB,CACLV,QAAQC,IAAI,8CACZ,IAAIyD,EAAQ1E,EAAK2E,MAAM,MACjBsH,EAAc,GACpBvH,EAAMM,SAAQ,SAACkH,GAIb,GAHAX,EAAazE,UAAYoF,EAEvBX,EAAaQ,wBAAwBnN,OAClB4M,EACnBS,EAAYxK,KAAKyK,QAGjB,IADA,IAAIC,EAAU,EACLjL,EAAI,EAAGA,EAAIgL,EAAKxK,OAAQR,IAAK,CACpC,IAAMkL,EAAMF,EAAKF,MAAMG,EAASjL,GAChCqK,EAAazE,UAAYsF,EAEvBb,EAAaQ,wBAAwBnN,MACnB4M,GAClBS,EAAYxK,KAAKyK,EAAKF,MAAMG,EAASjL,EAAI,IACzCiL,EAAUjL,EAAI,GACLA,IAAMgL,EAAKxK,OAAS,GAC7BuK,EAAYxK,KAAKyK,EAAKF,MAAMG,EAASjL,GAEzC,CAEJ,IACAF,QAAQC,IAAI,gBAAiBgL,GAC7BjM,EAAOiM,EAAYhD,KAAK,MACxBsC,EAAazE,UAAY9G,CAC3B,CAGFqK,EAAiBrK,GACjB,MAA0BuL,EAAaQ,wBAA/BnN,EAAK,EAALA,MAAOC,EAAM,EAANA,OACfiM,EAAS5D,MAAMtI,MAAK,UAAMA,EAAQ,GAAE,MACpCkM,EAAS5D,MAAMrI,OAAM,UAAMA,EAAM,MAEjCU,GAASsL,gBAAgB7K,KAAOA,CAClC,EACAqM,OAAQ,WACN,IAAMvL,EAAUvB,GAASsL,gBACnBC,EAAWb,EAAYc,QACvBQ,EAAe9I,SAASC,eAAe,YACzC5B,EAAQd,OACVc,EAAQlC,MAAQ2M,EAAae,YAC7BxL,EAAQjC,OAAS0M,EAAagB,aAC9B1K,EAAmBtC,GAASsL,iBAC5BpC,EAAM+D,mBAAmB,GAAD,eACnB/D,EAAMW,+BAA6B,CACtC7J,GAASsL,mBAEXpF,EAAY,CACV1E,SAAU0H,EAAMW,8BAChB7J,SAAUA,GACVsE,MAAOL,OAAOC,iBACdd,OAAQqH,EAAgBe,QACxB/I,aAAc,CACZyK,eAAgB,UAChBtL,QAAS5B,GAAS4B,QAClBE,QAAS9B,GAAS8B,QAClBqL,oBAAqB,UACrBpK,KAAM/C,GAAS+C,QAGnBqK,YAAW,WACTpB,EAAazE,UAAY,GACzBuD,EAAiB,GACnB,GAAG,MAELgB,OAAOC,OAAOR,EAAS5D,MAAO,CAC5B+D,KAAK,MACLC,IAAI,MACJO,QAAS,EACTtH,QAAS,GAEb,EACAT,MAAO0G,EACPrB,UAAWC,EAAAA,SACXe,IAAKE,KAEP,gBACE/C,MAAO,CAAE0F,WAAY,QACrB3N,GAAG,WACH4N,iBAAiB,EACjB9D,UAAW,CAACC,EAAAA,SAAiBA,EAAAA,eAAsBC,KAAK,SAIhE,IAEA,GAAeL,EAAAA,EAAAA,MAAKiB,GCnLpB,IAEIiD,GACAC,GAHEC,GAAS,ICDA,WACb,OAAO,IAAIC,OAAO,IAA0B,2CAC9C,EDGaC,GAAsB,SAAH,GAMzB,IALLnM,EAAQ,EAARA,SACAxB,EAAQ,EAARA,SACAsE,EAAK,EAALA,MACAlB,EAAM,EAANA,OACAX,EAAY,EAAZA,aAEAA,EAAayB,iBAAmBD,OAAOC,iBACvC,IAAM0J,EAAS,CACb5N,SAAAA,EACAsE,MAAAA,EACA7B,aAAAA,GAEE+K,KAAgBhM,IAClBC,QAAQC,IAAI,iCACZ8L,GAAchM,EACdoM,EAAOpM,SAAWA,GAEf+L,IAYH9L,QAAQC,IAAI,kBAASF,EAASW,QAC9BsL,GAAOI,aAAY,QACjBhP,KAAM,UACH+O,MAdLnM,QAAQC,IAAI,wBAAUF,EAASW,QAC/BoL,GAAenK,EAAO0K,6BACtBL,GAAOI,aAAY,QAEfN,aAAcA,GACd1O,KAAM,QACH+O,GAEL,CAACL,KASP,EEpBWvN,GADE4I,KAAKC,MAAMC,aAAaC,QAAQ,cACf,CAC5BhG,KAAM,CAAEoB,MAAO,GACfvC,QAAS,EACTE,QAAS,EACToF,WAAY,EACZE,UAAW,EACXkE,gBAAiB,KACjBzJ,YAAa,EACbE,aAAc,GAubhB,IAnbesH,EAAAA,EAAAA,OAAK,WAClB,IAAM0E,GAAYpD,EAAAA,EAAAA,QAAO,MACnBqD,GAAkBrD,EAAAA,EAAAA,QAAO,MACzBF,GAAkBE,EAAAA,EAAAA,QAAO,MACzBsD,GAAiBtD,EAAAA,EAAAA,QAAO,CAAC,GACzBD,GAAcC,EAAAA,EAAAA,QAAO,MACrBuD,GAASvD,EAAAA,EAAAA,QAAO,MAChBwD,GAAexD,EAAAA,EAAAA,QAAO,CAAC,GAC7B,GAA4BC,EAAAA,EAAAA,WAAS,GAAM,eAApCwD,EAAI,KAAEC,EAAW,KACxB,GAAoCzD,EAAAA,EAAAA,UAAS,CAAE/L,KAAM,KAAK,eAAnDyK,EAAU,KAAEgF,EAAa,KAChC,GAA8B1D,EAAAA,EAAAA,UAAS,CAAEtJ,MAAO,GAAIzC,KAAM,cAAc,eAAjE0P,EAAO,KAAEC,EAAU,KAC1B,GAA8B5D,EAAAA,EAAAA,WAAS,GAAM,eAAtC6D,EAAO,KAAEC,EAAU,KACpBC,GAAahE,EAAAA,EAAAA,UACbiE,EAAU,WACdP,GAAaD,EACf,GACAS,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAC1L,GACrBA,EAAO/D,MAAQ0N,EAAc9I,OAAOC,iBACpCd,EAAO9D,OAAS0N,EAAe/I,OAAOC,gBACxC,EAGMd,EAAS2K,EAAUvC,QACjBuB,EAA8B3J,EAA9B2J,YAAaC,EAAiB5J,EAAjB4J,aACrB8B,EAAc1L,GACd0L,EAAcrE,EAAgBe,SAE9B,MAAiBpI,EAAOoJ,wBAAhB1N,EAAC,EAADA,EAAGC,EAAC,EAADA,EACXiB,GAASkH,WAAapI,EACtBkB,GAASoH,UAAYrI,EACrBiB,GAAS6B,YAAckL,EACvB/M,GAAS+B,aAAeiL,EAGxBW,GAAoB,CAClBnM,SAAU0H,EAAMW,8BAChB7J,SAAUA,GACVsE,MAAOL,OAAOC,iBACdd,OAAQqH,EAAgBe,QACxB/I,aAAc,CACZyK,eAAgB,UAChBtL,QAAS5B,GAAS4B,QAClBE,QAAS9B,GAAS8B,QAClBqL,oBAAqB,UACrBpK,KAAM/C,GAAS+C,OAGrB,GAAG,KACH8L,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAOf,EAAgBxC,QACvBwD,EAAc,SAAC5C,GACnBA,EAAElB,gBACJ,EAEA6D,EAAKE,iBAAiB,QAASD,EAAa,CAC1CE,SAAS,IAEX,IAAMC,EAA8B,SAAClE,GACnCgD,EAAezC,QAAU,CACvB4D,QAASnE,EAAMhE,QACfoI,QAASpE,EAAM9D,QAEnB,EACMmI,EAAa,SAAClD,GAClBA,EAAElB,gBACJ,EACM9H,EAAS2K,EAAUvC,QAGzB,OAFApI,EAAO6L,iBAAiB,aAAcK,GACtCpM,SAAS+L,iBAAiB,YAAaE,GAChC,WACL/L,EAAOmM,oBAAoB,aAAcD,GAEzCP,EAAKQ,oBAAoB,QAASP,GAClC9L,SAASqM,oBAAoB,YAAaJ,EAC5C,CACF,GAAG,KACHN,EAAAA,EAAAA,YAAU,WACR,IAAIW,EAAQ,EACRC,EAAYC,KAAKC,OAER,SAAPC,IACJ,IAAMC,EAAcH,KAAKC,MAGzB,GAFAH,IAEIK,EAAc,IAAOJ,EAAW,CAClC,IAAMK,EAAM3O,KAAK4O,MAAe,IAARP,GAAiBK,EAAcJ,IACvDvB,EAAO1C,QAAQjE,UAAS,mBAAUuI,GAClCN,EAAQ,EACRC,EAAYI,CACd,CAEAG,sBAAsBJ,EACxB,CAEAA,EACF,GAAG,IACH,IAAMK,EAAkB,WACtBtC,GAAoB,CAClBnM,SAAU0H,EAAMW,8BAChB7J,SAAUA,GACVsE,MAAOL,OAAOC,iBACdd,OAAQqH,EAAgBe,QACxB/I,aAAc,CACZyK,eAAgB,UAChBtL,QAAS5B,GAAS4B,QAClBE,QAAS9B,GAAS8B,QAClBqL,oBAAqB,UACrBpK,KAAM/C,GAAS+C,QAGfoL,EAAa3C,QAAQ0E,aACvBC,aAAahC,EAAa3C,QAAQ0E,aAEpC/B,EAAa3C,QAAQ0E,YAAc9C,YAAW,WdvIhDhL,EAAyB,IAAIC,QcyIzBsL,GAAoB,CAClBnM,SAAU0H,EAAMW,8BAChB7J,SAAUA,GACVsE,MAAOL,OAAOC,iBACdd,OAAQqH,EAAgBe,QACxB/I,aAAc,CACZyK,eAAgB,UAChBtL,QAAS5B,GAAS4B,QAClBE,QAAS9B,GAAS8B,QAClBqL,oBAAqB,UACrBpK,KAAM/C,GAAS+C,OAGrB,GAAG,IACL,EA0EMqN,EAA4C,SAACrQ,GAAgB,OACjEsQ,EAAAA,EAAAA,KAA4B,SAACpF,GAC3B,IAAMqF,GAAgBtJ,EAAAA,EAAAA,IAA4BiE,EAAOjL,IAGzD,GAFAD,EAAiBwQ,WAAWzR,EAAIwR,EAAcxR,EAC9CiB,EAAiBwQ,WAAWxR,EAAIuR,EAAcvR,EACtB,aAApBuK,EAAWzK,KACbmB,GAASsL,gBAAgB9L,OAAO0C,KAAK,CACnCoO,EAAcxR,EACdwR,EAAcvR,QAEX,CACL,IAAMuR,EAAgBvQ,EAAiBwQ,WACjCC,EAAUzQ,EAAiBE,OAAOnB,EAClC2R,EAAU1Q,EAAiBE,OAAOlB,EAClCD,EAAIwR,EAAcxR,EAClBC,EAAIuR,EAAcvR,EAClBM,GAAQ2E,EAAAA,EAAAA,IAASjE,EAAiBE,OAAOnB,EAAGwR,EAAcxR,GAC1DQ,GAAS0E,EAAAA,EAAAA,IAASjE,EAAiBE,OAAOlB,EAAGuR,EAAcvR,GAC7D2R,EAAO5R,EAAI0R,EAAUA,EAAUnR,EAAQmR,EACvCG,EAAO5R,EAAI0R,EAAUA,EAAUnR,EAASmR,EAC5CzQ,GAASsL,gBAAgBxM,EAAI4R,EAC7B1Q,GAASsL,gBAAgBvM,EAAI4R,EAC7B3Q,GAASsL,gBAAgBjM,MAAQA,EACjCW,GAASsL,gBAAgBhM,OAASA,CACpC,CACAgD,EAAmBtC,GAASsL,iBAE5BpF,EAAY,CACV1E,SAAU,CAACxB,GAASsL,iBACpBtL,SAAUA,GACVsE,MAAOL,OAAOC,iBACdd,OAAQ2K,EAAUvC,QAClB/I,aAAc,CACZyK,eAAgB,UAChBtL,QAAS5B,GAAS4B,QAClBE,QAAS9B,GAAS8B,QAClBqL,oBAAqB,UACrBpK,KAAM/C,GAAS+C,OAGrB,GAAG,EAEC6N,EACJ,SAAC7Q,GAAgB,OAAK,SAACkL,GAErB/B,EAAM+D,mBAAmB,GAAD,eACnB/D,EAAMW,+BAA6B,CACtC7J,GAASsL,mBAEX7J,QAAQC,IAAI,yBAA0B1B,IAGtC,IAAMoD,EAAS2K,EAAUvC,QACTpI,EAAOE,WAAW,MAC1B+C,UAAU,EAAG,EAAGjD,EAAO/D,MAAO+D,EAAO9D,QAE7CqO,GAAoB,CAClBnM,SAAU0H,EAAMW,8BAChB7J,SAAUA,GACVsE,MAAOL,OAAOC,iBACdd,OAAQqH,EAAgBe,QACxB/I,aAAc,CACZyK,eAAgB,UAChBtL,QAAS5B,GAAS4B,QAClBE,QAAS9B,GAAS8B,QAClBqL,oBAAqB,UACrBpK,KAAM/C,GAAS+C,QAGnBkB,OAAOsL,oBACL,cACAxP,EAAiB8Q,eAAeC,QAElC7M,OAAOsL,oBACL,YACAxP,EAAiB8Q,eAAeE,KAEpC,CAAE,EAEEC,EAA0B,SAAC/F,GAC/B,IAAMhL,GAAS+G,EAAAA,EAAAA,IAA4BiE,EAAOjL,IAClD,MAAO,CACLC,OAAAA,EACAsQ,YAAW,UAAMtQ,GACjB4Q,eAAgB,CACdC,OAAQ,KACRC,KAAM,KACNE,QAAS,KACTC,UAAW,MAGjB,EAOA,OACE,iBAAK1H,UAAU,mBAAmBgB,IAAKwD,EAAgB,WAIrD,iBAAKxE,UAAU,iBAAgB,WAC7B,mBAAQgB,IAAKC,EAAiBjB,UAAU,SAAQ,iCAGhD,mBACEgB,IAAKuD,EACLvE,UAAU,cACV2H,QAvLkB,SAAClG,GACzB,IAAQmG,EAAmBnG,EAAnBmG,OAAQC,EAAWpG,EAAXoG,OAGhB,GAAIpG,EAAMqG,SAAWrG,EAAMsG,QAAS,CAClC,IAAMC,EAAOrQ,KAAKqQ,KAAKH,GAEjBI,EAAWtQ,KAAKa,IAAIqP,GACtBK,EAAQL,EAERI,EAJaE,KAKfD,EALeC,GAKIH,GAErB,IAAII,EAAU5R,GAAS+C,KAAKoB,MAAQuN,EAAQ,IAC5CE,GACEzQ,KAAK0Q,MAAM1Q,KAAK2Q,IAAI,EAAG9R,GAAS+C,KAAKoB,SACpCqN,EACDrQ,KAAK4Q,IAAI,EAAGN,EAAW,IACzB,IAAMO,GAAW5H,EAAAA,EAAAA,GAAkBwH,GAcnC,OAbA9F,OAAOC,OAAO/L,IAAS,WAClBiS,EAAAA,EAAAA,GACD,CACEC,UAAWjE,EAAezC,QAAQ4D,QAClC+C,UAAWlE,EAAezC,QAAQ6D,QAClC2C,SAAUA,GAEZhS,MAIJ4O,SACAqB,GAEF,CACAjQ,GAAS4B,QAAU5B,GAAS4B,QAAUwP,EACtCpR,GAAS8B,QAAU9B,GAAS8B,QAAUuP,EAGtC1D,GAAoB,CAClBnM,SAAU0H,EAAMW,8BAChB7J,SAAUA,GACVsE,MAAOL,OAAOC,iBACdd,OAAQqH,EAAgBe,QACxB/I,aAAc,CACZyK,eAAgB,UAChBtL,QAAS5B,GAAS4B,QAClBE,QAAS9B,GAAS8B,QAClBqL,oBAAqB,UACrBpK,KAAM/C,GAAS+C,OAGrB,EAqIQqP,cAnIwB,SAACnH,GAC/B,GAAK3B,EAAWzK,KAAhB,CACA,IAAMkB,EAAmBiR,EAAwB/F,GAC3C1J,EAAU1B,EAAc,CAC5BC,YAAawJ,EAAWzK,KACxBkB,iBAAAA,EACAC,SAAAA,KAEFA,GAASsL,gBAAkB/J,EAC3Be,EAAmBf,GACnB,IAAM8Q,EACJjC,EAA0CrQ,GACtCuS,EACJ1B,EAAwC7Q,GAC1CkE,OAAOgL,iBAAiB,cAAeoD,GACvCpO,OAAOgL,iBAAiB,YAAaqD,GACrCvS,EAAiB8Q,eAAeC,OAASuB,EACzCtS,EAAiB8Q,eAAeE,KAAOuB,CAhBX,CAiB9B,EAkHQC,cAnBwB,SAACtH,GAC3B3B,EAAWzK,MAEf6L,EAAYc,QAAQR,cAAcC,EACpC,EAe+C,iCAIzC,SAAC,EAAO,CACN3B,WAAYA,EACZY,aAAc,SAACsI,GACTxS,GAAS+C,KAAKoB,QAAUqO,IAC5B1G,OAAOC,OAAO/L,IAAS,WAClBiS,EAAAA,EAAAA,GACD,CACEC,UAAWlS,GAAS6B,YAAc,EAAI7B,GAASkH,WAC/CiL,UAAWnS,GAAS+B,aAAe,EAAI/B,GAASoH,UAChD4K,SAAUQ,GAEZxS,MAGJ4O,IACAqB,IACF,EACAjQ,UAAQ,UAAOA,IACfuJ,mBAAoB,SAACpF,GACnBmK,EAAcnK,EAChB,KAEF,SAAC,EAAQ,CAACqG,IAAKE,EAAaD,gBAAiBA,QAE/C,4BACE,iBAAMD,IAAK0D,EAAO,0BAClB,iBAAM1E,UAAU,QAAQ9J,GAAG,qBAE7B,iBAAK8J,UAAU,MAAK,WAClB,kBACE3K,KAAK,SACLsF,MAAOoK,EAAQjN,MACf6K,SAAU,SAACC,GAAC,OAAKoC,GAAW,kBAAKD,GAAO,IAAEjN,MAAO8K,EAAEC,OAAOlI,QAAQ,KAEpE,oBACEA,MAAOoK,EAAQ1P,KACfsN,SAAU,SAACC,GAAC,OAAKoC,GAAW,kBAAKD,GAAO,IAAE1P,KAAMuN,EAAEC,OAAOlI,QAAQ,EAAC,WAElE,mBAAQA,MAAM,WAAU,uBACxB,mBAAQA,MAAM,YAAW,wBACzB,mBAAQA,MAAM,OAAM,sBAEtB,mBACEwF,QAAS,WACP,IAAMnI,EAAWiR,EACfvR,OAAOqN,EAAQjN,OACfiN,EAAQ1P,KACRmB,IAEFkJ,EAAM+D,mBAAmB,GAAD,eACnB/D,EAAMW,gCAA6B,OACnCrI,KAELmM,GAAoB,CAClBnM,SAAU0H,EAAMW,8BAChB7J,SAAUA,GACVsE,MAAOL,OAAOC,iBACdd,OAAQqH,EAAgBe,QACxB/I,aAAc,CACZyK,eAAgB,UAChBtL,QAAS5B,GAAS4B,QAClBE,QAAS9B,GAAS8B,QAClBqL,oBAAqB,UACrBpK,KAAM/C,GAAS+C,OAGrB,EAAE,2BAIJ,mBACE4G,QAAS,WAKP,GAJA+E,GAAYD,GACRE,EAAWnD,SACbkH,qBAAqB/D,EAAWnD,UAE9BiD,EAAJ,CACA,IACIkE,EAAWjD,KAAKC,MA0BpBhB,EAAWnD,QAAUwE,uBAzBR,SAAP4C,IACJ,IAAMC,EAAcnD,KAAKC,MACzB,GAAIkD,EAAcF,GAJL,IAI2B,CACtCA,EAAWE,EACX,IAAMrR,EfrWS,SAACA,EAAUxB,GAaxC,OAZAwB,EAASiE,SAAQ,SAACqN,GAChB,IAAMhU,EAAIiC,GACPf,EAAS4B,QACV5B,EAAS6B,YAAc7B,EAAS4B,SAE5B7C,EAAIgC,GACPf,EAAS8B,QACV9B,EAAS+B,aAAe/B,EAAS8B,SAEnCgR,EAAGhU,EAAIA,EACPgU,EAAG/T,EAAIA,CACT,IACOyC,CACT,CeuViCuR,CACf7J,EAAMW,8BACN7J,IAEF2N,GAAoB,CAClBnM,SAAUA,EACVxB,SAAUA,GACVsE,MAAOL,OAAOC,iBACdd,OAAQqH,EAAgBe,QACxB/I,aAAc,CACZyK,eAAgB,UAChBtL,QAAS5B,GAAS4B,QAClBE,QAAS9B,GAAS8B,QAClBqL,oBAAqB,UACrBpK,KAAM/C,GAAS+C,OAGrB,CAEA4L,EAAWnD,QAAUwE,sBAAsB4C,EAC7C,GA3BmB,CA6BrB,EAAE,SAEDnE,EAAU,2BAAS,qBAGxB,gBAAK/O,GAAG,kBAGd,G,kHCjdasT,EAAgB,SAACxR,EAAUyR,GACtC,OAAiCC,EAAAA,EAAAA,IAAgB1R,GAAS,eAAnD2R,EAAI,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAI,KAI7B,MAAO,CAACH,EAAMC,GAHApP,EAAAA,EAAAA,IAASmP,EAAME,GAAwB,EAAhBJ,GACtBjP,EAAAA,EAAAA,IAASoP,EAAME,GAAQL,EAAgBA,EAGxD,EAqCarJ,EAAY,SAAH,GAMf,IALL1D,EAAW,EAAXA,YAAY,EAAD,EACXqN,SAAAA,OAAQ,OAAO,MACf3Q,YAIM4Q,EA3CuB,SAAH,GAMrB,IALLtN,EAAW,EAAXA,YACAqN,EAAQ,EAARA,SACA3Q,EAAW,EAAXA,YACApB,EAAQ,EAARA,SACAxB,EAAQ,EAARA,SAGA,EAAoCgT,EAAcxR,EAD5B,IACoD,eAAnE2R,EAAI,KAAEC,EAAI,KAAE/T,EAAK,KAAEC,EAAM,KAEhCmC,QAAQC,IAAI,YAAayR,EAAMC,EAAM/T,EAAOC,GAC5C,IAAM8D,EAASF,SAASrD,cAAc,UAuBtC,OAtBAuD,EAAO/D,MAAQA,EAAQ4E,OAAOC,iBAC9Bd,EAAO9D,OAASA,EAAS2E,OAAOC,iBAChCgC,EAAY,CACV1E,SAAAA,EACAxB,UAAS,kBACJA,GAAQ,IACX4B,QAXkB,GAWRuR,EACVrR,QAZkB,GAYRsR,IAEZ9O,MAAOL,OAAOC,iBACdd,OAAQA,EACRX,aAAc,CACZyK,eAAgB,UAChBtL,QAlBkB,GAkBRuR,EACVrR,QAnBkB,GAmBRsR,EACVjG,oBAAqB,UACrBpK,KAAM,CAAEoB,MAAO,GACfoP,SAAAA,EACA3Q,YAAAA,KAIGQ,EAAOqQ,WAChB,CAQkBC,CAAgB,CAC9BxN,YAAAA,EACAqN,SAAAA,EACA3Q,iBAPS,OAAO,EAQhBpB,SAPM,EAARA,SAQExB,SAPM,EAARA,WASI2T,EAAIzQ,SAASrD,cAAc,KAC/B8T,EAAEC,KAAOJ,EACTG,EAAEE,SAAW,aACbF,EAAEG,OACJ,C,oSCpDa9M,EAA8B,SAAH,KAGlC,IAFFC,EAAO,EAAPA,QAASE,EAAO,EAAPA,QACTpE,EAAI,EAAJA,KAAMmE,EAAU,EAAVA,WAAYE,EAAS,EAATA,UAAWxF,EAAO,EAAPA,QAASE,EAAO,EAAPA,QAElCqI,EAAYpH,EAAOA,EAAKoB,MAAQ,EAGtC,MAAO,CAAErF,GAFEmI,EAAUC,GAAciD,EAAYvI,EAEnC7C,GADDoI,EAAUC,GAAa+C,EAAYrI,EAEhD,EAGaxB,EAAM,WACjB,IAAMyT,EAAI5S,KAAK6S,MAAsB,IAAhB7S,KAAKC,UACpB6S,EAAI9S,KAAK6S,MAAsB,IAAhB7S,KAAKC,UACpB8S,EAAI/S,KAAK6S,MAAsB,IAAhB7S,KAAKC,UAC1B,MAAM,OAAN,OAAc2S,EAAC,YAAIE,EAAC,YAAIC,EAAC,IAC3B,EAmDa7D,EAA8B,SAAC8D,GAC1C,OAlDyB,SAACC,EAAI5T,GAC9B,IAAI6T,EAAU,KACVC,EAAW,KACXC,EAAmB,KAEjBC,EAAe,SAAfA,EAAgBC,GACpBJ,EAAUpQ,OAAO+L,uBAAsB,WACrCqE,EAAU,KACVD,EAAE,qBAAIK,IACNH,EAAW,KACPC,IACFD,EAAWC,EACXA,EAAmB,KACnBC,EAAaF,GAEjB,GACF,EAEMI,EAAM,WAAc,IAAD,uBAATD,EAAI,yBAAJA,EAAI,gBAKlBH,EAAWG,EACK,OAAZJ,EACFG,EAAaF,GACA,OAAJ9T,QAAI,IAAJA,GAAAA,EAAMmU,WACfJ,EAAmBE,EAEvB,EAkBA,OAjBAC,EAAIE,MAAQ,WACM,OAAZP,IACF3B,qBAAqB2B,GACrBA,EAAU,MAERC,IACFF,EAAE,qBAAKG,GAAoBD,IAC3BA,EAAWC,EAAmB,KAElC,EACAG,EAAIG,OAAS,WACXP,EAAWC,EAAmB,KACd,OAAZF,IACF3B,qBAAqB2B,GACrBA,EAAU,KAEd,EACOK,CACT,CAESI,EAAY,SAAC7J,IAClB8J,EAAAA,EAAAA,yBAAwBZ,EAAMlJ,EAChC,GACF,EAEa+J,EAAsB,SAACzT,GAClC,IAAI4R,EAAO8B,IACP7B,EAAO6B,IACP5B,GAAQ4B,IACR3B,GAAQ2B,IACRzV,EAAS+B,EAAQ/B,OACA,aAAjB+B,EAAQ1C,OACVW,EAAS+B,EAAQ/B,OAAOsK,KAAI,SAACoL,GAC3B,MAAO,CAACA,EAAE,GAAK3T,EAAQzC,EAAGoW,EAAE,GAAK3T,EAAQxC,EAC3C,KACD,IAC0B,EAD1B,UACoBS,GAAM,IAA3B,2BAA6B,CAAC,IAAD,qBAAjBV,EAAC,KAAEC,EAAC,KACdoU,EAAOhS,KAAK4Q,IAAIoB,EAAMrU,GACtBsU,EAAOjS,KAAK4Q,IAAIqB,EAAMrU,GACtBsU,EAAOlS,KAAK2Q,IAAIuB,EAAMvU,GACtBwU,EAAOnS,KAAK2Q,IAAIwB,EAAMvU,EACxB,CAAC,+BAED,MAAO,CAACoU,EAAMC,EAAMC,EAAMC,EAC5B,EAEa6B,EAAS,SAACvR,EAAIC,EAAIC,EAAIC,EAAIxE,GAAK,MAC1C,EAIGqE,EAAKE,GAAM3C,KAAKiU,IAAI7V,IAAUsE,EAAKE,GAAM5C,KAAKkU,IAAI9V,GAASuE,GAC3DF,EAAKE,GAAM3C,KAAKkU,IAAI9V,IAAUsE,EAAKE,GAAM5C,KAAKiU,IAAI7V,GAASwE,EAC7D,EAEU+C,EAAmB,SAACvF,GAC/B,IAEA,EAAiCoC,EAAyBpC,GAAQ,eAA3DqC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEgC,EAAE,KAAEC,EAAE,KAE7B,GAAqB,aAAjBzE,EAAQ1C,KAAqB,CAC/B,MAAiCmW,EAAoBzT,GAAQ,eAAtD4R,EAAI,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAI,KAE7B,MAAO,CACLH,EAAO5R,EAAQzC,EACfsU,EAAO7R,EAAQxC,EACfsU,EAAO9R,EAAQzC,EACfwU,EAAO/R,EAAQxC,EAEnB,CACE,MAAmBoW,EAAOvR,EAAIC,EAAIkC,EAAIC,EAAIzE,EAAQhC,OAAM,eAAjD+V,EAAG,KAAEC,EAAG,KACf,EAAmBJ,EAAOvR,EAAIG,EAAIgC,EAAIC,EAAIzE,EAAQhC,OAAM,eAAjDiW,EAAG,KAAEC,EAAG,KACf,EAAmBN,EAAOrR,EAAIC,EAAIgC,EAAIC,EAAIzE,EAAQhC,OAAM,eAAjDmW,EAAG,KAAEC,EAAG,KACf,EAAmBR,EAAOrR,EAAID,EAAIkC,EAAIC,EAAIzE,EAAQhC,OAAM,eAAjDqW,EAAG,KAAEC,EAAG,KAQjB,MAHW,CAJI1U,KAAK4Q,IAAIuD,EAAKE,EAAKE,EAAKE,GACxBzU,KAAK4Q,IAAIwD,EAAKE,EAAKE,EAAKE,GACxB1U,KAAK2Q,IAAIwD,EAAKE,EAAKE,EAAKE,GACxBzU,KAAK2Q,IAAIyD,EAAKE,EAAKE,EAAKE,GAKzC,EACa3C,EAAkB,SAAC1R,GAC9B,IAAKA,EAASW,OACZ,MAAO,CAAC,EAAG,EAAG,EAAG,GAGnB,IAAIgR,EAAO8B,IACP5B,GAAQ4B,IACR7B,EAAO6B,IACP3B,GAAQ2B,IAUZ,OARAzT,EAASiE,SAAQ,SAAClE,GAChB,MAAyBuF,EAAiBvF,GAAQ,eAA3CqC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KACrBoP,EAAOhS,KAAK4Q,IAAIoB,EAAMvP,GACtBwP,EAAOjS,KAAK4Q,IAAIqB,EAAMvP,GACtBwP,EAAOlS,KAAK2Q,IAAIuB,EAAMvP,GACtBwP,EAAOnS,KAAK2Q,IAAIwB,EAAMvP,EACxB,IAEO,CAACoP,EAAMC,EAAMC,EAAMC,EAC5B,EACa3P,EAA2B,SAACpC,GACvC,GAAqB,aAAjBA,EAAQ1C,KAAqB,CAC/B,MAAiCmW,EAAoBzT,GAAQ,eAAtD4R,EAAI,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAI,KACvB1P,EAAKuP,EAAO5R,EAAQzC,EACpB+E,EAAKuP,EAAO7R,EAAQxC,EACpB+E,EAAKuP,EAAO9R,EAAQzC,EACpBiF,EAAKuP,EAAO/R,EAAQxC,EAC1B,MAAO,CAAC6E,EAAIC,EAAIC,EAAIC,GAAKH,EAAKE,GAAM,GAAID,EAAKE,GAAM,EACrD,CACA,MAAO,CACLxC,EAAQzC,EACRyC,EAAQxC,EACRwC,EAAQzC,EAAIyC,EAAQlC,MACpBkC,EAAQxC,EAAIwC,EAAQjC,OACpBiC,EAAQzC,EAAIyC,EAAQlC,MAAQ,EAC5BkC,EAAQxC,EAAIwC,EAAQjC,OAAS,EAEjC,EAEa0E,EAAW,SAAClF,EAAGC,GAAC,OAAKoC,KAAKa,IAAIlD,EAAIC,EAAG,EAW9C+W,EAAa,EACJnW,EAAW,WAAH,kBAAcmW,IAAY,EAgDlC5Q,EAAgB,SAAH,GAAkC,IAA5BxE,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WACxC,MAAM,GAAN,OAAUD,EAAQ,cAAMC,EAAU,mBACpC,C,8EClPA,IAEayJ,EAAoB,SAACrH,GAChC,OAAO5B,KAAK2Q,IAHG,GAGW3Q,KAAK4Q,IAAIhP,EAAM,IAC3C,EAEakP,EAAkB,SAAH,EAE1BjS,GACI,IAFFkS,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAWH,EAAQ,EAARA,SAGlB+D,EAAU7D,EAAYlS,EAASkH,WAC/B8O,EAAU7D,EAAYnS,EAASoH,UAC/B6O,EAAcjW,EAAS+C,KAAKoB,MAElC,MAAO,CACLvC,QAAS5B,EAAS4B,QAAUmU,EAAU/D,EAAW+D,EAAUE,EAC3DnU,QAAS9B,EAAS8B,QAAUkU,EAAUhE,EAAWgE,EAAUC,EAC3DlT,KAAM,CACJoB,MAAO6N,GAGb,C","sources":["pages/performance/offscreen-canvas/element/newElement.js","pages/performance/offscreen-canvas/generateElement.js","pages/performance/offscreen-canvas/renderer/renderElement.js","pages/performance/offscreen-canvas/renderer/renderScene.js","webpack://excalidraw-app/./src/pages/performance/offscreen-canvas/components/tools/index.module.less?0710","pages/performance/offscreen-canvas/components/icons/index.jsx","pages/performance/offscreen-canvas/scene/scene.js","pages/performance/offscreen-canvas/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/performance/offscreen-canvas/components/scale/index.module.less?cfac","pages/performance/offscreen-canvas/components/scale/index.jsx","webpack://excalidraw-app/./src/pages/performance/offscreen-canvas/components/layer-ui/index.module.less?a6dc","pages/performance/offscreen-canvas/components/layer-ui/index.jsx","webpack://excalidraw-app/./src/pages/performance/offscreen-canvas/components/textarea/index.module.less?088f","pages/performance/offscreen-canvas/components/textarea/index.jsx","pages/performance/offscreen-canvas/worker/index.js","pages/performance/offscreen-canvas/worker/file.worker.js","pages/performance/offscreen-canvas/index.jsx","util/export.js","util/index.js","util/zoom.js"],"sourcesContent":["import { randomId } from \"@/util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n  ...rest\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n    ...rest,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = newElement({\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    originalText: opts.text,\n    ...opts,\n  });\n\n  return textElement;\n};\n","import { createElement, newTextElement } from \"./element/newElement\";\nimport { rgb } from \"@/util\";\n\nconst getRandomValue = (n, m) => {\n  return Number((Math.random() * (m - n) + n).toFixed(5));\n};\nconst generateElements = (count, type, appState) => {\n  const elements = [];\n  console.log(\"generate elements...\", count, type);\n  let element;\n  for (let i = 0; i < count; i++) {\n    let x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    let y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    element = createElement({\n      elementType: type,\n      pointerDownState: {\n        origin: {\n          x,\n          y,\n        },\n      },\n      appState,\n    });\n    if (type === \"rectangle\") {\n      const width =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollX - x,\n            appState.canvasWidth - appState.scrollX - x\n          )\n        ) + 2;\n      const height =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollY - y,\n            appState.canvasHeight - appState.scrollY - y\n          )\n        ) + 2;\n      element.width = width;\n      element.height = height;\n    } else if (type === \"freedraw\") {\n      const pointsNum = getRandomValue(20, 100);\n      for (let i = 0; i < pointsNum; i++) {\n        x = getRandomValue(x, x + 10);\n        y = getRandomValue(y, y + 10);\n        element.points.push([x, y]);\n      }\n    } else if (type === \"text\") {\n      const text = `${x}, ${y}`;\n      element = newTextElement({\n        x,\n        y,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text,\n        width: text.length * 20,\n        height: 25,\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n    }\n\n    elements.push(element);\n  }\n\n  return elements;\n};\n\nexport const animateElements = (elements, appState) => {\n  elements.forEach((el) => {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    el.x = x;\n    el.y = y;\n  });\n  return elements;\n};\nexport default generateElements;\n","import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nlet elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = new WeakMap();\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  // 导出图片时，默认zoom为1，因此这里加个notusecache配置重新生成canvas\n  if (prevElementWithCanvas && !renderConfig.notUseCache) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n  if (!renderConfig.notUseCache) {\n    elementWithCanvasCache.set(element, elementWithCanvas);\n  }\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    // rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  // rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value\n  );\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\nimport { getElementBounds, viewportCoordsToSceneCoords } from \"@/util\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (\n    let i = 1;\n    i < (canvas.height - scrollY * zoom.value) / (rectH * zoom.value);\n    i++\n  ) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (\n    let i = 1;\n    i < (canvas.width - scrollX * zoom.value) / (rectW * zoom.value);\n    i++\n  ) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nconst isVisibleElement = (\n  element,\n  canvasWidth,\n  canvasHeight,\n  viewTransformations\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  drawAxis(context, renderConfig);\n\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(element, normalizedCanvasWidth, normalizedCanvasHeight, {\n      zoom: renderConfig.zoom,\n      offsetLeft: appState.offsetLeft,\n      offsetTop: appState.offsetTop,\n      scrollX: renderConfig.scrollX,\n      scrollY: renderConfig.scrollY,\n    })\n  );\n  const total = document.getElementById(\"canvas-total\");\n  total.innerText = `总元素数：${elements.length}   实际绘制元素总数：${visibleElements.length}`;\n\n  visibleElements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  context.restore();\n\n  context.restore();\n  // localStorage.setItem(\"elements\", JSON.stringify(elements));\n  // localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__F11CL\",\"item\":\"index_item__qZvQR\",\"selected\":\"index_selected__e5hcZ\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps\n);\n\nconst modifiedTablerIconProps = {\n  width: 20,\n  height: 20,\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const ZoomInIcon = createIcon(\n  <path strokeWidth=\"1.25\" d=\"M10 4.167v11.666M4.167 10h11.666\" />,\n  modifiedTablerIconProps\n);\n\nexport const ZoomOutIcon = createIcon(\n  <path d=\"M5 10h10\" strokeWidth=\"1.25\" />,\n  modifiedTablerIconProps\n);\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() => {\n          exportPng({\n            renderScene,\n            elements: scene.getElementsIncludingDeleted(),\n            appState,\n          });\n        }}\n      >\n        {ExportImageIcon}\n      </span>\n      {SHAPES.map((shape) => {\n        const isSelected = activeTool.type === shape.type;\n        return (\n          <span\n            key={shape.type}\n            className={[styles.item, isSelected && styles.selected].join(\" \")}\n            onClick={() =>\n              onActiveToolChange({ type: isSelected ? \"\" : shape.type })\n            }\n          >\n            {shape.icon}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"scale\":\"index_scale__Xgs3R\",\"item\":\"index_item__jlc7V\",\"value\":\"index_value__9glOL\"};","import React, { memo } from \"react\";\nimport { ZoomInIcon, ZoomOutIcon } from \"../icons\";\nimport { getNormalizedZoom } from \"@/util/zoom\";\nimport styles from \"./index.module.less\";\n\nconst ZOOM_STEP = 0.1;\nconst Scale = memo(({ appState, onZoomChange }) => {\n  const zoomValue = `${(appState.zoom.value * 100).toFixed(0)}%`;\n\n  return (\n    <div className={styles.scale}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value - ZOOM_STEP))\n        }\n      >\n        {ZoomOutIcon}\n      </span>\n      <span\n        className={styles.value}\n        onClick={() => onZoomChange(getNormalizedZoom(1))}\n      >\n        {zoomValue}\n      </span>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value + ZOOM_STEP))\n        }\n      >\n        {ZoomInIcon}\n      </span>\n    </div>\n  );\n});\n\nexport default Scale;\n","// extracted by mini-css-extract-plugin\nexport default {\"layer\":\"index_layer__n2wKC\",\"ball_red\":\"index_ball_red__487Jk\",\"move\":\"index_move__KEHQh\",\"boundceBall\":\"index_boundceBall__ulji4\",\"shadowball\":\"index_shadowball__HLlgs\",\"shadowMove\":\"index_shadowMove__9Qyni\"};","import React, { memo } from \"react\";\nimport Tools from \"../tools\";\nimport Scale from \"../scale\";\nimport styles from \"./index.module.less\";\nconst LayerUI = memo(\n  ({ activeTool, onActiveToolChange, appState, onZoomChange }) => {\n    return (\n      <div className={styles.layer}>\n        <Scale appState={appState} onZoomChange={onZoomChange} />\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={onActiveToolChange}\n        />\n        <div className={styles.boundceBall}>\n          <div className={styles.ball_red}></div>\n          <div className={styles.shadowball}></div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default LayerUI;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__Z5y--\",\"textarea_copy\":\"index_textarea_copy__PICl+\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache } from \"../../renderer/renderElement\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ staticCanvasRef }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const left = event.clientX - appState.offsetLeft;\n      const top = event.clientY - appState.offsetTop;\n      const styleObj = {\n        font: getFontString(element),\n        left: `${left}px`,\n        top: `${top}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - left;\n      // textarea.style.maxWidth = `${maxWidth}px`;\n      // textarea.style.width = `${element.fontSize}px`;\n      // textarea.style.height = `${element.fontSize * 1.2}px`;\n      Object.assign(textarea.style, {\n        zIndex: 1,\n        maxWidth: `${maxWidth}px`,\n        width: `${element.fontSize}px`,\n        height: `${element.fontSize * 1.2}px`,\n      });\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          // console.log(\"tex5....\", text, text.length);\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              console.log(\"正常的输入\");\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              console.log(\"粘贴进来的文本\");\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              console.log(\"splitResult..\", splitResult);\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            zIndex: -1,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import Worker from \"./file.worker.js\";\nconst worker = new Worker();\n\nlet canvasWorker;\nlet preElements;\nexport const renderSceneInWorker = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  renderConfig.devicePixelRatio = window.devicePixelRatio;\n  const params = {\n    appState,\n    scale,\n    renderConfig,\n  };\n  if (preElements !== elements) {\n    console.log('elements变化了...')\n    preElements = elements;\n    params.elements = elements;\n  }\n  if (!canvasWorker) {\n    console.log(\"初始化...\", elements.length);\n    canvasWorker = canvas.transferControlToOffscreen();\n    worker.postMessage(\n      {\n        canvasWorker: canvasWorker,\n        type: \"init\",\n        ...params,\n      },\n      [canvasWorker]\n    );\n  } else {\n    console.log(\"重回...\", elements.length);\n    worker.postMessage({\n      type: \"redraw\",\n      ...params,\n    });\n  }\n};\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/file.worker.3a511470.worker.js\");\n}\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { distance } from \"@/util\";\n// import { isAndroid } from \"@/util/device\";\nimport {\n  withBatchedUpdatesThrottled,\n  viewportCoordsToSceneCoords,\n} from \"@/util\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\nimport generateElements, { animateElements } from \"./generateElement\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport {\n  deleteElementCache,\n  clearElementCache,\n} from \"./renderer/renderElement\";\nimport LayerUI from \"./components/layer-ui\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport { renderSceneInWorker } from './worker'\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  zoom: { value: 1 },\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst ZOOM_STEP = 0.1;\n\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const cursorPosition = useRef({});\n  const textareaRef = useRef(null);\n  const rafRef = useRef(null);\n  const globalVarRef = useRef({});\n  const [flag, refreshFlag] = useState(false);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  const [testObj, setTestObj] = useState({ count: \"\", type: \"rectangle\" });\n  const [animate, setAnimate] = useState(false);\n  const animateRef = useRef();\n  const refresh = () => {\n    refreshFlag(!flag);\n  };\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    renderSceneInWorker({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    const updateCurrentCursorPosition = (event) => {\n      cursorPosition.current = {\n        cursorX: event.clientX,\n        cursorY: event.clientY,\n      };\n    };\n    const onTapStart = (e) => {\n      e.preventDefault();\n    };\n    const canvas = canvasRef.current;\n    canvas.addEventListener(\"touchstart\", onTapStart);\n    document.addEventListener(\"mousemove\", updateCurrentCursorPosition);\n    return () => {\n      canvas.removeEventListener(\"touchstart\", onTapStart);\n\n      wrap.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"mousemove\", updateCurrentCursorPosition);\n    };\n  }, []);\n  useEffect(() => {\n    let frame = 0;\n    let startTime = Date.now();\n\n    const loop = () => {\n      const currentTime = Date.now();\n      frame++;\n\n      if (currentTime > 1000 + startTime) {\n        const fps = Math.round((frame * 1000) / (currentTime - startTime));\n        rafRef.current.innerText = `FPS：${fps}`;\n        frame = 0;\n        startTime = currentTime;\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    loop();\n  }, []);\n  const reDrawAfterZoom = () => {\n    renderSceneInWorker({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n    if (globalVarRef.current.zoomTimerId) {\n      clearTimeout(globalVarRef.current.zoomTimerId);\n    }\n    globalVarRef.current.zoomTimerId = setTimeout(() => {\n      clearElementCache();\n      renderSceneInWorker({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    }, 300);\n  };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    // 关于缩放：双指放大时，deltaY是负数，缩小时，deltaY是正数\n    // 缩放，本质上就是对某个点的坐标进行变换\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY); // 只有两种情况，要么+1，要么-1\n      const MAX_STEP = ZOOM_STEP * 100; // 10\n      const absDelta = Math.abs(deltaY);\n      let delta = deltaY;\n      // delta最大为10\n      if (absDelta > MAX_STEP) {\n        delta = MAX_STEP * sign;\n      }\n      let newZoom = appState.zoom.value - delta / 100;\n      newZoom +=\n        Math.log10(Math.max(1, appState.zoom.value)) *\n        -sign *\n        Math.min(1, absDelta / 20);\n      const nextZoom = getNormalizedZoom(newZoom);\n      Object.assign(appState, {\n        ...getStateForZoom(\n          {\n            viewportX: cursorPosition.current.cursorX,\n            viewportY: cursorPosition.current.cursorY,\n            nextZoom: nextZoom,\n          },\n          appState\n        ),\n      });\n      // renderScene(canvasRef.current, appState);\n      refresh();\n      reDrawAfterZoom();\n      return;\n    }\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderSceneInWorker({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (!activeTool.type) return;\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n      console.log(\"pointer up appState...\", appState);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderSceneInWorker({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    if (activeTool.type) return;\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div className=\"performance-base\" ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n        >\n          动态canvas\n        </canvas>\n        <LayerUI\n          activeTool={activeTool}\n          onZoomChange={(zoomVal) => {\n            if (appState.zoom.value === zoomVal) return;\n            Object.assign(appState, {\n              ...getStateForZoom(\n                {\n                  viewportX: appState.canvasWidth / 2 + appState.offsetLeft,\n                  viewportY: appState.canvasHeight / 2 + appState.offsetTop,\n                  nextZoom: zoomVal,\n                },\n                appState\n              ),\n            });\n            refresh();\n            reDrawAfterZoom();\n          }}\n          appState={{ ...appState }}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} staticCanvasRef={staticCanvasRef} />\n      </div>\n      <div>\n        <span ref={rafRef}>FPS：--</span>\n        <span className=\"total\" id=\"canvas-total\"></span>\n      </div>\n      <div className=\"row\">\n        <input\n          type=\"number\"\n          value={testObj.count}\n          onChange={(e) => setTestObj({ ...testObj, count: e.target.value })}\n        />\n        <select\n          value={testObj.type}\n          onChange={(e) => setTestObj({ ...testObj, type: e.target.value })}\n        >\n          <option value=\"freedraw\">freedraw</option>\n          <option value=\"rectangle\">rectangle</option>\n          <option value=\"text\">text</option>\n        </select>\n        <button\n          onClick={() => {\n            const elements = generateElements(\n              Number(testObj.count),\n              testObj.type,\n              appState\n            );\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              ...elements,\n            ]);\n            renderSceneInWorker({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n          }}\n        >\n          生成\n        </button>\n        <button\n          onClick={() => {\n            setAnimate(!animate);\n            if (animateRef.current) {\n              cancelAnimationFrame(animateRef.current);\n            }\n            if (animate) return;\n            let diffTime = 100;\n            let lastDate = Date.now();\n            const tick = () => {\n              const currentDate = Date.now();\n              if (currentDate - lastDate >= diffTime) {\n                lastDate = currentDate;\n                const elements = animateElements(\n                  scene.getElementsIncludingDeleted(),\n                  appState\n                );\n                renderSceneInWorker({\n                  elements: elements,\n                  appState: appState,\n                  scale: window.devicePixelRatio,\n                  canvas: staticCanvasRef.current,\n                  renderConfig: {\n                    selectionColor: \"#6965db\",\n                    scrollX: appState.scrollX,\n                    scrollY: appState.scrollY,\n                    viewBackgroundColor: \"#ffffff\",\n                    zoom: appState.zoom,\n                  },\n                });\n              }\n\n              animateRef.current = requestAnimationFrame(tick);\n            };\n            animateRef.current = requestAnimationFrame(tick);\n          }}\n        >\n          {animate ? \"停止动画\" : \"动画\"}\n        </button>\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { getCommonBounds, distance } from \"./index\";\nexport const getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const canvasToDataURL = ({\n  renderScene,\n  isExport,\n  notUseCache,\n  elements,\n  appState,\n}) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  console.log(\"export...\", minX, minY, width, height);\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: { value: 1 },\n      isExport,\n      notUseCache,\n    },\n  });\n\n  return canvas.toDataURL();\n};\nexport const exportPng = ({\n  renderScene,\n  isExport = true,\n  notUseCache = true,\n  elements,\n  appState,\n}) => {\n  const dataUrl = canvasToDataURL({\n    renderScene,\n    isExport,\n    notUseCache,\n    elements,\n    appState,\n  });\n  var a = document.createElement(\"a\");\n  a.href = dataUrl;\n  a.download = \"canvas.png\";\n  a.click();\n};\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\n// for worker\n// window.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n","const MIN_ZOOM = 0.1;\n\nexport const getNormalizedZoom = (zoom) => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30));\n};\n\nexport const getStateForZoom = (\n  { viewportX, viewportY, nextZoom },\n  appState\n) => {\n  const screenX = viewportX - appState.offsetLeft;\n  const screenY = viewportY - appState.offsetTop;\n  const currentZoom = appState.zoom.value;\n\n  return {\n    scrollX: appState.scrollX + screenX / nextZoom - screenX / currentZoom,\n    scrollY: appState.scrollY + screenY / nextZoom - screenY / currentZoom,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n"],"names":["newElement","type","x","y","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","rest","id","randomId","isDeleted","createElement","elementType","pointerDownState","appState","origin","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","newTextElement","opts","text","fontSize","fontFamily","textAlign","verticalAlign","originalText","getRandomValue","n","m","Number","Math","random","toFixed","count","element","elements","console","log","i","scrollX","canvasWidth","scrollY","canvasHeight","abs","pointsNum","push","length","elementWithCanvasCache","WeakMap","deleteElementCache","delete","generateElementWithCanvas","renderConfig","prevElementWithCanvas","get","notUseCache","elementWithCanvas","generateElementCanvas","zoom","set","rightContainer","document","getElementById","canvas","context","getContext","padding","getCanvasPadding","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","distance","window","devicePixelRatio","value","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeRect","font","getFontString","lines","split","lineHeight","textBaseline","index","fillText","forEach","point","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","renderScene","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","rectH","rectW","beginPath","drawAxis","visibleElements","filter","viewTransformations","getElementBounds","topLeftSceneCoords","viewportCoordsToSceneCoords","clientX","offsetLeft","clientY","offsetTop","bottomRightSceneCoords","isVisibleElement","innerText","renderElement","createIcon","d","style","mirror","focusable","role","viewBox","fill","RectangleIcon","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","modifiedTablerIconProps","ZoomInIcon","ZoomOutIcon","Scene","JSON","parse","localStorage","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","join","onClick","exportPng","getElementsIncludingDeleted","map","shape","isSelected","Scale","onZoomChange","zoomValue","getNormalizedZoom","LayerUI","Index","forwardRef","ref","staticCanvasRef","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","event","preventDefault","stopPropagation","sceneX","sceneY","draggingElement","textarea","current","focus","left","top","styleObj","color","Object","assign","copyTextarea","maxWidth","zIndex","onChange","e","target","parseFloat","copyTextWidth","getBoundingClientRect","slice","splitResult","line","lastIdx","str","onBlur","offsetWidth","offsetHeight","replaceAllElements","selectionColor","viewBackgroundColor","setTimeout","background","contentEditable","canvasWorker","preElements","worker","Worker","renderSceneInWorker","params","postMessage","transferControlToOffscreen","canvasRef","canvasContainer","cursorPosition","rafRef","globalVarRef","flag","refreshFlag","setActiveTool","testObj","setTestObj","animate","setAnimate","animateRef","refresh","useEffect","setCanvasSize","wrap","handleWheel","addEventListener","passive","updateCurrentCursorPosition","cursorX","cursorY","onTapStart","removeEventListener","frame","startTime","Date","now","loop","currentTime","fps","round","requestAnimationFrame","reDrawAfterZoom","zoomTimerId","clearTimeout","onPointerMoveFromCanvasPointerDownHandler","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","onWheel","deltaX","deltaY","metaKey","ctrlKey","sign","absDelta","delta","ZOOM_STEP","newZoom","log10","max","min","nextZoom","getStateForZoom","viewportX","viewportY","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","zoomVal","generateElements","cancelAnimationFrame","lastDate","tick","currentDate","el","animateElements","getCanvasSize","exportPadding","getCommonBounds","minX","minY","maxX","maxY","isExport","dataUrl","toDataURL","canvasToDataURL","a","href","download","click","r","floor","g","b","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","ret","trailing","flush","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","p","rotate","cos","sin","x11","y11","x12","y12","x22","y22","x21","y21","testIdBase","screenX","screenY","currentZoom"],"sourceRoot":""}