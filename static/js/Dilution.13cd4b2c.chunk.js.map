{"version":3,"file":"static/js/Dilution.13cd4b2c.chunk.js","mappings":"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","sources":["components/markdown/index.jsx","pages/free-draw/dilution/renderScene.js","pages/free-draw/dilution/util.js","pages/free-draw/dilution/index.jsx","util/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport rehypeRaw from \"rehype-raw\";\n// import { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"github-markdown-css\";\n\nimport './index.less'\n\n\nfunction Shapes({ src }) {\n  const [mdText, setMdText] = useState(\"\");\n  useEffect(() => {\n    fetch(src)\n      .then((response) => response.text())\n      .then((text) => {\n        setMdText(text);\n      });\n  }, [src]);\n  return (\n    <div className=\"markdown-body\">\n      <ReactMarkdown\n        children={mdText}\n        rehypePlugins={[rehypeRaw]}\n        remarkPlugins={[remarkGfm]}\n        components={{\n          code({ node, inline, className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return !inline && match ? (\n              <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                // style={{ background: 'red'}}\n                language={match[1]}\n                className=\"my-code\"\n                PreTag=\"div\"\n                {...props}\n              />\n            ) : (\n              <code className={className} {...props}>\n                {children}\n              </code>\n            );\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Shapes;\n","import { elements } from \"./index\";\n\nconst renderElements = (ctx, appState) => {\n  elements.forEach((ele) => {\n    ctx.save();\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = \"blue\";\n\n    ele.points.forEach((point, index) => {\n      if (!index) {\n        ctx.moveTo(...ele.points[0]);\n      } else {\n        ctx.lineTo(...point);\n      }\n    });\n\n    ctx.stroke();\n\n    ctx.restore();\n  });\n};\nconst renderScene = (canvas, appState) => {\n  const context = canvas.getContext(\"2d\");\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  renderElements(context, appState);\n};\n\nexport default renderScene;\n","import { unstable_batchedUpdates } from \"react-dom\";\nexport const throttleRAF = (\n  fn,\n  opts,\n) => {\n  let timerId = null;\n  let lastArgs= null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF(((event) => {\n    unstable_batchedUpdates(func, event);\n  }));\n}","import React, { memo, useRef, useEffect } from \"react\";\nimport { viewportCoordsToSceneCoords } from \"@/util\";\nimport MarkDown from \"@/components/markdown\";\nimport doc from \"@doc/canvas进阶/点稀释.md\";\nimport \"./index.less\";\nimport renderScene from \"./renderScene\";\nimport { withBatchedUpdatesThrottled } from './util'\nexport const elements = [];\nconst appState = {\n  offsetLeft: 0,\n  offsetTop: 0,\n  scrollX: 0,\n  scrollY: 0,\n  draggingElement: null,\n};\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  useEffect(() => {\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const { offsetWidth, offsetHeight, offsetLeft, offsetTop } = canvas;\n    canvas.width = offsetWidth * window.devicePixelRatio;\n    canvas.height = offsetHeight * window.devicePixelRatio;\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    appState.offsetLeft = offsetLeft;\n    appState.offsetTop = offsetTop;\n    renderScene(canvas, appState);\n\n    // 防止双指滑动时切换页面\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasPointerDown = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n\n    const pointerDownState = {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n      },\n    };\n    const element = {\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [],\n      strokeColor: \"#000000\",\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n    };\n    appState.draggingElement = element;\n    elements.push(element);\n\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n  const onPointerMoveFromCanvasPointerDownHandler =\n    (pointerDownState) => withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n\n      appState.draggingElement.points.push([pointerCoords.x, pointerCoords.y]);\n      renderScene(canvasRef.current, appState);\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler = (pointerDownState) => () => {\n    console.log('appState...', appState)\n    console.log('elements...', elements)\n    window.removeEventListener(\n      \"pointermove\",\n      pointerDownState.eventListeners.onMove\n    );\n    window.removeEventListener(\n      \"pointerup\",\n      pointerDownState.eventListeners.onUp\n    );\n  };\n  return (\n    <div className=\"free-draw\">\n      <div className=\"container\" ref={canvasContainer}>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas\"\n          onPointerDown={handleCanvasPointerDown}\n        >\n          绘制canvas\n        </canvas>\n      </div>\n      <MarkDown src={doc} />\n    </div>\n  );\n});\n\nexport default Canvas;\n","export const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n"],"names":["src","useState","mdText","setMdText","useEffect","fetch","then","response","text","className","children","rehypePlugins","rehypeRaw","remarkPlugins","remarkGfm","components","code","node","inline","props","match","exec","String","replace","language","PreTag","canvas","appState","ctx","context","getContext","clearRect","width","height","elements","ele","save","beginPath","lineWidth","strokeStyle","points","forEach","point","index","lineTo","moveTo","stroke","restore","withBatchedUpdatesThrottled","func","fn","opts","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","window","requestAnimationFrame","ret","trailing","flush","cancelAnimationFrame","cancel","throttleRAF","event","unstable_batchedUpdates","offsetLeft","offsetTop","scrollX","scrollY","draggingElement","memo","canvasRef","useRef","canvasContainer","current","offsetWidth","offsetHeight","devicePixelRatio","scale","renderScene","wrap","handleWheel","e","preventDefault","addEventListener","passive","removeEventListener","onPointerMoveFromCanvasPointerDownHandler","pointerDownState","pointerCoords","viewportCoordsToSceneCoords","push","x","y","onPointerUpFromCanvasPointerDownHandler","console","log","eventListeners","onMove","onUp","ref","onPointerDown","origin","lastCoords","element","strokeColor","backgroundColor","fillStyle","strokeWidth","onPointerMove","onPointerUp","doc","clientX","clientY"],"sourceRoot":""}