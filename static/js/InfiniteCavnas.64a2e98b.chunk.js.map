{"version":3,"file":"static/js/InfiniteCavnas.64a2e98b.chunk.js","mappings":"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","sources":["components/markdown/index.jsx","pages/infinite-canvas/renderScene.js","pages/infinite-canvas/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport rehypeRaw from \"rehype-raw\";\n// import { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"github-markdown-css\";\n\nimport './index.less'\n\n\nfunction Shapes({ src }) {\n  const [mdText, setMdText] = useState(\"\");\n  useEffect(() => {\n    fetch(src)\n      .then((response) => response.text())\n      .then((text) => {\n        setMdText(text);\n      });\n  }, [src]);\n  return (\n    <div className=\"markdown-body\">\n      <ReactMarkdown\n        children={mdText}\n        rehypePlugins={[rehypeRaw]}\n        remarkPlugins={[remarkGfm]}\n        components={{\n          code({ node, inline, className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return !inline && match ? (\n              <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                // style={{ background: 'red'}}\n                language={match[1]}\n                className=\"my-code\"\n                PreTag=\"div\"\n                {...props}\n              />\n            ) : (\n              <code className={className} {...props}>\n                {children}\n              </code>\n            );\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Shapes;\n","import { elements } from \"./index\";\nconst drawAxis = (ctx, { scrollX, scrollY }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.translate(scrollX, scrollY);\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴\n  ctx.save();\n  ctx.beginPath();\n  ctx.setLineDash([10, 10]);\n  ctx.moveTo(0, -scrollY);\n  ctx.lineTo(0, canvas.height - scrollY);\n  ctx.moveTo(-scrollX, 0);\n  ctx.lineTo(canvas.width - scrollX, 0);\n  ctx.stroke();\n  ctx.restore();\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴负数刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(-i, -25, -i * rectH);\n  }\n  for (let i = 0; i < (canvas.height - scrollY) / rectH; i++) {\n    // 绘制纵轴正数刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(i, -25, i * rectH);\n  }\n  for (let i = 1; i < scrollX / rectW; i++) {\n    // 绘制横轴负数刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(-i, -i * rectW - 10, -15);\n  }\n  for (let i = 1; i < (canvas.width - scrollX) / rectW; i++) {\n    // 绘制横轴正数刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(i, i * rectW - 5, -15);\n  }\n  ctx.stroke();\n\n  ctx.restore();\n};\nconst renderElements = (ctx, appState) => {\n  elements.forEach((ele) => {\n    ctx.save();\n    ctx.translate(ele.x + appState.scrollX , ele.y + appState.scrollY);\n    ctx.strokeStyle = ele.strokeStyle;\n    ctx.strokeColor = ele.strokeColor;\n    ctx.strokeRect(0, 0, ele.width, ele.height);\n    ctx.restore();\n  });\n};\nconst renderScene = (canvas, appState) => {\n  const context = canvas.getContext(\"2d\");\n  context.clearRect(0,0,canvas.width, canvas.height)\n  drawAxis(context, appState);\n  renderElements(context, appState)\n};\n\nexport default renderScene;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport MarkDown from \"@/components/markdown\";\nimport doc from \"../../../doc/canvas进阶/绘制矩形及无限画布.md\";\nimport renderScene from \"./renderScene\";\nimport \"./index.less\";\nconst appState = {\n  offsetLeft: 0,\n  offsetTop: 0,\n  scrollX: 0,\n  scrollY: 0,\n  draggingElement: null,\n};\nexport const elements = [];\nconst viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const { offsetWidth, offsetHeight, offsetLeft, offsetTop } = canvas;\n    canvas.width = offsetWidth * window.devicePixelRatio;\n    canvas.height = offsetHeight * window.devicePixelRatio;\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n    appState.offsetLeft = offsetLeft;\n    appState.offsetTop = offsetTop;\n    renderScene(canvas, appState);\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasPointerDown = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    console.log(\"origin...\", appState, origin);\n    const pointerDownState = {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n      },\n    };\n    const element = {\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      width: 0,\n      height: 0,\n      strokeColor: \"#000000\",\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n    };\n    appState.draggingElement = element;\n    elements.push(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n  const onPointerMoveFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      // maybeDragNewGenericElement(pointerDownState, event);\n      appState.draggingElement.width =\n        pointerCoords.x - pointerDownState.origin.x;\n      appState.draggingElement.height =\n        pointerCoords.y - pointerDownState.origin.y;\n      renderScene(canvasRef.current, appState);\n    };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n    console.log(`滚动距离，X：${appState.scrollX}, Y：${appState.scrollY}`);\n    renderScene(canvasRef.current, appState);\n  };\n  return (\n    <div>\n      <div ref={canvasContainer}>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas\"\n          onPointerDown={handleCanvasPointerDown}\n          onWheel={handleCanvasWheel}\n        >\n          绘制canvas\n        </canvas>\n      </div>\n      <div>\n        <button\n          onClick={() => {\n            let minX = Infinity;\n            let maxX = -Infinity;\n            let minY = Infinity;\n            let maxY = -Infinity;\n\n            elements.forEach((element) => {\n              const [x1, y1, x2, y2] = [\n                element.x,\n                element.y,\n                element.x + element.width,\n                element.y + element.height,\n              ];\n              minX = Math.min(minX, x1);\n              minY = Math.min(minY, y1);\n              maxX = Math.max(maxX, x2);\n              maxY = Math.max(maxY, y2);\n            });\n\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = (maxX - minX + 20) * window.devicePixelRatio;\n            canvas.height = (maxY - minY + 20) * window.devicePixelRatio;\n            const context = canvas.getContext('2d')\n            context.scale(window.devicePixelRatio, window.devicePixelRatio)\n            renderScene(canvas, {\n              ...appState,\n              scrollX: -minX + 10,\n              scrollY: -minY + 10,\n            });\n            console.log('导出', elements);\n            var a = document.createElement(\"a\");\n            a.href = canvas.toDataURL();\n            a.download = \"canvas.png\";\n            a.click();\n          }}\n        >\n          导出PNG\n        </button>\n      </div>\n      <div className=\"tip\">温馨提示：可以在上面的画板中绘制矩形哦！！</div>\n      <MarkDown src={doc} />\n    </div>\n  );\n});\n\nexport default Canvas;\n"],"names":["src","useState","mdText","setMdText","useEffect","fetch","then","response","text","className","children","rehypePlugins","rehypeRaw","remarkPlugins","remarkGfm","components","code","node","inline","props","match","exec","String","replace","language","PreTag","canvas","appState","context","getContext","clearRect","width","height","ctx","scrollX","scrollY","save","rectH","rectW","translate","strokeStyle","fillStyle","beginPath","setLineDash","moveTo","lineTo","stroke","restore","lineWidth","textBaseline","i","font","fillText","drawAxis","elements","ele","x","y","strokeColor","strokeRect","renderElements","offsetLeft","offsetTop","draggingElement","viewportCoordsToSceneCoords","clientX","clientY","memo","canvasRef","useRef","canvasContainer","current","offsetWidth","offsetHeight","window","devicePixelRatio","scale","renderScene","wrap","handleWheel","e","preventDefault","addEventListener","passive","removeEventListener","onPointerUpFromCanvasPointerDownHandler","pointerDownState","event","eventListeners","onMove","onUp","onPointerMoveFromCanvasPointerDownHandler","pointerCoords","lastCoords","origin","ref","onPointerDown","console","log","element","backgroundColor","strokeWidth","push","onPointerMove","onPointerUp","onWheel","deltaX","deltaY","onClick","minX","Infinity","maxX","minY","maxY","forEach","x1","y1","x2","y2","Math","min","max","document","createElement","a","href","toDataURL","download","click","doc"],"sourceRoot":""}