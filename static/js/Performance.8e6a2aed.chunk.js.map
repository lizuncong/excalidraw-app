{"version":3,"file":"static/js/Performance.8e6a2aed.chunk.js","mappings":"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","sources":["pages/canvas/renderer/renderElement.js","pages/canvas/renderer/renderScene.js","pages/performance/base/element/newElement.js","pages/performance/base/generateElement.js","pages/performance/base/renderer/renderElement.js","pages/performance/base/renderer/renderScene.js","webpack://excalidraw-app/./src/pages/performance/base/components/tools/index.module.less?8f23","pages/performance/base/components/icons/index.jsx","pages/performance/base/scene/scene.js","pages/performance/base/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/performance/base/components/scale/index.module.less?d8d5","pages/performance/base/components/scale/index.jsx","webpack://excalidraw-app/./src/pages/performance/base/components/layer-ui/index.module.less?bdb7","pages/performance/base/components/layer-ui/index.jsx","webpack://excalidraw-app/./src/pages/performance/base/components/textarea/index.module.less?5491","pages/performance/base/components/textarea/index.jsx","pages/performance/base/index.jsx","util/export.js","util/index.js","util/zoom.js"],"sourcesContent":["import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nlet elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = new WeakMap();\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  if (prevElementWithCanvas) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n\n  elementWithCanvasCache.set(element, elementWithCanvas);\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    // rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  // rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value\n  );\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\nimport { getElementBounds, viewportCoordsToSceneCoords } from \"@/util\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (\n    let i = 1;\n    i < (canvas.height - scrollY * zoom.value) / (rectH * zoom.value);\n    i++\n  ) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (\n    let i = 1;\n    i < (canvas.width - scrollX * zoom.value) / (rectW * zoom.value);\n    i++\n  ) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  canvasWidth: number,\n  canvasHeight: number,\n  viewTransformations: {\n    zoom: Zoom,\n    offsetLeft: number,\n    offsetTop: number,\n    scrollX: number,\n    scrollY: number,\n  }\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  drawAxis(context, renderConfig);\n\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(element, normalizedCanvasWidth, normalizedCanvasHeight, {\n      zoom: renderConfig.zoom,\n      offsetLeft: appState.offsetLeft,\n      offsetTop: appState.offsetTop,\n      scrollX: renderConfig.scrollX,\n      scrollY: renderConfig.scrollY,\n    })\n  );\n  const total = document.getElementById('canvas-total')\n  total.innerText = `总元素数：${elements.length}   可见区域内元素：${visibleElements.length}`\n  visibleElements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","import { randomId } from \"@/util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n  ...rest\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n    ...rest,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = newElement({\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    originalText: opts.text,\n    ...opts,\n  });\n\n  return textElement;\n};\n","import { createElement, newTextElement } from \"./element/newElement\";\nimport { rgb } from \"@/util\";\n\nconst getRandomValue = (n, m) => {\n  return Number((Math.random() * (m - n) + n).toFixed(5));\n};\nconst generateElements = (count, type, appState) => {\n  const elements = [];\n  console.log(\"generate elements...\", count, type);\n  let element;\n  for (let i = 0; i < count; i++) {\n    let x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    let y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    element = createElement({\n      elementType: type,\n      pointerDownState: {\n        origin: {\n          x,\n          y,\n        },\n      },\n      appState,\n    });\n    if (type === \"rectangle\") {\n      const width =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollX - x,\n            appState.canvasWidth - appState.scrollX - x\n          )\n        ) + 2;\n      const height =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollY - y,\n            appState.canvasHeight - appState.scrollY - y\n          )\n        ) + 2;\n      element.width = width;\n      element.height = height;\n    } else if (type === \"freedraw\") {\n      const pointsNum = getRandomValue(20, 100);\n      for (let i = 0; i < pointsNum; i++) {\n        x = getRandomValue(x, x + 10);\n        y = getRandomValue(y, y + 10);\n        element.points.push([x, y]);\n      }\n    } else if (type === \"text\") {\n      const text = `${x}, ${y}`;\n      element = newTextElement({\n        x,\n        y,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text,\n        width: text.length * 20,\n        height: 25,\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n    }\n\n    elements.push(element);\n  }\n\n  return elements;\n};\n\nexport const animateElements = (elements, appState) => {\n  elements.forEach((el) => {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    el.x = x;\n    el.y = y;\n  });\n  return elements;\n};\nexport default generateElements;\n","import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nlet elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = new WeakMap();\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  if (prevElementWithCanvas) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n\n  elementWithCanvasCache.set(element, elementWithCanvas);\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    // rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  // rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value\n  );\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\nimport { getElementBounds, viewportCoordsToSceneCoords } from \"@/util\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (\n    let i = 1;\n    i < (canvas.height - scrollY * zoom.value) / (rectH * zoom.value);\n    i++\n  ) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (\n    let i = 1;\n    i < (canvas.width - scrollX * zoom.value) / (rectW * zoom.value);\n    i++\n  ) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  canvasWidth: number,\n  canvasHeight: number,\n  viewTransformations: {\n    zoom: Zoom,\n    offsetLeft: number,\n    offsetTop: number,\n    scrollX: number,\n    scrollY: number,\n  }\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  drawAxis(context, renderConfig);\n\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(element, normalizedCanvasWidth, normalizedCanvasHeight, {\n      zoom: renderConfig.zoom,\n      offsetLeft: appState.offsetLeft,\n      offsetTop: appState.offsetTop,\n      scrollX: renderConfig.scrollX,\n      scrollY: renderConfig.scrollY,\n    })\n  );\n  const total = document.getElementById('canvas-total')\n  total.innerText = `总元素数：${elements.length}   可见区域内元素：${visibleElements.length}`\n  visibleElements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__s6KrP\",\"item\":\"index_item__vsrIH\",\"selected\":\"index_selected__MvMy8\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps\n);\n\nconst modifiedTablerIconProps = {\n  width: 20,\n  height: 20,\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const ZoomInIcon = createIcon(\n  <path strokeWidth=\"1.25\" d=\"M10 4.167v11.666M4.167 10h11.666\" />,\n  modifiedTablerIconProps\n);\n\nexport const ZoomOutIcon = createIcon(\n  <path d=\"M5 10h10\" strokeWidth=\"1.25\" />,\n  modifiedTablerIconProps\n);\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() => {\n          exportPng({\n            elements: scene.getElementsIncludingDeleted(),\n            appState,\n          });\n        }}\n      >\n        {ExportImageIcon}\n      </span>\n      {SHAPES.map((shape) => {\n        const isSelected = activeTool.type === shape.type;\n        return (\n          <span\n            key={shape.type}\n            className={[styles.item, isSelected && styles.selected].join(\" \")}\n            onClick={() =>\n              onActiveToolChange({ type: isSelected ? \"\" : shape.type })\n            }\n          >\n            {shape.icon}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"scale\":\"index_scale__sOKAE\",\"item\":\"index_item__HDT6B\",\"value\":\"index_value__8EooG\"};","import React, { memo } from \"react\";\nimport { ZoomInIcon, ZoomOutIcon } from \"../icons\";\nimport { getNormalizedZoom } from \"@/util/zoom\";\nimport styles from \"./index.module.less\";\n\nconst ZOOM_STEP = 0.1;\nconst Scale = memo(({ appState, onZoomChange }) => {\n  const zoomValue = `${(appState.zoom.value * 100).toFixed(0)}%`;\n\n  return (\n    <div className={styles.scale}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value - ZOOM_STEP))\n        }\n      >\n        {ZoomOutIcon}\n      </span>\n      <span\n        className={styles.value}\n        onClick={() => onZoomChange(getNormalizedZoom(1))}\n      >\n        {zoomValue}\n      </span>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value + ZOOM_STEP))\n        }\n      >\n        {ZoomInIcon}\n      </span>\n    </div>\n  );\n});\n\nexport default Scale;\n","// extracted by mini-css-extract-plugin\nexport default {\"layer\":\"index_layer__nJPgb\",\"ball_red\":\"index_ball_red__73uwO\",\"move\":\"index_move__ri8N6\",\"boundceBall\":\"index_boundceBall__9vrZQ\",\"shadowball\":\"index_shadowball__tqUrD\",\"shadowMove\":\"index_shadowMove__868Rg\"};","import React, { memo } from \"react\";\nimport Tools from \"../tools\";\nimport Scale from \"../scale\";\nimport styles from \"./index.module.less\";\nconst LayerUI = memo(\n  ({ activeTool, onActiveToolChange, appState, onZoomChange }) => {\n    return (\n      <div className={styles.layer}>\n        <Scale appState={appState} onZoomChange={onZoomChange} />\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={onActiveToolChange}\n        />\n        <div className={styles.boundceBall}>\n          <div className={styles.ball_red}></div>\n          <div className={styles.shadowball}></div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default LayerUI;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__1YEM8\",\"textarea_copy\":\"index_textarea_copy__7s0wP\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache } from \"../../renderer/renderElement\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ staticCanvasRef }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const left = event.clientX - appState.offsetLeft;\n      const top = event.clientY - appState.offsetTop;\n      const styleObj = {\n        font: getFontString(element),\n        left: `${left}px`,\n        top: `${top}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - left;\n      // textarea.style.maxWidth = `${maxWidth}px`;\n      // textarea.style.width = `${element.fontSize}px`;\n      // textarea.style.height = `${element.fontSize * 1.2}px`;\n      Object.assign(textarea.style, {\n        zIndex: 1,\n        maxWidth: `${maxWidth}px`,\n        width: `${element.fontSize}px`,\n        height: `${element.fontSize * 1.2}px`,\n      });\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          // console.log(\"tex5....\", text, text.length);\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              console.log(\"正常的输入\");\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              console.log(\"粘贴进来的文本\");\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              console.log(\"splitResult..\", splitResult);\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            zIndex: -1,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { distance } from \"@/util\";\n// import { isAndroid } from \"@/util/device\";\nimport {\n  withBatchedUpdatesThrottled,\n  viewportCoordsToSceneCoords,\n} from \"@/util\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\nimport generateElements, { animateElements } from \"./generateElement\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport {\n  deleteElementCache,\n  clearElementCache,\n} from \"./renderer/renderElement\";\nimport LayerUI from \"./components/layer-ui\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  zoom: { value: 1 },\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst ZOOM_STEP = 0.1;\n\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const cursorPosition = useRef({});\n  const textareaRef = useRef(null);\n  const rafRef = useRef(null);\n  const globalVarRef = useRef({});\n  const [flag, refreshFlag] = useState(false);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  const [testObj, setTestObj] = useState({ count: \"\", type: \"rectangle\" });\n  const [animate, setAnimate] = useState(false);\n  const animateRef = useRef();\n  const refresh = () => {\n    refreshFlag(!flag);\n  };\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    const updateCurrentCursorPosition = (event) => {\n      cursorPosition.current = {\n        cursorX: event.clientX,\n        cursorY: event.clientY,\n      };\n    };\n    const onTapStart = (e) => {\n      e.preventDefault();\n    };\n    const canvas = canvasRef.current;\n    canvas.addEventListener(\"touchstart\", onTapStart);\n    document.addEventListener(\"mousemove\", updateCurrentCursorPosition);\n    return () => {\n      canvas.removeEventListener(\"touchstart\", onTapStart);\n\n      wrap.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"mousemove\", updateCurrentCursorPosition);\n    };\n  }, []);\n  useEffect(() => {\n    let frame = 0;\n    let startTime = Date.now();\n\n    const loop = () => {\n      const currentTime = Date.now();\n      frame++;\n\n      if (currentTime > 1000 + startTime) {\n        const fps = Math.round((frame * 1000) / (currentTime - startTime));\n        rafRef.current.innerText = `FPS：${fps}`;\n        frame = 0;\n        startTime = currentTime;\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    loop();\n  }, []);\n  const reDrawAfterZoom = () => {\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n    if (globalVarRef.current.zoomTimerId) {\n      clearTimeout(globalVarRef.current.zoomTimerId);\n    }\n    globalVarRef.current.zoomTimerId = setTimeout(() => {\n      clearElementCache();\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    }, 300);\n  };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    // 关于缩放：双指放大时，deltaY是负数，缩小时，deltaY是正数\n    // 缩放，本质上就是对某个点的坐标进行变换\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY); // 只有两种情况，要么+1，要么-1\n      const MAX_STEP = ZOOM_STEP * 100; // 10\n      const absDelta = Math.abs(deltaY);\n      let delta = deltaY;\n      // delta最大为10\n      if (absDelta > MAX_STEP) {\n        delta = MAX_STEP * sign;\n      }\n      let newZoom = appState.zoom.value - delta / 100;\n      newZoom +=\n        Math.log10(Math.max(1, appState.zoom.value)) *\n        -sign *\n        Math.min(1, absDelta / 20);\n      const nextZoom = getNormalizedZoom(newZoom);\n      Object.assign(appState, {\n        ...getStateForZoom(\n          {\n            viewportX: cursorPosition.current.cursorX,\n            viewportY: cursorPosition.current.cursorY,\n            nextZoom: nextZoom,\n          },\n          appState\n        ),\n      });\n      // renderScene(canvasRef.current, appState);\n      refresh();\n      reDrawAfterZoom();\n      return;\n    }\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (!activeTool.type) return;\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n      console.log(\"pointer up appState...\", appState);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    if (activeTool.type) return;\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div className=\"performance-base\" ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n        >\n          动态canvas\n        </canvas>\n        <LayerUI\n          activeTool={activeTool}\n          onZoomChange={(zoomVal) => {\n            if (appState.zoom.value === zoomVal) return;\n            Object.assign(appState, {\n              ...getStateForZoom(\n                {\n                  viewportX: appState.canvasWidth / 2 + appState.offsetLeft,\n                  viewportY: appState.canvasHeight / 2 + appState.offsetTop,\n                  nextZoom: zoomVal,\n                },\n                appState\n              ),\n            });\n            refresh();\n            reDrawAfterZoom();\n          }}\n          appState={{ ...appState }}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} staticCanvasRef={staticCanvasRef} />\n      </div>\n      <div>\n        <span ref={rafRef}>FPS：--</span>\n        <span className=\"total\" id=\"canvas-total\"></span>\n      </div>\n      <div className=\"row\">\n        <input\n          type=\"number\"\n          value={testObj.count}\n          onChange={(e) => setTestObj({ ...testObj, count: e.target.value })}\n        />\n        <select\n          value={testObj.type}\n          onChange={(e) => setTestObj({ ...testObj, type: e.target.value })}\n        >\n          <option value=\"freedraw\">freedraw</option>\n          <option value=\"rectangle\">rectangle</option>\n          <option value=\"text\">text</option>\n        </select>\n        <button\n          onClick={() => {\n            const elements = generateElements(\n              Number(testObj.count),\n              testObj.type,\n              appState\n            );\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              ...elements,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n          }}\n        >\n          生成\n        </button>\n        <button\n          onClick={() => {\n            setAnimate(!animate);\n            if (animateRef.current) {\n              cancelAnimationFrame(animateRef.current);\n            }\n            if (animate) return;\n            let diffTime = 100;\n            let lastDate = Date.now();\n            const tick = () => {\n              const currentDate = Date.now();\n              if (currentDate - lastDate >= diffTime) {\n                lastDate = currentDate;\n                const elements = animateElements(\n                  scene.getElementsIncludingDeleted(),\n                  appState\n                );\n                renderScene({\n                  elements: elements,\n                  appState: appState,\n                  scale: window.devicePixelRatio,\n                  canvas: staticCanvasRef.current,\n                  renderConfig: {\n                    selectionColor: \"#6965db\",\n                    scrollX: appState.scrollX,\n                    scrollY: appState.scrollY,\n                    viewBackgroundColor: \"#ffffff\",\n                    zoom: appState.zoom,\n                  },\n                });\n              }\n\n              animateRef.current = requestAnimationFrame(tick);\n            };\n            animateRef.current = requestAnimationFrame(tick);\n          }}\n        >\n          {animate ? \"停止动画\" : \"动画\"}\n        </button>\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { getCommonBounds, distance } from \"./index\";\nimport { renderScene } from '@/pages/canvas/renderer/renderScene'\nconst getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const exportPng = ({ elements, appState }) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  console.log(\"export...\", minX, minY, width, height);\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  // const context = canvas.getContext(\"2d\");\n  // context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: 1,\n    },\n  });\n  console.log(\"导出\", elements);\n  var a = document.createElement(\"a\");\n  a.href = canvas.toDataURL();\n  a.download = \"canvas.png\";\n  a.click();\n};\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n","const MIN_ZOOM = 0.1;\n\nexport const getNormalizedZoom = (zoom) => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30));\n};\n\nexport const getStateForZoom = (\n  { viewportX, viewportY, nextZoom },\n  appState\n) => {\n  const screenX = viewportX - appState.offsetLeft;\n  const screenY = viewportY - appState.offsetTop;\n  const currentZoom = appState.zoom.value;\n\n  return {\n    scrollX: appState.scrollX + screenX / nextZoom - screenX / currentZoom,\n    scrollY: appState.scrollY + screenY / nextZoom - screenY / currentZoom,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n"],"names":["renderElement","element","context","renderConfig","appState","elementWithCanvas","generateElementWithCanvas","drawElementFromCanvas","elementWithCanvasCache","WeakMap","deleteElementCache","delete","clearElementCache","prevElementWithCanvas","get","generateElementCanvas","zoom","set","rightContainer","document","getElementById","canvas","createElement","getContext","padding","getCanvasPadding","type","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","width","distance","window","devicePixelRatio","value","height","x","y","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeWidth","strokeStyle","strokeRect","font","getFontString","fillStyle","strokeColor","textAlign","lines","text","split","lineHeight","length","textBaseline","index","fillText","points","forEach","point","lineTo","moveTo","stroke","cx","scrollX","cy","scrollY","drawImage","renderScene","elements","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","rectH","rectW","beginPath","i","drawAxis","visibleElements","filter","canvasWidth","canvasHeight","viewTransformations","getElementBounds","topLeftSceneCoords","viewportCoordsToSceneCoords","clientX","offsetLeft","clientY","offsetTop","bottomRightSceneCoords","isVisibleElement","innerText","localStorage","setItem","JSON","stringify","newElement","backgroundColor","angle","rest","id","randomId","isDeleted","elementType","pointerDownState","origin","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","newTextElement","opts","fontSize","fontFamily","verticalAlign","originalText","getRandomValue","n","m","Number","Math","random","toFixed","count","console","log","abs","pointsNum","push","createIcon","d","style","mirror","focusable","role","viewBox","fill","RectangleIcon","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","modifiedTablerIconProps","ZoomInIcon","ZoomOutIcon","Scene","parse","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","join","onClick","exportPng","getElementsIncludingDeleted","map","shape","isSelected","Scale","onZoomChange","zoomValue","getNormalizedZoom","LayerUI","Index","forwardRef","ref","staticCanvasRef","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","event","preventDefault","stopPropagation","sceneX","sceneY","draggingElement","textarea","current","focus","left","top","styleObj","color","Object","assign","copyTextarea","maxWidth","zIndex","onChange","e","target","parseFloat","copyTextWidth","getBoundingClientRect","slice","splitResult","line","lastIdx","str","onBlur","offsetWidth","offsetHeight","replaceAllElements","selectionColor","viewBackgroundColor","setTimeout","background","contentEditable","canvasRef","canvasContainer","cursorPosition","rafRef","globalVarRef","flag","refreshFlag","setActiveTool","testObj","setTestObj","animate","setAnimate","animateRef","refresh","useEffect","setCanvasSize","wrap","handleWheel","addEventListener","passive","updateCurrentCursorPosition","cursorX","cursorY","onTapStart","removeEventListener","frame","startTime","Date","now","loop","currentTime","fps","round","requestAnimationFrame","reDrawAfterZoom","zoomTimerId","clearTimeout","onPointerMoveFromCanvasPointerDownHandler","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","onWheel","deltaX","deltaY","metaKey","ctrlKey","sign","absDelta","delta","ZOOM_STEP","newZoom","log10","max","min","nextZoom","getStateForZoom","viewportX","viewportY","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","zoomVal","generateElements","cancelAnimationFrame","lastDate","tick","currentDate","el","animateElements","exportPadding","getCommonBounds","minX","minY","maxX","maxY","getCanvasSize","a","href","toDataURL","download","click","r","floor","g","b","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","ret","trailing","flush","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","p","rotate","cos","sin","x11","y11","x12","y12","x22","y22","x21","y21","testIdBase","__generateExcalidrawElements","ele","xs","ys","getSizeFromPoints","roughness","groupIds","roundness","seed","version","versionNonce","boundElements","updated","link","locked","pressures","simulatePressure","lastCommittedPoint","screenX","screenY","currentZoom"],"sourceRoot":""}