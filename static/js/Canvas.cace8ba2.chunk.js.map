{"version":3,"file":"static/js/Canvas.cace8ba2.chunk.js","mappings":"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","sources":["pages/canvas/util.js","pages/canvas/element/newElement.js","pages/canvas/renderer/renderElement.js","pages/canvas/renderer/renderScene.js","webpack://excalidraw-app/./src/pages/canvas/components/tools/index.module.less?8991","pages/canvas/components/icons/index.jsx","pages/canvas/components/tools/index.jsx","pages/canvas/index.jsx","pages/canvas/scene/scene.js","util/index.js"],"sourcesContent":["export const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\nlet testIdBase = 0;\n\nexport const randomId = () => `id${testIdBase++}`;\n","import { randomId } from \"../util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  points = [],\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    isDeleted: false,\n    points,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n","import { getElementAbsoluteCoords, distance } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nconst elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const zoom = renderConfig.zoom || 1;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  if (prevElementWithCanvas) {\n    console.log(\"复用之前的canvas========================\");\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(element, zoom, renderConfig);\n\n  elementWithCanvasCache.set(element, elementWithCanvas);\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords({\n      ...element,\n      points: element.points.map((p) => {\n        return [p[0] - element.x, p[1] - element.y];\n      }),\n    });\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    const padding = 20;\n    canvas.width = distance(x1, x2) * window.devicePixelRatio + padding * 2;\n    canvas.height = distance(y1, y2) * window.devicePixelRatio + padding * 2;\n    canvasOffsetX =\n      element.x > x1 ? distance(element.x, x1) * window.devicePixelRatio : 0;\n\n    canvasOffsetY =\n      element.y > y1 ? distance(element.y, y1) * window.devicePixelRatio : 0;\n\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom + padding * zoom * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom + padding * zoom * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom, padding * zoom);\n\n  context.scale(window.devicePixelRatio * zoom, window.devicePixelRatio * zoom);\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = 3;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords({\n      ...element,\n      points: element.points.map((p) => {\n        return [p[0] - element.x, p[1] - element.y];\n      }),\n    });\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  console.log('cx...', elementWithCanvas)\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n\n  context.translate(cx, cy);\n\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\n\n\nexport const drawAxis = (ctx, { scrollX, scrollY }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (let i = 1; i < (canvas.height - scrollY) / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (let i = 1; i < (canvas.width - scrollX) / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  // Apply zoom\n  context.save();\n  context.scale(renderConfig.zoom, renderConfig.zoom);\n  drawAxis(context, renderConfig);\n\n  // render element\n  elements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  // Reset zoom\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__ZQUTr\",\"item\":\"index_item__JCc41\",\"selected\":\"index_selected__uL6n6\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon } from \"../icons\";\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      {SHAPES.map((shape) => (\n        <span\n          key={shape.type}\n          className={[\n            styles.item,\n            activeTool.type === shape.type && styles.selected,\n          ].join(\" \")}\n          onClick={() => onActiveToolChange({ type: shape.type })}\n        >\n          {shape.icon}\n        </span>\n      ))}\n    </div>\n  );\n});\n\nexport default Index;\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { viewportCoordsToSceneCoords, distance } from \"./util\";\nimport { withBatchedUpdatesThrottled } from \"@/util\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport { deleteElementCache } from \"./renderer/renderElement\";\nimport Tools from \"./components/tools\";\nimport Scene from \"./scene/scene\";\nimport \"./index.less\";\nconst scene = new Scene();\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nlet appState = temp || {\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n};\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: 1,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: 1,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (!activeTool.type) return;\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        console.log('fredda=====', appState.draggingElement)\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: 1,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n      console.log(\"pointer up appState...\", appState);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: 1,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  return (\n    <div ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n        >\n          动态canvas\n        </canvas>\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport default Scene;\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (points) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element.points);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;\n"],"names":["viewportCoordsToSceneCoords","clientX","clientY","offsetLeft","offsetTop","x","scrollX","y","scrollY","distance","Math","abs","testIdBase","newElement","type","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","points","id","isDeleted","elementWithCanvasCache","WeakMap","deleteElementCache","element","delete","generateElementWithCanvas","renderConfig","zoom","prevElementWithCanvas","get","console","log","elementWithCanvas","generateElementCanvas","set","rightContainer","document","getElementById","previewCanvas","canvas","createElement","context","getContext","padding","getCanvasPadding","removeChild","appendChild","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","map","p","x1","y1","x2","y2","window","devicePixelRatio","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","strokeRect","lineWidth","forEach","point","index","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","renderScene","elements","appState","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","rectH","rectW","beginPath","textBaseline","i","font","fillText","drawAxis","renderElement","localStorage","setItem","JSON","stringify","createIcon","d","opts","style","mirror","rest","focusable","role","viewBox","fill","SHAPES","icon","rx","strokeLinecap","strokeLinejoin","clipRule","memo","activeTool","onActiveToolChange","className","styles","shape","join","onClick","scene","parse","getItem","this","nextElements","draggingElement","Canvas","canvasRef","useRef","canvasContainer","staticCanvasRef","useState","setActiveTool","useEffect","setCanvasSize","offsetWidth","offsetHeight","current","getBoundingClientRect","getElementsIncludingDeleted","selectionColor","viewBackgroundColor","wrap","handleWheel","e","preventDefault","addEventListener","passive","removeEventListener","onPointerMoveFromCanvasPointerDownHandler","pointerDownState","withBatchedUpdatesThrottled","event","pointerCoords","lastCoords","push","originX","origin","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","replaceAllElements","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","ref","onWheel","deltaX","deltaY","onPointerDown","elementType","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","onPointerMove","onPointerUp","value","r","floor","random","g","b","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","requestAnimationFrame","ret","trailing","flush","cancelAnimationFrame","cancel","throttleRAF","unstable_batchedUpdates","minX","Infinity","minY","maxX","maxY","min","max","getBoundsFromPoints","__generateExcalidrawElements","ele","xs","ys","getSizeFromPoints","angle","roughness","groupIds","roundness","seed","version","versionNonce","boundElements","updated","Date","now","link","locked","pressures","simulatePressure","lastCommittedPoint","length"],"sourceRoot":""}