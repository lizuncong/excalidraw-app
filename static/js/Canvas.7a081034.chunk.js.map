{"version":3,"file":"static/js/Canvas.7a081034.chunk.js","mappings":"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","sources":["util/zoom.js","pages/canvas/element/newElement.js","pages/canvas/renderer/renderElement.js","pages/canvas/renderer/renderScene.js","webpack://excalidraw-app/./src/pages/canvas/components/tools/index.module.less?8991","pages/canvas/components/icons/index.jsx","util/export.js","pages/canvas/scene/scene.js","pages/canvas/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/scale/index.module.less?3a8b","pages/canvas/components/scale/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/layer-ui/index.module.less?8d4d","pages/canvas/components/layer-ui/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/textarea/index.module.less?82b0","pages/canvas/components/textarea/index.jsx","pages/canvas/index.jsx","util/index.js"],"sourcesContent":["const MIN_ZOOM = 0.1;\n\nexport const getNormalizedZoom = (zoom) => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30));\n};\n\nexport const getStateForZoom = (\n  { viewportX, viewportY, nextZoom },\n  appState\n) => {\n  const screenX = viewportX - appState.offsetLeft;\n  const screenY = viewportY - appState.offsetTop;\n  const currentZoom = appState.zoom.value;\n\n  return {\n    scrollX: appState.scrollX + screenX / nextZoom - screenX / currentZoom,\n    scrollY: appState.scrollY + screenY / nextZoom - screenY / currentZoom,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n","import { randomId } from \"@/util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n  ...rest\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n    ...rest,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = newElement({\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    originalText: opts.text,\n    ...opts,\n  });\n\n  return textElement;\n};\n","import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nlet elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = new WeakMap();\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  if (prevElementWithCanvas) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n\n  elementWithCanvasCache.set(element, elementWithCanvas);\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    // rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  // rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value\n  );\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  const zoomValue = zoom.value;\n  console.log(\"绘制坐标轴...\", zoomValue);\n  ctx.save();\n  const rectH = 100 * zoomValue; // 纵轴刻度间距\n  const rectW = 100 * zoomValue; // 横轴刻度间距\n  const tickLength = 8 * zoomValue; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (let i = 1; i < (canvas.height - scrollY) / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (let i = 1; i < (canvas.width - scrollX) / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  drawAxis(context, renderConfig);\n\n  elements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__ZQUTr\",\"item\":\"index_item__JCc41\",\"selected\":\"index_selected__uL6n6\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps\n);\n\nconst modifiedTablerIconProps = {\n  width: 20,\n  height: 20,\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const ZoomInIcon = createIcon(\n  <path strokeWidth=\"1.25\" d=\"M10 4.167v11.666M4.167 10h11.666\" />,\n  modifiedTablerIconProps\n);\n\nexport const ZoomOutIcon = createIcon(\n  <path d=\"M5 10h10\" strokeWidth=\"1.25\" />,\n  modifiedTablerIconProps\n);\n","import { getCommonBounds, distance } from \"./index\";\nimport { renderScene } from '@/pages/canvas/renderer/renderScene'\nconst getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const exportPng = ({ elements, appState }) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  console.log(\"export...\", minX, minY, width, height);\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  // const context = canvas.getContext(\"2d\");\n  // context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: 1,\n    },\n  });\n  console.log(\"导出\", elements);\n  var a = document.createElement(\"a\");\n  a.href = canvas.toDataURL();\n  a.download = \"canvas.png\";\n  a.click();\n};\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() => {\n          exportPng({\n            elements: scene.getElementsIncludingDeleted(),\n            appState,\n          });\n        }}\n      >\n        {ExportImageIcon}\n      </span>\n      {SHAPES.map((shape) => {\n        const isSelected = activeTool.type === shape.type;\n        return (\n          <span\n            key={shape.type}\n            className={[styles.item, isSelected && styles.selected].join(\" \")}\n            onClick={() =>\n              onActiveToolChange({ type: isSelected ? \"\" : shape.type })\n            }\n          >\n            {shape.icon}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"scale\":\"index_scale__7GBXS\",\"item\":\"index_item__EjyQO\",\"value\":\"index_value__oZ-q0\"};","import React, { memo } from \"react\";\nimport { ZoomInIcon, ZoomOutIcon } from \"../icons\";\nimport { getNormalizedZoom } from \"@/util/zoom\";\nimport styles from \"./index.module.less\";\n\nconst ZOOM_STEP = 0.1;\nconst Scale = memo(({ appState, onZoomChange }) => {\n  const zoomValue = `${(appState.zoom.value * 100).toFixed(0)}%`;\n\n  return (\n    <div className={styles.scale}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value - ZOOM_STEP))\n        }\n      >\n        {ZoomOutIcon}\n      </span>\n      <span\n        className={styles.value}\n        onClick={() => onZoomChange(getNormalizedZoom(1))}\n      >\n        {zoomValue}\n      </span>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value + ZOOM_STEP))\n        }\n      >\n        {ZoomInIcon}\n      </span>\n    </div>\n  );\n});\n\nexport default Scale;\n","// extracted by mini-css-extract-plugin\nexport default {\"layer\":\"index_layer__JlGve\"};","import React, { memo } from \"react\";\nimport Tools from \"../tools\";\nimport Scale from \"../scale\";\nimport styles from \"./index.module.less\";\nconst LayerUI = memo(\n  ({ activeTool, onActiveToolChange, appState, onZoomChange }) => {\n    return (\n      <div className={styles.layer}>\n        <Scale appState={appState} onZoomChange={onZoomChange} />\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={onActiveToolChange}\n        />\n      </div>\n    );\n  }\n);\n\nexport default LayerUI;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__b45r1\",\"textarea_copy\":\"index_textarea_copy__REiTG\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache } from \"../../renderer/renderElement\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ staticCanvasRef }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const left = event.clientX - appState.offsetLeft;\n      const top = event.clientY - appState.offsetTop;\n      const styleObj = {\n        font: getFontString(element),\n        left: `${left}px`,\n        top: `${top}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - left;\n      // textarea.style.maxWidth = `${maxWidth}px`;\n      // textarea.style.width = `${element.fontSize}px`;\n      // textarea.style.height = `${element.fontSize * 1.2}px`;\n      Object.assign(textarea.style, {\n        zIndex: 1,\n        maxWidth: `${maxWidth}px`,\n        width: `${element.fontSize}px`,\n        height: `${element.fontSize * 1.2}px`,\n      });\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          // console.log(\"tex5....\", text, text.length);\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              console.log(\"正常的输入\");\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              console.log(\"粘贴进来的文本\");\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              console.log(\"splitResult..\", splitResult);\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: 1,\n              },\n            });\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            zIndex: -1,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { distance } from \"@/util\";\nimport {\n  withBatchedUpdatesThrottled,\n  viewportCoordsToSceneCoords,\n} from \"@/util\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport {\n  deleteElementCache,\n  clearElementCache,\n} from \"./renderer/renderElement\";\nimport LayerUI from \"./components/layer-ui\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  zoom: { value: 1 },\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst ZOOM_STEP = 0.1;\n\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const cursorPosition = useRef({});\n  const textareaRef = useRef(null);\n  const rafRef = useRef(null);\n  const globalVarRef = useRef({});\n  const [flag, refreshFlag] = useState(false);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  const refresh = () => {\n    refreshFlag(!flag);\n  };\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    const updateCurrentCursorPosition = (event) => {\n      cursorPosition.current = {\n        cursorX: event.clientX,\n        cursorY: event.clientY,\n      };\n    };\n    document.addEventListener(\"mousemove\", updateCurrentCursorPosition);\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"mousemove\", updateCurrentCursorPosition);\n    };\n  }, []);\n  useEffect(() => {\n    let frame = 0;\n    let startTime = Date.now();\n\n    const loop = () => {\n      const currentTime = Date.now();\n      frame++;\n\n      if (currentTime > 1000 + startTime) {\n        const fps = Math.round((frame * 1000) / (currentTime - startTime));\n        rafRef.current.innerText = `FPS：${fps}`;\n        frame = 0;\n        startTime = currentTime;\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    loop();\n  }, []);\n  const reDrawAfterZoom = () => {\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n    if (globalVarRef.current.zoomTimerId) {\n      clearTimeout(globalVarRef.current.zoomTimerId);\n    }\n    globalVarRef.current.zoomTimerId = setTimeout(() => {\n      clearElementCache();\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    }, 300);\n  };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    // 关于缩放：双指放大时，deltaY是负数，缩小时，deltaY是正数\n    // 缩放，本质上就是对某个点的坐标进行变换\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY); // 只有两种情况，要么+1，要么-1\n      const MAX_STEP = ZOOM_STEP * 100; // 10\n      const absDelta = Math.abs(deltaY);\n      let delta = deltaY;\n      // delta最大为10\n      if (absDelta > MAX_STEP) {\n        delta = MAX_STEP * sign;\n      }\n      let newZoom = appState.zoom.value - delta / 100;\n      newZoom +=\n        Math.log10(Math.max(1, appState.zoom.value)) *\n        -sign *\n        Math.min(1, absDelta / 20);\n      const nextZoom = getNormalizedZoom(newZoom);\n      Object.assign(appState, {\n        ...getStateForZoom(\n          {\n            viewportX: cursorPosition.current.cursorX,\n            viewportY: cursorPosition.current.cursorY,\n            nextZoom: nextZoom,\n          },\n          appState\n        ),\n      });\n      // renderScene(canvasRef.current, appState);\n      refresh();\n      reDrawAfterZoom();\n      return;\n    }\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (!activeTool.type) return;\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n      console.log(\"pointer up appState...\", appState);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    if (activeTool.type) return;\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n        >\n          动态canvas\n        </canvas>\n        <LayerUI\n          activeTool={activeTool}\n          onZoomChange={(zoomVal) => {\n            if (appState.zoom.value === zoomVal) return;\n            Object.assign(appState, {\n              ...getStateForZoom(\n                {\n                  viewportX: appState.canvasWidth / 2 + appState.offsetLeft,\n                  viewportY: appState.canvasHeight / 2 + appState.offsetTop,\n                  nextZoom: zoomVal,\n                },\n                appState\n              ),\n            });\n            refresh();\n            reDrawAfterZoom();\n          }}\n          appState={{ ...appState }}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} staticCanvasRef={staticCanvasRef} />\n      </div>\n      <div ref={rafRef}>FPS：--</div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n"],"names":["getNormalizedZoom","zoom","Math","max","min","getStateForZoom","appState","viewportX","viewportY","nextZoom","screenX","offsetLeft","screenY","offsetTop","currentZoom","value","scrollX","scrollY","newElement","type","x","y","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","rest","id","randomId","isDeleted","elementWithCanvasCache","WeakMap","deleteElementCache","element","delete","generateElementWithCanvas","renderConfig","prevElementWithCanvas","get","elementWithCanvas","generateElementCanvas","set","rightContainer","document","getElementById","canvas","createElement","context","getContext","padding","getCanvasPadding","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","distance","window","devicePixelRatio","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeRect","font","getFontString","textAlign","lines","text","split","lineHeight","length","textBaseline","index","fillText","forEach","point","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","renderScene","elements","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","zoomValue","console","log","rectH","rectW","tickLength","beginPath","i","drawAxis","renderElement","localStorage","setItem","JSON","stringify","createIcon","d","opts","style","mirror","focusable","role","viewBox","fill","RectangleIcon","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","modifiedTablerIconProps","ZoomInIcon","ZoomOutIcon","exportPng","exportPadding","getCommonBounds","minX","minY","maxX","maxY","getCanvasSize","selectionColor","viewBackgroundColor","a","href","toDataURL","download","click","Scene","parse","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","join","onClick","getElementsIncludingDeleted","map","shape","isSelected","Scale","onZoomChange","toFixed","LayerUI","Index","forwardRef","ref","staticCanvasRef","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","event","preventDefault","stopPropagation","viewportCoordsToSceneCoords","sceneX","sceneY","rgb","fontSize","fontFamily","verticalAlign","originalText","draggingElement","textarea","current","focus","left","clientX","top","clientY","styleObj","color","Object","assign","copyTextarea","maxWidth","canvasWidth","zIndex","onChange","e","target","parseFloat","innerText","copyTextWidth","getBoundingClientRect","slice","splitResult","line","push","lastIdx","str","onBlur","offsetWidth","offsetHeight","replaceAllElements","setTimeout","background","contentEditable","canvasHeight","Canvas","canvasRef","canvasContainer","cursorPosition","rafRef","globalVarRef","flag","refreshFlag","setActiveTool","refresh","useEffect","setCanvasSize","wrap","handleWheel","addEventListener","passive","updateCurrentCursorPosition","cursorX","cursorY","removeEventListener","frame","startTime","Date","now","loop","currentTime","fps","round","requestAnimationFrame","reDrawAfterZoom","zoomTimerId","clearTimeout","onPointerMoveFromCanvasPointerDownHandler","pointerDownState","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","origin","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","onWheel","deltaX","deltaY","metaKey","ctrlKey","sign","absDelta","abs","delta","ZOOM_STEP","newZoom","log10","onPointerDown","elementType","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","onPointerMove","onPointerUp","onDoubleClick","zoomVal","r","floor","random","g","b","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","ret","trailing","flush","cancelAnimationFrame","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","p","rotate","cos","sin","x11","y11","x12","y12","x22","y22","x21","y21","getElementBounds","testIdBase","__generateExcalidrawElements","ele","xs","ys","getSizeFromPoints","roughness","groupIds","roundness","seed","version","versionNonce","boundElements","updated","link","locked","pressures","simulatePressure","lastCommittedPoint"],"sourceRoot":""}