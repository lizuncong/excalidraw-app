{"version":3,"file":"static/js/Canvas.9154ee98.chunk.js","mappings":"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","sources":["pages/canvas/element/newElement.js","pages/canvas/generateElement.js","webpack://excalidraw-app/./src/pages/canvas/components/tools/index.module.less?8991","pages/canvas/components/icons/index.jsx","pages/canvas/scene/scene.js","pages/canvas/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/scale/index.module.less?3a8b","pages/canvas/components/scale/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/layer-ui/index.module.less?8d4d","pages/canvas/components/layer-ui/index.jsx","webpack://excalidraw-app/./src/pages/canvas/components/textarea/index.module.less?82b0","pages/canvas/components/textarea/index.jsx","pages/canvas/index.jsx","pages/canvas/renderer/renderElement.js","pages/canvas/renderer/renderScene.js","util/export.js","util/index.js","util/zoom.js"],"sourcesContent":["import { randomId } from \"@/util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n  ...rest\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n    ...rest,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = newElement({\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    originalText: opts.text,\n    ...opts,\n  });\n\n  return textElement;\n};\n","import { createElement } from \"./element/newElement\";\n\nconst getRandomValue = (n, m) => {\n  return Number((Math.random() * (m - n) + n).toFixed(5));\n};\nconst generateElements = (count, type, appState) => {\n  const elements = [];\n  console.log(\"generate elements...\", count, type);\n  let element;\n  for (let i = 0; i < count; i++) {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    const width =\n      Math.abs(\n        getRandomValue(\n          -appState.scrollX - x,\n          appState.canvasWidth - appState.scrollX - x\n        )\n      ) + 2;\n    const height =\n      Math.abs(\n        getRandomValue(\n          -appState.scrollY - y,\n          appState.canvasHeight - appState.scrollY - y\n        )\n      ) + 2;\n    element = createElement({\n      elementType: type,\n      pointerDownState: {\n        origin: {\n          x,\n          y,\n        },\n      },\n      appState,\n    });\n    element.width = width;\n    element.height = height;\n    elements.push(element);\n  }\n\n  return elements;\n};\n\nexport const animateElements = (elements, appState) => {\n  elements.forEach((el) => {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    el.x = x;\n    el.y = y;\n  });\n  return elements;\n};\nexport default generateElements;\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__ZQUTr\",\"item\":\"index_item__JCc41\",\"selected\":\"index_selected__uL6n6\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps\n);\n\nconst modifiedTablerIconProps = {\n  width: 20,\n  height: 20,\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const ZoomInIcon = createIcon(\n  <path strokeWidth=\"1.25\" d=\"M10 4.167v11.666M4.167 10h11.666\" />,\n  modifiedTablerIconProps\n);\n\nexport const ZoomOutIcon = createIcon(\n  <path d=\"M5 10h10\" strokeWidth=\"1.25\" />,\n  modifiedTablerIconProps\n);\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() => {\n          exportPng({\n            elements: scene.getElementsIncludingDeleted(),\n            appState,\n          });\n        }}\n      >\n        {ExportImageIcon}\n      </span>\n      {SHAPES.map((shape) => {\n        const isSelected = activeTool.type === shape.type;\n        return (\n          <span\n            key={shape.type}\n            className={[styles.item, isSelected && styles.selected].join(\" \")}\n            onClick={() =>\n              onActiveToolChange({ type: isSelected ? \"\" : shape.type })\n            }\n          >\n            {shape.icon}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"scale\":\"index_scale__7GBXS\",\"item\":\"index_item__EjyQO\",\"value\":\"index_value__oZ-q0\"};","import React, { memo } from \"react\";\nimport { ZoomInIcon, ZoomOutIcon } from \"../icons\";\nimport { getNormalizedZoom } from \"@/util/zoom\";\nimport styles from \"./index.module.less\";\n\nconst ZOOM_STEP = 0.1;\nconst Scale = memo(({ appState, onZoomChange }) => {\n  const zoomValue = `${(appState.zoom.value * 100).toFixed(0)}%`;\n\n  return (\n    <div className={styles.scale}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value - ZOOM_STEP))\n        }\n      >\n        {ZoomOutIcon}\n      </span>\n      <span\n        className={styles.value}\n        onClick={() => onZoomChange(getNormalizedZoom(1))}\n      >\n        {zoomValue}\n      </span>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value + ZOOM_STEP))\n        }\n      >\n        {ZoomInIcon}\n      </span>\n    </div>\n  );\n});\n\nexport default Scale;\n","// extracted by mini-css-extract-plugin\nexport default {\"layer\":\"index_layer__JlGve\",\"ball_red\":\"index_ball_red__Sy41Y\",\"move\":\"index_move__+FZgw\",\"boundceBall\":\"index_boundceBall__4iw92\",\"shadowball\":\"index_shadowball__QeKta\",\"shadowMove\":\"index_shadowMove__4eBWH\"};","import React, { memo } from \"react\";\nimport Tools from \"../tools\";\nimport Scale from \"../scale\";\nimport styles from \"./index.module.less\";\nconst LayerUI = memo(\n  ({ activeTool, onActiveToolChange, appState, onZoomChange }) => {\n    return (\n      <div className={styles.layer}>\n        <Scale appState={appState} onZoomChange={onZoomChange} />\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={onActiveToolChange}\n        />\n        <div className={styles.boundceBall}>\n          <div className={styles.ball_red}></div>\n          <div className={styles.shadowball}></div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default LayerUI;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__b45r1\",\"textarea_copy\":\"index_textarea_copy__REiTG\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache } from \"../../renderer/renderElement\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ staticCanvasRef }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const left = event.clientX - appState.offsetLeft;\n      const top = event.clientY - appState.offsetTop;\n      const styleObj = {\n        font: getFontString(element),\n        left: `${left}px`,\n        top: `${top}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - left;\n      // textarea.style.maxWidth = `${maxWidth}px`;\n      // textarea.style.width = `${element.fontSize}px`;\n      // textarea.style.height = `${element.fontSize * 1.2}px`;\n      Object.assign(textarea.style, {\n        zIndex: 1,\n        maxWidth: `${maxWidth}px`,\n        width: `${element.fontSize}px`,\n        height: `${element.fontSize * 1.2}px`,\n      });\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          // console.log(\"tex5....\", text, text.length);\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              console.log(\"正常的输入\");\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              console.log(\"粘贴进来的文本\");\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              console.log(\"splitResult..\", splitResult);\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            zIndex: -1,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { distance } from \"@/util\";\n// import { isAndroid } from \"@/util/device\";\nimport {\n  withBatchedUpdatesThrottled,\n  viewportCoordsToSceneCoords,\n} from \"@/util\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\nimport generateElements, { animateElements } from \"./generateElement\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport {\n  deleteElementCache,\n  clearElementCache,\n} from \"./renderer/renderElement\";\nimport LayerUI from \"./components/layer-ui\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  zoom: { value: 1 },\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst ZOOM_STEP = 0.1;\n\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const cursorPosition = useRef({});\n  const textareaRef = useRef(null);\n  const rafRef = useRef(null);\n  const globalVarRef = useRef({});\n  const [flag, refreshFlag] = useState(false);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  const [testObj, setTestObj] = useState({ count: \"\", type: \"rectangle\" });\n  const [animate, setAnimate] = useState(false);\n  const animateRef = useRef();\n  const refresh = () => {\n    refreshFlag(!flag);\n  };\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    const updateCurrentCursorPosition = (event) => {\n      cursorPosition.current = {\n        cursorX: event.clientX,\n        cursorY: event.clientY,\n      };\n    };\n    const onTapStart = (e) => {\n      e.preventDefault();\n    };\n    const canvas = canvasRef.current;\n    canvas.addEventListener(\"touchstart\", onTapStart);\n    document.addEventListener(\"mousemove\", updateCurrentCursorPosition);\n    return () => {\n      canvas.removeEventListener(\"touchstart\", onTapStart);\n\n      wrap.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"mousemove\", updateCurrentCursorPosition);\n    };\n  }, []);\n  useEffect(() => {\n    let frame = 0;\n    let startTime = Date.now();\n\n    const loop = () => {\n      const currentTime = Date.now();\n      frame++;\n\n      if (currentTime > 1000 + startTime) {\n        const fps = Math.round((frame * 1000) / (currentTime - startTime));\n        rafRef.current.innerText = `FPS：${fps}`;\n        frame = 0;\n        startTime = currentTime;\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    loop();\n  }, []);\n  const reDrawAfterZoom = () => {\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n    if (globalVarRef.current.zoomTimerId) {\n      clearTimeout(globalVarRef.current.zoomTimerId);\n    }\n    globalVarRef.current.zoomTimerId = setTimeout(() => {\n      clearElementCache();\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    }, 300);\n  };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    // 关于缩放：双指放大时，deltaY是负数，缩小时，deltaY是正数\n    // 缩放，本质上就是对某个点的坐标进行变换\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY); // 只有两种情况，要么+1，要么-1\n      const MAX_STEP = ZOOM_STEP * 100; // 10\n      const absDelta = Math.abs(deltaY);\n      let delta = deltaY;\n      // delta最大为10\n      if (absDelta > MAX_STEP) {\n        delta = MAX_STEP * sign;\n      }\n      let newZoom = appState.zoom.value - delta / 100;\n      newZoom +=\n        Math.log10(Math.max(1, appState.zoom.value)) *\n        -sign *\n        Math.min(1, absDelta / 20);\n      const nextZoom = getNormalizedZoom(newZoom);\n      Object.assign(appState, {\n        ...getStateForZoom(\n          {\n            viewportX: cursorPosition.current.cursorX,\n            viewportY: cursorPosition.current.cursorY,\n            nextZoom: nextZoom,\n          },\n          appState\n        ),\n      });\n      // renderScene(canvasRef.current, appState);\n      refresh();\n      reDrawAfterZoom();\n      return;\n    }\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (!activeTool.type) return;\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n      console.log(\"pointer up appState...\", appState);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    if (activeTool.type) return;\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n        >\n          动态canvas\n        </canvas>\n        <LayerUI\n          activeTool={activeTool}\n          onZoomChange={(zoomVal) => {\n            if (appState.zoom.value === zoomVal) return;\n            Object.assign(appState, {\n              ...getStateForZoom(\n                {\n                  viewportX: appState.canvasWidth / 2 + appState.offsetLeft,\n                  viewportY: appState.canvasHeight / 2 + appState.offsetTop,\n                  nextZoom: zoomVal,\n                },\n                appState\n              ),\n            });\n            refresh();\n            reDrawAfterZoom();\n          }}\n          appState={{ ...appState }}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} staticCanvasRef={staticCanvasRef} />\n      </div>\n      <div>\n        <span ref={rafRef}>FPS：--</span>\n        <span className=\"total\" id=\"canvas-total\"></span>\n      </div>\n      <div className=\"row\">\n        <input\n          type=\"number\"\n          value={testObj.count}\n          onChange={(e) => setTestObj({ ...testObj, count: e.target.value })}\n        />\n        <select\n          value={testObj.type}\n          onChange={(e) => setTestObj({ ...testObj, type: e.target.value })}\n        >\n          <option value=\"freedraw\">freedraw</option>\n          <option value=\"rectangle\">rectangle</option>\n          <option value=\"text\">text</option>\n        </select>\n        <button\n          onClick={() => {\n            const elements = generateElements(\n              Number(testObj.count),\n              testObj.type,\n              appState\n            );\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              ...elements,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n          }}\n        >\n          生成\n        </button>\n        <button\n          onClick={() => {\n            setAnimate(!animate);\n            if (animateRef.current) {\n              cancelAnimationFrame(animateRef.current);\n            }\n            if (animate) return;\n            let diffTime = 100;\n            let lastDate = Date.now();\n            const tick = () => {\n              const currentDate = Date.now();\n              if (currentDate - lastDate >= diffTime) {\n                lastDate = currentDate;\n                const elements = animateElements(\n                  scene.getElementsIncludingDeleted(),\n                  appState\n                );\n                renderScene({\n                  elements: elements,\n                  appState: appState,\n                  scale: window.devicePixelRatio,\n                  canvas: staticCanvasRef.current,\n                  renderConfig: {\n                    selectionColor: \"#6965db\",\n                    scrollX: appState.scrollX,\n                    scrollY: appState.scrollY,\n                    viewBackgroundColor: \"#ffffff\",\n                    zoom: appState.zoom,\n                  },\n                });\n              }\n\n              animateRef.current = requestAnimationFrame(tick);\n            };\n            animateRef.current = requestAnimationFrame(tick);\n          }}\n        >\n          {animate ? \"停止动画\" : \"动画\"}\n        </button>\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nlet elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = new WeakMap();\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  if (prevElementWithCanvas) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n\n  elementWithCanvasCache.set(element, elementWithCanvas);\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    // rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  // rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value\n  );\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\nimport { getElementBounds, viewportCoordsToSceneCoords } from \"@/util\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (\n    let i = 1;\n    i < (canvas.height - scrollY * zoom.value) / (rectH * zoom.value);\n    i++\n  ) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (\n    let i = 1;\n    i < (canvas.width - scrollX * zoom.value) / (rectW * zoom.value);\n    i++\n  ) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  canvasWidth: number,\n  canvasHeight: number,\n  viewTransformations: {\n    zoom: Zoom,\n    offsetLeft: number,\n    offsetTop: number,\n    scrollX: number,\n    scrollY: number,\n  }\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  drawAxis(context, renderConfig);\n\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(element, normalizedCanvasWidth, normalizedCanvasHeight, {\n      zoom: renderConfig.zoom,\n      offsetLeft: appState.offsetLeft,\n      offsetTop: appState.offsetTop,\n      scrollX: renderConfig.scrollX,\n      scrollY: renderConfig.scrollY,\n    })\n  );\n  const total = document.getElementById('canvas-total')\n  total.innerText = `总元素数：${elements.length}   可见区域内元素：${visibleElements.length}`\n  visibleElements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","import { getCommonBounds, distance } from \"./index\";\nimport { renderScene } from '@/pages/canvas/renderer/renderScene'\nconst getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const exportPng = ({ elements, appState }) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  console.log(\"export...\", minX, minY, width, height);\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  // const context = canvas.getContext(\"2d\");\n  // context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: 1,\n    },\n  });\n  console.log(\"导出\", elements);\n  var a = document.createElement(\"a\");\n  a.href = canvas.toDataURL();\n  a.download = \"canvas.png\";\n  a.click();\n};\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\nwindow.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n","const MIN_ZOOM = 0.1;\n\nexport const getNormalizedZoom = (zoom) => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30));\n};\n\nexport const getStateForZoom = (\n  { viewportX, viewportY, nextZoom },\n  appState\n) => {\n  const screenX = viewportX - appState.offsetLeft;\n  const screenY = viewportY - appState.offsetTop;\n  const currentZoom = appState.zoom.value;\n\n  return {\n    scrollX: appState.scrollX + screenX / nextZoom - screenX / currentZoom,\n    scrollY: appState.scrollY + screenY / nextZoom - screenY / currentZoom,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n"],"names":["newElement","type","x","y","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","rest","id","randomId","isDeleted","createElement","elementType","pointerDownState","appState","origin","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","getRandomValue","n","m","Number","Math","random","toFixed","count","element","elements","console","log","i","scrollX","canvasWidth","scrollY","canvasHeight","abs","push","createIcon","d","opts","style","mirror","focusable","role","viewBox","fill","RectangleIcon","stroke","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","modifiedTablerIconProps","ZoomInIcon","ZoomOutIcon","Scene","JSON","parse","localStorage","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","join","onClick","exportPng","getElementsIncludingDeleted","map","shape","isSelected","Scale","onZoomChange","zoomValue","zoom","value","getNormalizedZoom","LayerUI","Index","forwardRef","ref","staticCanvasRef","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","event","preventDefault","stopPropagation","viewportCoordsToSceneCoords","sceneX","sceneY","text","fontSize","fontFamily","textAlign","verticalAlign","originalText","draggingElement","textarea","current","focus","left","clientX","offsetLeft","top","clientY","offsetTop","styleObj","font","getFontString","opacity","color","Object","assign","copyTextarea","document","getElementById","maxWidth","zIndex","onChange","e","target","parseFloat","innerText","copyTextWidth","getBoundingClientRect","slice","length","lines","split","splitResult","forEach","line","lastIdx","str","onBlur","offsetWidth","offsetHeight","deleteElementCache","replaceAllElements","renderScene","scale","window","devicePixelRatio","canvas","renderConfig","selectionColor","viewBackgroundColor","setTimeout","background","contentEditable","Canvas","canvasRef","canvasContainer","cursorPosition","rafRef","globalVarRef","flag","refreshFlag","setActiveTool","testObj","setTestObj","animate","setAnimate","animateRef","refresh","useEffect","setCanvasSize","wrap","handleWheel","addEventListener","passive","updateCurrentCursorPosition","cursorX","cursorY","onTapStart","removeEventListener","frame","startTime","Date","now","loop","currentTime","fps","round","requestAnimationFrame","reDrawAfterZoom","zoomTimerId","clearTimeout","clearElementCache","onPointerMoveFromCanvasPointerDownHandler","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","originY","distance","newX","newY","onPointerUpFromCanvasPointerDownHandler","getContext","clearRect","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","onWheel","deltaX","deltaY","metaKey","ctrlKey","sign","absDelta","delta","ZOOM_STEP","newZoom","log10","max","min","nextZoom","getStateForZoom","viewportX","viewportY","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","zoomVal","generateElements","cancelAnimationFrame","lastDate","tick","currentDate","el","animateElements","renderElement","context","elementWithCanvas","generateElementWithCanvas","drawElementFromCanvas","elementWithCanvasCache","WeakMap","delete","prevElementWithCanvas","get","generateElementCanvas","set","rightContainer","padding","getCanvasPadding","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","translate","save","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","lineJoin","lineCap","lineWidth","strokeRect","lineHeight","textBaseline","index","fillText","point","lineTo","moveTo","cx","cy","drawImage","normalizedCanvasWidth","normalizedCanvasHeight","ctx","rectH","rectW","beginPath","drawAxis","visibleElements","filter","viewTransformations","getElementBounds","topLeftSceneCoords","bottomRightSceneCoords","isVisibleElement","setItem","stringify","exportPadding","getCommonBounds","minX","minY","maxX","maxY","getCanvasSize","a","href","toDataURL","download","click","r","floor","g","b","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","ret","trailing","flush","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","p","rotate","cos","sin","x11","y11","x12","y12","x22","y22","x21","y21","testIdBase","__generateExcalidrawElements","ele","xs","ys","getSizeFromPoints","roughness","groupIds","roundness","seed","version","versionNonce","boundElements","updated","link","locked","pressures","simulatePressure","lastCommittedPoint","screenX","screenY","currentZoom"],"sourceRoot":""}