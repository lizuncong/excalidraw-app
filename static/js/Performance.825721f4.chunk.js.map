{"version":3,"file":"static/js/Performance.825721f4.chunk.js","mappings":"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","sources":["pages/performance/base/element/newElement.js","pages/performance/base/generateElement.js","pages/performance/base/renderer/renderElement.js","pages/performance/base/renderer/renderScene.js","pages/performance/base/useGesture.js","webpack://excalidraw-app/./src/pages/performance/base/components/tools/index.module.less?5e13","pages/performance/base/components/icons/index.jsx","pages/performance/base/scene/scene.js","pages/performance/base/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/performance/base/components/scale/index.module.less?69ac","pages/performance/base/components/scale/index.jsx","webpack://excalidraw-app/./src/pages/performance/base/components/layer-ui/index.module.less?0ce2","pages/performance/base/components/layer-ui/index.jsx","webpack://excalidraw-app/./src/pages/performance/base/components/textarea/index.module.less?a91f","pages/performance/base/components/textarea/index.jsx","pages/performance/base/index.jsx","util/export.js","util/gesture.js","util/index.js","util/zoom.js"],"sourcesContent":["import { randomId } from \"@/util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n  ...rest\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n    ...rest,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = newElement({\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    originalText: opts.text,\n    ...opts,\n  });\n\n  return textElement;\n};\n","import { createElement, newTextElement } from \"./element/newElement\";\nimport { rgb } from \"@/util\";\n\nconst getRandomValue = (n, m) => {\n  return Number((Math.random() * (m - n) + n).toFixed(5));\n};\nconst generateElements = (count, type, appState) => {\n  const elements = [];\n  let element;\n  for (let i = 0; i < count; i++) {\n    let x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    let y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    element = createElement({\n      elementType: type,\n      pointerDownState: {\n        origin: {\n          x,\n          y,\n        },\n      },\n      appState,\n    });\n    if (type === \"rectangle\") {\n      const width =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollX - x,\n            appState.canvasWidth - appState.scrollX - x\n          )\n        ) + 2;\n      const height =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollY - y,\n            appState.canvasHeight - appState.scrollY - y\n          )\n        ) + 2;\n      element.width = width;\n      element.height = height;\n    } else if (type === \"freedraw\") {\n      const pointsNum = getRandomValue(20, 100);\n      for (let i = 0; i < pointsNum; i++) {\n        x = getRandomValue(x, x + 10);\n        y = getRandomValue(y, y + 10);\n        element.points.push([x, y]);\n      }\n    } else if (type === \"text\") {\n      const text = `${x}, ${y}`;\n      element = newTextElement({\n        x,\n        y,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text,\n        width: text.length * 20,\n        height: 25,\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n    }\n\n    elements.push(element);\n  }\n\n  return elements;\n};\n\nexport const animateElements = (elements, appState) => {\n  elements.forEach((el) => {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    el.x = x;\n    el.y = y;\n  });\n  return elements;\n};\nexport default generateElements;\n","import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nlet elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = new WeakMap();\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  // 导出图片时，默认zoom为1，因此这里加个notusecache配置重新生成canvas\n  if (prevElementWithCanvas && !renderConfig.notUseCache) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n  if (!renderConfig.notUseCache) {\n    elementWithCanvasCache.set(element, elementWithCanvas);\n  }\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    // rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  // rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value\n  );\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\nimport { getElementBounds, viewportCoordsToSceneCoords } from \"@/util\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (\n    let i = 1;\n    i < (canvas.height - scrollY * zoom.value) / (rectH * zoom.value);\n    i++\n  ) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (\n    let i = 1;\n    i < (canvas.width - scrollX * zoom.value) / (rectW * zoom.value);\n    i++\n  ) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nconst isVisibleElement = (\n  element,\n  canvasWidth,\n  canvasHeight,\n  viewTransformations\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  drawAxis(context, renderConfig);\n\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(element, normalizedCanvasWidth, normalizedCanvasHeight, {\n      zoom: renderConfig.zoom,\n      offsetLeft: appState.offsetLeft,\n      offsetTop: appState.offsetTop,\n      scrollX: renderConfig.scrollX,\n      scrollY: renderConfig.scrollY,\n    })\n  );\n  const total = document.getElementById(\"canvas-total\");\n  total.innerText = `总元素数：${elements.length}   实际绘制元素总数：${visibleElements.length}`;\n\n  visibleElements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","import { useEffect } from \"react\";\nimport { getCenter, getDistance } from \"@/util/gesture\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\n\nconst gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nexport const useGesture = (canvasRef, appState) => {\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const onTouchEnd = (event) => {\n      if (!event.touches.length) {\n        gesture.pointers.clear();\n      }\n    };\n    canvas.addEventListener(\"touchend\", onTouchEnd);\n    return () => {\n      canvas.removeEventListener(\"touchend\", onTouchEnd);\n    };\n  }, [canvasRef]);\n  const removePointer = (event) => {\n    gesture.pointers.delete(event.pointerId);\n  };\n  const updateGestureOnPointerDown = (event) => {\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = appState.zoom.value;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values())\n      );\n    }\n  };\n  const handleCanvasPointerMove = (event, callback) => {\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n    const initialScale = gesture.initialScale;\n\n    if (\n      gesture.pointers.size === 2 &&\n      gesture.lastCenter &&\n      initialScale &&\n      gesture.initialDistance\n    ) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter.x;\n      const deltaY = center.y - gesture.lastCenter.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor = distance / gesture.initialDistance;\n\n      const nextZoom = scaleFactor\n        ? getNormalizedZoom(initialScale * scaleFactor)\n        : appState.zoom.value;\n      const zoomState = getStateForZoom(\n        {\n          viewportX: center.x,\n          viewportY: center.y,\n          nextZoom,\n        },\n        appState\n      );\n      Object.assign(appState, {\n        zoom: zoomState.zoom,\n        scrollX: zoomState.scrollX + deltaX / nextZoom,\n        scrollY: zoomState.scrollY + deltaY / nextZoom,\n      });\n      callback();\n    } else {\n      gesture.lastCenter =\n        gesture.initialDistance =\n        gesture.initialScale =\n          null;\n    }\n  };\n  return {\n    gesture,\n    removePointer,\n    updateGestureOnPointerDown,\n    handleCanvasPointerMove,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__s6KrP\",\"item\":\"index_item__vsrIH\",\"selected\":\"index_selected__MvMy8\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps\n);\n\nconst modifiedTablerIconProps = {\n  width: 20,\n  height: 20,\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const ZoomInIcon = createIcon(\n  <path strokeWidth=\"1.25\" d=\"M10 4.167v11.666M4.167 10h11.666\" />,\n  modifiedTablerIconProps\n);\n\nexport const ZoomOutIcon = createIcon(\n  <path d=\"M5 10h10\" strokeWidth=\"1.25\" />,\n  modifiedTablerIconProps\n);\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() => {\n          exportPng({\n            renderScene,\n            elements: scene.getElementsIncludingDeleted(),\n            appState,\n          });\n        }}\n      >\n        {ExportImageIcon}\n      </span>\n      {SHAPES.map((shape) => {\n        const isSelected = activeTool.type === shape.type;\n        return (\n          <span\n            key={shape.type}\n            className={[styles.item, isSelected && styles.selected].join(\" \")}\n            onClick={() =>\n              onActiveToolChange({ type: isSelected ? \"\" : shape.type })\n            }\n          >\n            {shape.icon}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"scale\":\"index_scale__sOKAE\",\"item\":\"index_item__HDT6B\",\"value\":\"index_value__8EooG\"};","import React, { memo } from \"react\";\nimport { ZoomInIcon, ZoomOutIcon } from \"../icons\";\nimport { getNormalizedZoom } from \"@/util/zoom\";\nimport styles from \"./index.module.less\";\n\nconst ZOOM_STEP = 0.1;\nconst Scale = memo(({ appState, onZoomChange }) => {\n  const zoomValue = `${(appState.zoom.value * 100).toFixed(0)}%`;\n\n  return (\n    <div className={styles.scale}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value - ZOOM_STEP))\n        }\n      >\n        {ZoomOutIcon}\n      </span>\n      <span\n        className={styles.value}\n        onClick={() => onZoomChange(getNormalizedZoom(1))}\n      >\n        {zoomValue}\n      </span>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value + ZOOM_STEP))\n        }\n      >\n        {ZoomInIcon}\n      </span>\n    </div>\n  );\n});\n\nexport default Scale;\n","// extracted by mini-css-extract-plugin\nexport default {\"layer\":\"index_layer__nJPgb\",\"ball_red\":\"index_ball_red__73uwO\",\"move\":\"index_move__ri8N6\",\"boundceBall\":\"index_boundceBall__9vrZQ\",\"shadowball\":\"index_shadowball__tqUrD\",\"shadowMove\":\"index_shadowMove__868Rg\"};","import React, { memo } from \"react\";\nimport Tools from \"../tools\";\nimport Scale from \"../scale\";\nimport styles from \"./index.module.less\";\nconst LayerUI = memo(\n  ({ activeTool, onActiveToolChange, appState, onZoomChange }) => {\n    return (\n      <div className={styles.layer}>\n        <Scale appState={appState} onZoomChange={onZoomChange} />\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={onActiveToolChange}\n        />\n        <div className={styles.boundceBall}>\n          <div className={styles.ball_red}></div>\n          <div className={styles.shadowball}></div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default LayerUI;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__1YEM8\",\"textarea_copy\":\"index_textarea_copy__7s0wP\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache } from \"../../renderer/renderElement\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\nimport { renderScene } from \"../../renderer/renderScene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ staticCanvasRef }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const left = event.clientX - appState.offsetLeft;\n      const top = event.clientY - appState.offsetTop;\n      const styleObj = {\n        font: getFontString(element),\n        left: `${left}px`,\n        top: `${top}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - left;\n      // textarea.style.maxWidth = `${maxWidth}px`;\n      // textarea.style.width = `${element.fontSize}px`;\n      // textarea.style.height = `${element.fontSize * 1.2}px`;\n      Object.assign(textarea.style, {\n        zIndex: 1,\n        maxWidth: `${maxWidth}px`,\n        width: `${element.fontSize}px`,\n        height: `${element.fontSize * 1.2}px`,\n      });\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            zIndex: -1,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { distance } from \"@/util\";\n// import { isAndroid } from \"@/util/device\";\nimport {\n  withBatchedUpdatesThrottled,\n  viewportCoordsToSceneCoords,\n} from \"@/util\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\nimport generateElements, { animateElements } from \"./generateElement\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer/renderScene\";\nimport { useGesture } from \"./useGesture\";\nimport {\n  deleteElementCache,\n  clearElementCache,\n} from \"./renderer/renderElement\";\nimport LayerUI from \"./components/layer-ui\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  zoom: { value: 1 },\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst ZOOM_STEP = 0.1;\n\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const cursorPosition = useRef({});\n  const textareaRef = useRef(null);\n  const rafRef = useRef(null);\n  const globalVarRef = useRef({});\n  const [flag, refreshFlag] = useState(false);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  const [testObj, setTestObj] = useState({ count: \"\", type: \"rectangle\" });\n  const [animate, setAnimate] = useState(false);\n  const animateRef = useRef();\n  const refresh = () => {\n    refreshFlag(!flag);\n  };\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    const updateCurrentCursorPosition = (event) => {\n      cursorPosition.current = {\n        cursorX: event.clientX,\n        cursorY: event.clientY,\n      };\n    };\n    const onTapStart = (e) => {\n      e.preventDefault();\n    };\n    const canvas = canvasRef.current;\n    canvas.addEventListener(\"touchstart\", onTapStart);\n    document.addEventListener(\"mousemove\", updateCurrentCursorPosition);\n    return () => {\n      canvas.removeEventListener(\"touchstart\", onTapStart);\n\n      wrap.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"mousemove\", updateCurrentCursorPosition);\n    };\n  }, []);\n  useEffect(() => {\n    let frame = 0;\n    let startTime = Date.now();\n\n    const loop = () => {\n      const currentTime = Date.now();\n      frame++;\n\n      if (currentTime > 1000 + startTime) {\n        const fps = Math.round((frame * 1000) / (currentTime - startTime));\n        rafRef.current.innerText = `FPS：${fps}`;\n        frame = 0;\n        startTime = currentTime;\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    loop();\n  }, []);\n  const {\n    updateGestureOnPointerDown,\n    handleCanvasPointerMove,\n    removePointer,\n    gesture,\n  } = useGesture(canvasRef, appState);\n  const reDrawAfterZoom = () => {\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n    if (globalVarRef.current.zoomTimerId) {\n      clearTimeout(globalVarRef.current.zoomTimerId);\n    }\n    globalVarRef.current.zoomTimerId = setTimeout(() => {\n      clearElementCache();\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    }, 300);\n  };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    // 关于缩放：双指放大时，deltaY是负数，缩小时，deltaY是正数\n    // 缩放，本质上就是对某个点的坐标进行变换\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY); // 只有两种情况，要么+1，要么-1\n      const MAX_STEP = ZOOM_STEP * 100; // 10\n      const absDelta = Math.abs(deltaY);\n      let delta = deltaY;\n      // delta最大为10\n      if (absDelta > MAX_STEP) {\n        delta = MAX_STEP * sign;\n      }\n      let newZoom = appState.zoom.value - delta / 100;\n      newZoom +=\n        Math.log10(Math.max(1, appState.zoom.value)) *\n        -sign *\n        Math.min(1, absDelta / 20);\n      const nextZoom = getNormalizedZoom(newZoom);\n      Object.assign(appState, {\n        ...getStateForZoom(\n          {\n            viewportX: cursorPosition.current.cursorX,\n            viewportY: cursorPosition.current.cursorY,\n            nextZoom: nextZoom,\n          },\n          appState\n        ),\n      });\n      // renderScene(canvasRef.current, appState);\n      refresh();\n      reDrawAfterZoom();\n      return;\n    }\n    appState.scrollX = appState.scrollX - deltaX / appState.zoom.value;\n    appState.scrollY = appState.scrollY - deltaY / appState.zoom.value;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n    if (!activeTool.type) {\n      updateGestureOnPointerDown(event);\n      return;\n    }\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      // 在移动过程中，先在顶层canvas绘制\n      renderScene({\n        elements: [appState.draggingElement],\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: canvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      removePointer(event);\n      scene.replaceAllElements([\n        ...scene.getElementsIncludingDeleted(),\n        appState.draggingElement,\n      ]);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    if (activeTool.type) return;\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div className=\"performance-base\" ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <canvas ref={staticCanvasRef} className=\"canvas\">\n          静态canvas\n        </canvas>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n          onPointerCancel={removePointer}\n          onPointerMove={(event) => {\n            handleCanvasPointerMove(event, () => {\n              refresh();\n              reDrawAfterZoom();\n            });\n          }}\n        >\n          动态canvas\n        </canvas>\n        <LayerUI\n          activeTool={activeTool}\n          onZoomChange={(zoomVal) => {\n            if (appState.zoom.value === zoomVal) return;\n            Object.assign(appState, {\n              ...getStateForZoom(\n                {\n                  viewportX: appState.canvasWidth / 2 + appState.offsetLeft,\n                  viewportY: appState.canvasHeight / 2 + appState.offsetTop,\n                  nextZoom: zoomVal,\n                },\n                appState\n              ),\n            });\n            refresh();\n            reDrawAfterZoom();\n          }}\n          appState={{ ...appState }}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} staticCanvasRef={staticCanvasRef} />\n      </div>\n      <div>\n        <span ref={rafRef}>FPS：--</span>\n        <span className=\"total\" id=\"canvas-total\"></span>\n      </div>\n      <div className=\"row\">\n        <input\n          type=\"number\"\n          value={testObj.count}\n          onChange={(e) => setTestObj({ ...testObj, count: e.target.value })}\n        />\n        <select\n          value={testObj.type}\n          onChange={(e) => setTestObj({ ...testObj, type: e.target.value })}\n        >\n          <option value=\"freedraw\">freedraw</option>\n          <option value=\"rectangle\">rectangle</option>\n          <option value=\"text\">text</option>\n        </select>\n        <button\n          onClick={() => {\n            const elements = generateElements(\n              Number(testObj.count),\n              testObj.type,\n              appState\n            );\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              ...elements,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n          }}\n        >\n          生成\n        </button>\n        <button\n          onClick={() => {\n            setAnimate(!animate);\n            if (animateRef.current) {\n              cancelAnimationFrame(animateRef.current);\n            }\n            if (animate) return;\n            let diffTime = 100;\n            let lastDate = Date.now();\n            const tick = () => {\n              const currentDate = Date.now();\n              if (currentDate - lastDate >= diffTime) {\n                lastDate = currentDate;\n                const elements = animateElements(\n                  scene.getElementsIncludingDeleted(),\n                  appState\n                );\n                renderScene({\n                  elements: elements,\n                  appState: appState,\n                  scale: window.devicePixelRatio,\n                  canvas: staticCanvasRef.current,\n                  renderConfig: {\n                    selectionColor: \"#6965db\",\n                    scrollX: appState.scrollX,\n                    scrollY: appState.scrollY,\n                    viewBackgroundColor: \"#ffffff\",\n                    zoom: appState.zoom,\n                  },\n                });\n              }\n\n              animateRef.current = requestAnimationFrame(tick);\n            };\n            animateRef.current = requestAnimationFrame(tick);\n          }}\n        >\n          {animate ? \"停止动画\" : \"动画\"}\n        </button>\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { getCommonBounds, distance } from \"./index\";\nexport const getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const canvasToDataURL = ({\n  renderScene,\n  isExport,\n  notUseCache,\n  elements,\n  appState,\n}) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: { value: 1 },\n      isExport,\n      notUseCache,\n    },\n  });\n\n  return canvas.toDataURL();\n};\nexport const exportPng = ({\n  renderScene,\n  isExport = true,\n  notUseCache = true,\n  elements,\n  appState,\n}) => {\n  const dataUrl = canvasToDataURL({\n    renderScene,\n    isExport,\n    notUseCache,\n    elements,\n    appState,\n  });\n  var a = document.createElement(\"a\");\n  a.href = dataUrl;\n  a.download = \"canvas.png\";\n  a.click();\n};\n","export const getCenter = (pointers) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: sum(allCoords, (coords) => coords.x) / allCoords.length,\n    y: sum(allCoords, (coords) => coords.y) / allCoords.length,\n  };\n};\n\nexport const getDistance = ([a, b]) => Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = (array, mapper) =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\n// for worker\n// window.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n","const MIN_ZOOM = 0.1;\n\nexport const getNormalizedZoom = (zoom) => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30));\n};\n\nexport const getStateForZoom = (\n  { viewportX, viewportY, nextZoom },\n  appState\n) => {\n  const screenX = viewportX - appState.offsetLeft;\n  const screenY = viewportY - appState.offsetTop;\n  const currentZoom = appState.zoom.value;\n\n  return {\n    scrollX: appState.scrollX + screenX / nextZoom - screenX / currentZoom,\n    scrollY: appState.scrollY + screenY / nextZoom - screenY / currentZoom,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n"],"names":["newElement","type","x","y","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","rest","id","randomId","isDeleted","createElement","elementType","pointerDownState","appState","origin","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","newTextElement","opts","text","fontSize","fontFamily","textAlign","verticalAlign","originalText","getRandomValue","n","m","Number","Math","random","toFixed","count","element","elements","i","scrollX","canvasWidth","scrollY","canvasHeight","abs","pointsNum","push","length","elementWithCanvasCache","WeakMap","deleteElementCache","delete","generateElementWithCanvas","renderConfig","prevElementWithCanvas","get","notUseCache","elementWithCanvas","generateElementCanvas","zoom","set","rightContainer","document","getElementById","canvas","context","getContext","padding","getCanvasPadding","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","distance","window","devicePixelRatio","value","translate","save","scale","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeRect","font","getFontString","lines","split","lineHeight","textBaseline","index","fillText","forEach","point","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","renderScene","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","rectH","rectW","beginPath","drawAxis","visibleElements","filter","viewTransformations","getElementBounds","topLeftSceneCoords","viewportCoordsToSceneCoords","clientX","offsetLeft","clientY","offsetTop","bottomRightSceneCoords","isVisibleElement","innerText","renderElement","localStorage","setItem","JSON","stringify","gesture","pointers","Map","lastCenter","initialDistance","initialScale","useGesture","canvasRef","useEffect","current","onTouchEnd","event","touches","clear","addEventListener","removeEventListener","removePointer","pointerId","updateGestureOnPointerDown","size","getCenter","getDistance","Array","from","values","handleCanvasPointerMove","callback","has","center","deltaX","deltaY","scaleFactor","nextZoom","getNormalizedZoom","zoomState","getStateForZoom","viewportX","viewportY","Object","assign","createIcon","d","style","mirror","focusable","role","viewBox","fill","RectangleIcon","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","modifiedTablerIconProps","ZoomInIcon","ZoomOutIcon","Scene","parse","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","join","onClick","exportPng","getElementsIncludingDeleted","map","shape","isSelected","Scale","onZoomChange","zoomValue","LayerUI","Index","forwardRef","ref","staticCanvasRef","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","preventDefault","stopPropagation","sceneX","sceneY","draggingElement","textarea","focus","left","top","styleObj","color","copyTextarea","maxWidth","zIndex","onChange","e","target","parseFloat","copyTextWidth","getBoundingClientRect","slice","splitResult","line","lastIdx","str","onBlur","offsetWidth","offsetHeight","replaceAllElements","selectionColor","viewBackgroundColor","setTimeout","background","contentEditable","Canvas","canvasContainer","cursorPosition","rafRef","globalVarRef","flag","refreshFlag","setActiveTool","testObj","setTestObj","animate","setAnimate","animateRef","refresh","setCanvasSize","wrap","handleWheel","passive","updateCurrentCursorPosition","cursorX","cursorY","onTapStart","frame","startTime","Date","now","loop","currentTime","fps","round","requestAnimationFrame","reDrawAfterZoom","zoomTimerId","clearTimeout","onPointerMoveFromCanvasPointerDownHandler","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","onWheel","metaKey","ctrlKey","sign","absDelta","delta","ZOOM_STEP","newZoom","log10","max","min","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","onPointerCancel","zoomVal","generateElements","cancelAnimationFrame","lastDate","tick","currentDate","el","animateElements","getCanvasSize","exportPadding","getCommonBounds","minX","minY","maxX","maxY","isExport","dataUrl","toDataURL","canvasToDataURL","a","href","download","click","allCoords","sum","coords","b","hypot","array","mapper","reduce","acc","item","r","floor","g","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","ret","trailing","flush","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","p","rotate","cos","sin","x11","y11","x12","y12","x22","y22","x21","y21","testIdBase","screenX","screenY","currentZoom"],"sourceRoot":""}