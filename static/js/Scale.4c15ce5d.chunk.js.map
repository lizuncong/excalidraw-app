{"version":3,"file":"static/js/Scale.4c15ce5d.chunk.js","mappings":"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","sources":["pages/scale/renderScene.js","pages/scale/index.jsx"],"sourcesContent":["import { elements } from \"./index\";\nconst drawAxis = (ctx, { scrollX, scrollY }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.translate(scrollX, scrollY);\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴\n  ctx.save();\n  ctx.beginPath();\n  ctx.setLineDash([10, 10]);\n  ctx.moveTo(0, -scrollY);\n  ctx.lineTo(0, canvas.height - scrollY);\n  ctx.moveTo(-scrollX, 0);\n  ctx.lineTo(canvas.width - scrollX, 0);\n  ctx.stroke();\n  ctx.restore();\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴负数刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(-i, -25, -i * rectH);\n  }\n  for (let i = 0; i < (canvas.height - scrollY) / rectH; i++) {\n    // 绘制纵轴正数刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(i, -25, i * rectH);\n  }\n  for (let i = 1; i < scrollX / rectW; i++) {\n    // 绘制横轴负数刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(-i, -i * rectW - 10, -15);\n  }\n  for (let i = 1; i < (canvas.width - scrollX) / rectW; i++) {\n    // 绘制横轴正数刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"20px Arial\";\n    ctx.fillText(i, i * rectW - 5, -15);\n  }\n  ctx.stroke();\n\n  ctx.restore();\n};\nconst renderElements = (ctx, appState) => {\n  elements.forEach((ele) => {\n    ctx.save();\n    ctx.translate(ele.x + appState.scrollX , ele.y + appState.scrollY);\n    ctx.strokeStyle = ele.strokeStyle;\n    ctx.strokeColor = ele.strokeColor;\n    ctx.strokeRect(0, 0, ele.width, ele.height);\n    ctx.restore();\n  });\n};\nconst renderScene = (canvas, appState) => {\n  const context = canvas.getContext(\"2d\");\n  context.clearRect(0,0,canvas.width, canvas.height)\n  drawAxis(context, appState);\n  renderElements(context, appState)\n};\n\nexport default renderScene;\n","import React, { memo, useRef, useEffect } from \"react\";\n// import MarkDown from \"@/components/markdown\";\n// import doc from \"../../../doc/canvas进阶/绘制矩形及无限画布.md\";\nimport renderScene from \"./renderScene\";\nimport \"./index.less\";\nconst appState = {\n  offsetLeft: 0,\n  offsetTop: 0,\n  scrollX: 0,\n  scrollY: 0,\n  draggingElement: null,\n};\nexport const elements = [];\nconst viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = clientX - offsetLeft - scrollX;\n  const y = clientY - offsetTop - scrollY;\n  return { x, y };\n};\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n\n  useEffect(() => {\n    const render = () => {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      const { offsetWidth, offsetHeight, offsetLeft, offsetTop } = canvas;\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n      context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n      appState.offsetLeft = offsetLeft;\n      appState.offsetTop = offsetTop;\n      renderScene(canvas, appState);\n    };\n    render();\n    const resize = () => {\n      render();\n    };\n    window.addEventListener(\"resize\", resize);\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasPointerDown = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    console.log(\"origin...\", appState, origin);\n    const pointerDownState = {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n      },\n    };\n    const element = {\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      width: 0,\n      height: 0,\n      strokeColor: \"#000000\",\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n    };\n    appState.draggingElement = element;\n    elements.push(element);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n  const onPointerMoveFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      // maybeDragNewGenericElement(pointerDownState, event);\n      appState.draggingElement.width =\n        pointerCoords.x - pointerDownState.origin.x;\n      appState.draggingElement.height =\n        pointerCoords.y - pointerDownState.origin.y;\n      renderScene(canvasRef.current, appState);\n    };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n    console.log(`滚动距离，X：${appState.scrollX}, Y：${appState.scrollY}`);\n    renderScene(canvasRef.current, appState);\n  };\n  return (\n    <div className=\"infinite-canvas\">\n      <div ref={canvasContainer}>\n        <canvas\n          ref={canvasRef}\n          className=\"canvas\"\n          onPointerDown={handleCanvasPointerDown}\n          onWheel={handleCanvasWheel}\n        >\n          绘制canvas\n        </canvas>\n      </div>\n      <div>\n        <button\n          onClick={() => {\n            let minX = Infinity;\n            let maxX = -Infinity;\n            let minY = Infinity;\n            let maxY = -Infinity;\n\n            elements.forEach((element) => {\n              const [x1, y1, x2, y2] = [\n                element.x,\n                element.y,\n                element.x + element.width,\n                element.y + element.height,\n              ];\n              minX = Math.min(minX, x1);\n              minY = Math.min(minY, y1);\n              maxX = Math.max(maxX, x2);\n              maxY = Math.max(maxY, y2);\n            });\n\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = (maxX - minX + 20) * window.devicePixelRatio;\n            canvas.height = (maxY - minY + 20) * window.devicePixelRatio;\n            const context = canvas.getContext(\"2d\");\n            context.scale(window.devicePixelRatio, window.devicePixelRatio);\n            renderScene(canvas, {\n              ...appState,\n              scrollX: -minX + 10,\n              scrollY: -minY + 10,\n            });\n            console.log(\"导出\", elements);\n            var a = document.createElement(\"a\");\n            a.href = canvas.toDataURL();\n            a.download = \"canvas.png\";\n            a.click();\n          }}\n        >\n          导出PNG\n        </button>\n      </div>\n      {/* <div className=\"tip\">温馨提示：可以在上面的画板中绘制矩形哦！！</div> */}\n      {/* <MarkDown src={doc} /> */}\n    </div>\n  );\n});\n\nexport default Canvas;\n"],"names":["canvas","appState","context","getContext","clearRect","width","height","ctx","scrollX","scrollY","save","rectH","rectW","translate","strokeStyle","fillStyle","beginPath","setLineDash","moveTo","lineTo","stroke","restore","lineWidth","textBaseline","i","font","fillText","drawAxis","elements","ele","x","y","strokeColor","strokeRect","renderElements","offsetLeft","offsetTop","draggingElement","viewportCoordsToSceneCoords","clientX","clientY","memo","canvasRef","useRef","canvasContainer","useEffect","render","current","offsetWidth","offsetHeight","window","devicePixelRatio","scale","renderScene","resize","addEventListener","removeEventListener","wrap","handleWheel","e","preventDefault","passive","onPointerUpFromCanvasPointerDownHandler","pointerDownState","event","eventListeners","onMove","onUp","onPointerMoveFromCanvasPointerDownHandler","pointerCoords","lastCoords","origin","className","ref","onPointerDown","console","log","element","backgroundColor","strokeWidth","push","onPointerMove","onPointerUp","onWheel","deltaX","deltaY","onClick","minX","Infinity","maxX","minY","maxY","forEach","x1","y1","x2","y2","Math","min","max","document","createElement","a","href","toDataURL","download","click"],"sourceRoot":""}