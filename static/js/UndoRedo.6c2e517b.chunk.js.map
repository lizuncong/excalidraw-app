{"version":3,"file":"static/js/UndoRedo.6c2e517b.chunk.js","mappings":"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","sources":["webpack://excalidraw-app/./src/pages/undo-redo/index.module.less?579f","pages/undo-redo/renderScene.js","pages/undo-redo/History/utils.js","pages/undo-redo/History/index.js","pages/undo-redo/index.jsx","util/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"undoRedo\":\"index_undoRedo__mOw1J\",\"canvas\":\"index_canvas__s497j\",\"container\":\"index_container__JGkWk\",\"markdown-body\":\"index_markdown-body__Q1c3C\",\"btnRow\":\"index_btnRow__ReEOR\"};","\nconst renderElements = (ctx, appState, elements) => {\n  elements.forEach((ele) => {\n    ctx.save();\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = ele.strokeStyle;\n\n    ele.points.forEach((point, index) => {\n      if (!index) {\n        ctx.moveTo(...ele.points[0]);\n      } else {\n        ctx.lineTo(...point);\n      }\n    });\n\n    ctx.stroke();\n\n    ctx.restore();\n  });\n};\n\n// let timerId;\n\nconst renderScene = (canvas, appState, elements) => {\n  const context = canvas.getContext(\"2d\");\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  renderElements(context, appState, elements);\n\n  // if (timerId) {\n  //   clearTimeout(timerId);\n  // }\n\n  // timerId = setTimeout(() => {\n  //   console.log('开始记录....')\n  //   afterRenderSceneHook.forEach((cb) => {\n  //     cb(appState, elements);\n  //   });\n  // }, 300);\n};\n\nexport default renderScene;\n\n// export const registerAfterRenderSceneHook = (cb) => {\n//   afterRenderSceneHook.push(cb);\n//   return () => {\n//     afterRenderSceneHook = afterRenderSceneHook.filter((h) => h !== cb);\n//   };\n// };\n","export const deepCopyElement = (val, depth = 0) => {\n  if (val == null || typeof val !== \"object\") {\n    return val;\n  }\n\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    const tmp =\n      typeof val.constructor === \"function\"\n        ? Object.create(Object.getPrototypeOf(val))\n        : {};\n    for (const key in val) {\n      if (val.hasOwnProperty(key)) {\n        // don't copy non-serializable objects like these caches. They'll be\n        // populated when the element is rendered.\n        if (depth === 0 && (key === \"shape\" || key === \"canvas\")) {\n          continue;\n        }\n        tmp[key] = deepCopyElement(val[key], depth + 1);\n      }\n    }\n    return tmp;\n  }\n\n  if (Array.isArray(val)) {\n    let k = val.length;\n    const arr = new Array(k);\n    while (k--) {\n      arr[k] = deepCopyElement(val[k], depth + 1);\n    }\n    return arr;\n  }\n\n  return val;\n};\n\n\n\n","import { deepCopyElement } from \"./utils\";\n\nclass History {\n  constructor() {\n    this.elementCache = {}; // { key: element}, key=`${element.id}-${element.versionNonce}`\n    this.stateHistory = [];\n    this.redoStack = [];\n    this.lastEntry = null;\n  }\n  // appState只存储部分属性，并不是全部\n  // 从历史记录中取出一个快照\n  hydrateHistoryEntry({ appState, elements }) {\n    return {\n      appState: JSON.parse(appState),\n      elements: elements.map((key) => {\n        const element = this.elementCache[key];\n        if (!element) {\n          throw new Error(`Element not found: ${key}`);\n        }\n        return element;\n      }),\n    };\n  }\n  // 生成一个快照\n  dehydrateHistoryEntry({ appState, elements }) {\n    return {\n      appState: JSON.stringify(appState),\n      elements: elements.map((element) => {\n        const { id, versionNonce } = element;\n        this.elementCache[`${id}-${versionNonce}`] = deepCopyElement(element);\n        return `${element.id}-${element.versionNonce}`;\n      }),\n    };\n  }\n\n  // 将当前state和elements生成一个快照，格式：{ appState: string, elements: [{id, versionNonce}] }\n  generateEntry = (appState, elements) =>\n    this.dehydrateHistoryEntry({\n      appState,\n      elements,\n    });\n\n  pushEntry(appState, elements) {\n    const newEntryDehydrated = this.generateEntry(appState, elements);\n    this.stateHistory.push(newEntryDehydrated);\n    this.clearRedoStack();\n  }\n\n  clearRedoStack() {\n    this.redoStack.splice(0, this.redoStack.length);\n  }\n\n  redoOnce() {\n    if (this.redoStack.length === 0) {\n      return null;\n    }\n\n    const entryToRestore = this.redoStack.pop();\n\n    if (entryToRestore !== undefined) {\n      this.stateHistory.push(entryToRestore);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  undoOnce() {\n    if (this.stateHistory.length === 1) {\n      return null;\n    }\n\n    const currentEntry = this.stateHistory.pop();\n\n    const entryToRestore = this.stateHistory[this.stateHistory.length - 1];\n\n    if (currentEntry !== undefined) {\n      this.redoStack.push(currentEntry);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  record(state, elements) {\n    console.log(\"开始记录。。。。\");\n    this.pushEntry(state, elements);\n    console.log(\"记录完成...\", this);\n  }\n  clear() {\n    this.stateHistory.length = 0;\n    this.redoStack.length = 0;\n    this.lastEntry = null;\n    this.elementCache.clear();\n  }\n}\n\nexport default History;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport { viewportCoordsToSceneCoords, rgb } from \"@/util\";\nimport styles from \"./index.module.less\";\nimport renderScene from \"./renderScene\";\nimport History from \"./History\";\n\nlet elements = JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n\nconst appState = {\n  offsetLeft: 0,\n  offsetTop: 0,\n  scrollX: 0,\n  scrollY: 0,\n  draggingElement: null,\n};\nconst history = new History();\nwindow.__history = history;\n\nconsole.log(\"history...\", history);\nconst Canvas = memo(() => {\n  const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  useEffect(() => {\n    // canvas分辨率矫正\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const { offsetWidth, offsetHeight, offsetLeft, offsetTop } = canvas;\n    canvas.width = offsetWidth * window.devicePixelRatio;\n    canvas.height = offsetHeight * window.devicePixelRatio;\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    appState.offsetLeft = offsetLeft;\n    appState.offsetTop = offsetTop;\n    renderScene(canvas, appState, elements);\n    history.record(appState, elements);\n    // 防止双指滑动时切换页面\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrap.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n  const handleCanvasPointerDown = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n\n    const pointerDownState = {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n      },\n    };\n    const element = {\n      x: pointerDownState.origin.x,\n      id: Math.floor(Math.random() * 2 ** 31),\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: \"#000000\",\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: rgb(),\n      versionNonce: Math.floor(Math.random() * 2 ** 31),\n    };\n    appState.draggingElement = element;\n    elements.push(element);\n\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n  const onPointerMoveFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n\n      appState.draggingElement.points.push([pointerCoords.x, pointerCoords.y]);\n      appState.draggingElement.versionNonce = Math.floor(\n        Math.random() * 2 ** 31\n      );\n      renderScene(canvasRef.current, appState, elements);\n    };\n\n  const onPointerUpFromCanvasPointerDownHandler = (pointerDownState) => () => {\n    history.record(appState, elements);\n    window.removeEventListener(\n      \"pointermove\",\n      pointerDownState.eventListeners.onMove\n    );\n    window.removeEventListener(\n      \"pointerup\",\n      pointerDownState.eventListeners.onUp\n    );\n  };\n  return (\n    <div className={styles.undoRedo}>\n      <div className={styles.container} ref={canvasContainer}>\n        <canvas\n          ref={canvasRef}\n          className={styles.canvas}\n          onPointerDown={handleCanvasPointerDown}\n        >\n          绘制canvas\n        </canvas>\n        <div className={styles.btnRow}>\n          <button\n            onClick={() => {\n              const data = history.undoOnce();\n              console.log(\"撤销。。。\", data);\n              if (data) {\n                elements = data.elements;\n                renderScene(canvasRef.current, appState, elements);\n              }\n            }}\n          >\n            撤销\n          </button>\n          <button\n            onClick={() => {\n              const data = history.redoOnce();\n              console.log(\"重做...\", data);\n              if (data) {\n                elements = data.elements;\n                renderScene(canvasRef.current, appState, elements);\n              }\n            }}\n          >\n            重做\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\n// for worker\n// window.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n"],"names":["canvas","appState","elements","context","getContext","clearRect","width","height","ctx","forEach","ele","save","beginPath","lineWidth","strokeStyle","points","point","index","lineTo","moveTo","stroke","restore","renderElements","deepCopyElement","val","depth","Object","prototype","toString","call","tmp","constructor","create","getPrototypeOf","key","hasOwnProperty","Array","isArray","k","length","arr","History","generateEntry","dehydrateHistoryEntry","this","elementCache","stateHistory","redoStack","lastEntry","JSON","parse","map","element","Error","stringify","id","versionNonce","newEntryDehydrated","push","clearRedoStack","splice","entryToRestore","pop","undefined","hydrateHistoryEntry","currentEntry","state","console","log","pushEntry","clear","localStorage","getItem","offsetLeft","offsetTop","scrollX","scrollY","draggingElement","history","window","__history","memo","canvasRef","useRef","canvasContainer","useEffect","current","offsetWidth","offsetHeight","devicePixelRatio","scale","renderScene","record","wrap","handleWheel","e","preventDefault","addEventListener","passive","removeEventListener","onPointerMoveFromCanvasPointerDownHandler","pointerDownState","event","pointerCoords","viewportCoordsToSceneCoords","x","y","Math","floor","random","onPointerUpFromCanvasPointerDownHandler","eventListeners","onMove","onUp","className","styles","ref","onPointerDown","origin","lastCoords","strokeColor","backgroundColor","fillStyle","strokeWidth","rgb","onPointerMove","onPointerUp","onClick","data","undoOnce","redoOnce","clientX","clientY","zoom","zoomValue","value","r","g","b","withBatchedUpdatesThrottled","func","fn","opts","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","requestAnimationFrame","ret","trailing","flush","cancelAnimationFrame","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","minX","Infinity","minY","maxX","maxY","type","p","min","max","rotate","x1","y1","x2","y2","angle","cos","sin","getElementBounds","getElementAbsoluteCoords","cx","cy","x11","y11","x12","y12","x22","y22","x21","y21","getCommonBounds","distance","abs","testIdBase","randomId","getFontString","fontSize","fontFamily"],"sourceRoot":""}