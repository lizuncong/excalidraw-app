{"version":3,"file":"static/js/SwitchRender.a0b54e73.chunk.js","mappings":"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","sources":["pages/dom-render/switch-render/renderer/svg/renderScene.js","pages/dom-render/switch-render/element/newElement.js","pages/dom-render/switch-render/generateElement.js","pages/dom-render/switch-render/renderer/svg/renderElement.js","pages/dom-render/switch-render/renderer/canvas2D/renderElement.js","pages/dom-render/switch-render/renderer/canvas2D/renderScene.js","pages/dom-render/switch-render/renderer/index.js","pages/dom-render/switch-render/useGesture.js","webpack://excalidraw-app/./src/pages/dom-render/switch-render/components/tools/index.module.less?ec87","pages/dom-render/switch-render/components/icons/index.jsx","pages/dom-render/switch-render/scene/scene.js","pages/dom-render/switch-render/components/tools/index.jsx","webpack://excalidraw-app/./src/pages/dom-render/switch-render/components/scale/index.module.less?a0e3","pages/dom-render/switch-render/components/scale/index.jsx","webpack://excalidraw-app/./src/pages/dom-render/switch-render/components/layer-ui/index.module.less?9dff","pages/dom-render/switch-render/components/layer-ui/index.jsx","webpack://excalidraw-app/./src/pages/dom-render/switch-render/components/textarea/index.module.less?2146","pages/dom-render/switch-render/components/textarea/index.jsx","pages/dom-render/switch-render/index.jsx","util/export.js","util/gesture.js","util/index.js","util/zoom.js"],"sourcesContent":["import { renderElementToSvg } from \"./renderElement\";\nimport { getCanvasSize } from \"@/util/export\";\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nconst trimSpace = (str) => {\n  // return str;\n  return str.replace(/\\s+/g, \" \");\n};\n\nlet svg;\nlet timerId;\nlet _minX;\nlet _minY;\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  svg: svgContainer,\n  renderConfig,\n  isTransform,\n}) => {\n  const { accelerate } = renderConfig;\n  const originSize = 30;\n  const constainerStyle = `\n    transform: translateX(${\n      appState.scrollX * appState.zoom.value\n    }px) translateY(${appState.scrollY * appState.zoom.value}px) scale(${\n    appState.zoom.value\n  });\n    width: ${originSize}px;\n    height: ${originSize}px;\n    transform-origin: left top;\n    ${accelerate ? \"will-change: transform;\" : \"\"}\n  `;\n  svgContainer.setAttribute(\"style\", trimSpace(constainerStyle));\n  if (isTransform) {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    // if (accelerate) {\n    //   timerId = setTimeout(() => {\n    //     console.log('ddd')\n    //     svgContainer.style.willChange = \"\";\n    //     setTimeout(() => {\n    //       svgContainer.style.willChange = \"transform\";\n    //     }, 0);\n    //   }, 1000);\n    // }\n    return;\n  }\n  const [minX, minY, width, height] = getCanvasSize(elements, 10);\n  if (!svg) {\n    svg = document.createElementNS(SVG_NS, \"svg\");\n    svg.style.position = \"absolute\";\n    svg.style.background = \"transparent\";\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svgContainer.appendChild(svg);\n  }\n  svg.setAttribute(\"width\", width);\n  svg.setAttribute(\"height\", height);\n  svg.style.left = `${minX}px`;\n  svg.style.top = `${minY}px`;\n  elements.map(function renderToSvg(element, index) {\n    return renderElementToSvg(element, renderConfig, appState, {\n      minX,\n      minY,\n      svg,\n      originChange: _minX !== minX || _minY !== minY\n    });\n  });\n  _minX = minX;\n  _minY = minY;\n};\n\nwindow.__svg2img = (svg) => {\n  const xml = new XMLSerializer().serializeToString(svg);\n  const svg64 = btoa(xml); //for utf8: btoa(unescape(encodeURIComponent(xml)))\n  const b64start = \"data:image/svg+xml;base64,\";\n  const image64 = b64start + svg64;\n  const img = document.createElement(\"img\");\n  img.src = image64;\n  document.body.appendChild(img);\n  return image64;\n};\n","import { randomId } from \"@/util\";\nimport { rgb } from \"@/util\";\n\nexport const newElement = ({\n  type,\n  x,\n  y,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth = 3,\n  strokeStyle,\n  width = 0,\n  height = 0,\n  angle = 0,\n  points = [],\n  ...rest\n}) => {\n  return {\n    id: randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    angle,\n    isDeleted: false,\n    points,\n    ...rest,\n  };\n};\n\nexport const createElement = ({ elementType, pointerDownState, appState }) => {\n  let element;\n  if (elementType === \"freedraw\") {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      points: [[pointerDownState.origin.x, pointerDownState.origin.y]],\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  } else {\n    element = newElement({\n      type: elementType,\n      x: pointerDownState.origin.x,\n      y: pointerDownState.origin.y,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: rgb(),\n    });\n  }\n\n  return element;\n};\n\nexport const newTextElement = (opts) => {\n  const textElement = newElement({\n    type: \"text\",\n    text: opts.text,\n    fontSize: opts.fontSize,\n    fontFamily: opts.fontFamily,\n    textAlign: opts.textAlign,\n    verticalAlign: opts.verticalAlign,\n    originalText: opts.text,\n    ...opts,\n  });\n\n  return textElement;\n};\n","import { createElement, newTextElement } from \"./element/newElement\";\nimport { rgb } from \"@/util\";\n\nconst getRandomValue = (n, m) => {\n  return Number((Math.random() * (m - n) + n).toFixed(5));\n};\nconst generateElements = (count, type, appState) => {\n  const elements = [];\n  let element;\n  for (let i = 0; i < count; i++) {\n    let x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    let y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    element = createElement({\n      elementType: type,\n      pointerDownState: {\n        origin: {\n          x,\n          y,\n        },\n      },\n      appState,\n    });\n    if (type === \"rectangle\") {\n      const width =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollX - x,\n            appState.canvasWidth - appState.scrollX - x\n          )\n        ) + 2;\n      const height =\n        Math.abs(\n          getRandomValue(\n            -appState.scrollY - y,\n            appState.canvasHeight - appState.scrollY - y\n          )\n        ) + 2;\n      element.width = width;\n      element.height = height;\n    } else if (type === \"freedraw\") {\n      const pointsNum = getRandomValue(20, 100);\n      for (let i = 0; i < pointsNum; i++) {\n        x = getRandomValue(x, x + 10);\n        y = getRandomValue(y, y + 10);\n        element.points.push([x, y]);\n      }\n    } else if (type === \"text\") {\n      const text = `${x}, ${y}`;\n      element = newTextElement({\n        x,\n        y,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text,\n        width: text.length * 20,\n        height: 25,\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n    }\n\n    elements.push(element);\n  }\n\n  return elements;\n};\n\nexport const animateElements = (elements, appState) => {\n  elements.forEach((el) => {\n    const x = getRandomValue(\n      -appState.scrollX,\n      appState.canvasWidth - appState.scrollX\n    );\n    const y = getRandomValue(\n      -appState.scrollY,\n      appState.canvasHeight - appState.scrollY\n    );\n    el.x = x;\n    el.y = y;\n  });\n  return elements;\n};\nexport default generateElements;\n","// import { getElementAbsoluteCoords, distance } from \"@/util\";\nimport { SVG_NS } from \"./renderScene\";\n\nconst elementCache = {};\nexport const deleteElementCache = (element) => {\n  // delete elementCache[element.id];\n};\n\nexport const clearElementCache = () => {};\n\nexport const renderElementToSvg = (\n  element,\n  renderConfig,\n  appState,\n  { minX, minY, svg, originChange }\n) => {\n  let el;\n  if (\n    !originChange &&\n    elementCache[element.id] &&\n    element !== appState.draggingElement\n  ) {\n    return;\n  }\n\n  switch (element.type) {\n    case \"rectangle\": {\n      const x = element.x - minX;\n      const y = element.y - minY;\n      el = elementCache[element.id] || document.createElementNS(SVG_NS, \"rect\");\n      // if (\n      //   el.__x === x &&\n      //   el.__y === y &&\n      //   el.__width === element.width &&\n      //   el.__height === element.height\n      // )\n      //   return;\n      el.setAttribute(\"id\", element.id);\n      // console.log('x....', element.x, minX)\n      el.setAttribute(\"x\", x);\n      el.setAttribute(\"y\", y);\n      el.setAttribute(\"width\", element.width);\n      el.setAttribute(\"height\", element.height);\n      el.setAttribute(\"fill\", \"none\");\n      el.setAttribute(\"stroke-width\", element.strokeWidth);\n      el.setAttribute(\"stroke\", element.strokeStyle);\n      el.__x = x;\n      el.__y = y;\n      el.__width = element.width;\n      el.__height = element.height;\n      break;\n    }\n    case \"freedraw\": {\n      const points = element.points.map((p) => [\n        p[0] - minX + Math.ceil(element.strokeWidth / 2),\n        p[1] - minY + Math.ceil(element.strokeWidth / 2),\n      ]);\n      el =\n        elementCache[element.id] ||\n        document.createElementNS(SVG_NS, \"polyline\");\n      el.setAttribute(\"id\", element.id);\n      el.setAttribute(\"points\", points.join(\" \"));\n      el.setAttribute(\"fill\", \"none\");\n      el.setAttribute(\"stroke-width\", element.strokeWidth);\n      el.setAttribute(\"stroke\", element.strokeStyle);\n      break;\n    }\n    default: {\n    }\n  }\n  if (!elementCache[element.id]) {\n    elementCache[element.id] = el;\n    svg.appendChild(el);\n  }\n\n  return el;\n};\n","import { getElementAbsoluteCoords, distance, getFontString } from \"@/util\";\nexport const renderElement = (element, context, renderConfig, appState) => {\n  const elementWithCanvas = generateElementWithCanvas(element, renderConfig);\n  drawElementFromCanvas(elementWithCanvas, context, renderConfig);\n};\n\nlet elementWithCanvasCache = new WeakMap();\n\nexport const deleteElementCache = (element) => {\n  elementWithCanvasCache.delete(element);\n};\nexport const clearElementCache = () => {\n  elementWithCanvasCache = new WeakMap();\n};\n\nconst generateElementWithCanvas = (element, renderConfig) => {\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  // 导出图片时，默认zoom为1，因此这里加个notusecache配置重新生成canvas\n  console.log('生成离屏canvas')\n  if (prevElementWithCanvas && !renderConfig.notUseCache) {\n    return prevElementWithCanvas;\n  }\n  const elementWithCanvas = generateElementCanvas(\n    element,\n    renderConfig.zoom,\n    renderConfig\n  );\n  if (!renderConfig.notUseCache) {\n    elementWithCanvasCache.set(element, elementWithCanvas);\n  }\n\n  return elementWithCanvas;\n};\nlet rightContainer = document.getElementById(\"placeholder\");\nlet previewCanvas = null;\nconst generateElementCanvas = (element, zoom, renderConfig) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const padding = getCanvasPadding(element);\n  if (!rightContainer) {\n    rightContainer = document.getElementById(\"placeholder\");\n  }\n  if (previewCanvas) {\n    rightContainer.removeChild(previewCanvas);\n  }\n  previewCanvas = canvas;\n  rightContainer.appendChild(previewCanvas);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n  if (element.type === \"freedraw\") {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    let canvasOffsetX = 0;\n    let canvasOffsetY = 0;\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * zoom.value * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value\n  );\n\n  drawElementOnCanvas(element, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (element, context, renderConfig) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = \"black\"; // element.strokeStyle;\n      context.strokeRect(0, 0, element.width, element.height);\n      break;\n    }\n    case \"text\": {\n      context.font = getFontString(element);\n      context.fillStyle = element.strokeColor;\n      context.textAlign = element.textAlign;\n      const lines = element.text.split(\"\\n\");\n      const lineHeight = lines.length ? element.height / lines.length : 18;\n      context.textBaseline = \"bottom\";\n      for (let index = 0; index < lines.length; index++) {\n        context.fillText(lines[index], 0, (index + 1) * lineHeight);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      context.save();\n      context.lineWidth = element.strokeWidth;\n      context.strokeStyle = \"black\"; //element.strokeStyle;\n      element.points.forEach((point, index) => {\n        let [x, y] = point;\n        x = x - element.x;\n        y = y - element.y;\n        if (!index) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n      });\n\n      context.stroke();\n\n      context.restore();\n      break;\n    }\n    default: {\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst getCanvasPadding = (element) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nconst drawElementFromCanvas = (elementWithCanvas, context, renderConfig) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  if (element.type === \"freedraw\") {\n    [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  }\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.drawImage(\n    elementWithCanvas.canvas,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom.value) /\n        elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.width / elementWithCanvas.canvasZoom.value,\n    elementWithCanvas.canvas.height / elementWithCanvas.canvasZoom.value\n  );\n\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n","import { renderElement } from \"./renderElement\";\nimport { getElementBounds, viewportCoordsToSceneCoords } from \"@/util\";\n\nexport const drawAxis = (ctx, { scrollX, scrollY, zoom }) => {\n  ctx.save();\n  const rectH = 100; // 纵轴刻度间距\n  const rectW = 100; // 横轴刻度间距\n  const tickLength = 8; // 刻度线长度\n  const canvas = ctx.canvas;\n  ctx.strokeStyle = \"red\";\n  ctx.fillStyle = \"red\";\n  // 绘制横轴和纵轴刻度\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.textBaseline = \"middle\";\n  ctx.save();\n  ctx.translate(0, scrollY);\n  for (let i = 0; i < scrollY / rectH; i++) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, -i * rectH);\n    ctx.lineTo(tickLength, -i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, 0, -i * rectH + 10);\n  }\n  for (\n    let i = 1;\n    i < (canvas.height - scrollY * zoom.value) / (rectH * zoom.value);\n    i++\n  ) {\n    // 绘制纵轴刻度\n    ctx.moveTo(0, i * rectH);\n    ctx.lineTo(tickLength, i * rectH);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, 0, i * rectH + 10);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(scrollX, 0);\n\n  for (let i = 0; i < scrollX / rectW; i++) {\n    // 绘制横轴刻度\n    ctx.moveTo(-i * rectW, 0);\n    ctx.lineTo(-i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(-i, -i * rectW + 5, 5);\n  }\n  for (\n    let i = 1;\n    i < (canvas.width - scrollX * zoom.value) / (rectW * zoom.value);\n    i++\n  ) {\n    // 绘制横轴刻度\n    ctx.moveTo(i * rectW, 0);\n    ctx.lineTo(i * rectW, tickLength);\n    ctx.font = \"10px Arial\";\n    ctx.fillText(i, i * rectW + 5, 5);\n  }\n  ctx.restore();\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nconst isVisibleElement = (\n  element,\n  canvasWidth,\n  canvasHeight,\n  viewTransformations\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\nexport const renderScene = ({\n  elements,\n  appState,\n  scale,\n  canvas,\n  renderConfig,\n}) => {\n  const context = canvas.getContext(\"2d\");\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  context.save();\n  context.scale(scale, scale);\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n  context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n\n  context.save();\n  // 先放大\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n  drawAxis(context, renderConfig);\n\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(element, normalizedCanvasWidth, normalizedCanvasHeight, {\n      zoom: renderConfig.zoom,\n      offsetLeft: appState.offsetLeft,\n      offsetTop: appState.offsetTop,\n      scrollX: renderConfig.scrollX,\n      scrollY: renderConfig.scrollY,\n    })\n  );\n  const total = document.getElementById(\"canvas-total\");\n  total.innerText = `总元素数：${elements.length}   实际绘制元素总数：${visibleElements.length}`;\n\n  visibleElements.forEach((element) => {\n    renderElement(element, context, renderConfig, appState);\n  });\n  context.restore();\n\n  context.restore();\n  localStorage.setItem(\"elements\", JSON.stringify(elements));\n  localStorage.setItem(\"appState\", JSON.stringify(appState));\n};\n","import { renderScene as renderSceneSvg } from \"./svg/renderScene\";\nimport {\n  deleteElementCache as deleteElementCacheSvg,\n  clearElementCache as clearElementCacheSvg,\n} from \"./svg/renderElement\";\n\nimport { renderScene as renderSceneCanvas } from \"./canvas2D/renderScene\";\nimport {\n  deleteElementCache as deleteElementCacheCanvas,\n  clearElementCache as clearElementCacheCanvas,\n} from \"./canvas2D/renderElement\";\n\nexport const renderScene = (config) => {\n  console.log('renderScene...', config.renderEngine)\n  if (config.renderEngine === \"svg\") {\n    renderSceneSvg(config);\n  } else {\n    renderSceneCanvas(config);\n  }\n};\n\nexport const deleteElementCache = (element) => {\n  deleteElementCacheSvg(element);\n  deleteElementCacheCanvas(element);\n};\n\nexport const clearElementCache = () => {\n  clearElementCacheSvg();\n  clearElementCacheCanvas();\n};\n","import { useEffect } from \"react\";\nimport { getCenter, getDistance } from \"@/util/gesture\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\n\nconst gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nexport const useGesture = (canvasRef, appState) => {\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const onTouchEnd = (event) => {\n      if (!event.touches.length) {\n        gesture.pointers.clear();\n      }\n    };\n    canvas.addEventListener(\"touchend\", onTouchEnd);\n    return () => {\n      canvas.removeEventListener(\"touchend\", onTouchEnd);\n    };\n  }, [canvasRef]);\n  const removePointer = (event) => {\n    gesture.pointers.delete(event.pointerId);\n  };\n  const updateGestureOnPointerDown = (event) => {\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = appState.zoom.value;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values())\n      );\n    }\n  };\n  const handleCanvasPointerMove = (event, callback) => {\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n    const initialScale = gesture.initialScale;\n\n    if (\n      gesture.pointers.size === 2 &&\n      gesture.lastCenter &&\n      initialScale &&\n      gesture.initialDistance\n    ) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter.x;\n      const deltaY = center.y - gesture.lastCenter.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor = distance / gesture.initialDistance;\n\n      const nextZoom = scaleFactor\n        ? getNormalizedZoom(initialScale * scaleFactor)\n        : appState.zoom.value;\n      const zoomState = getStateForZoom(\n        {\n          viewportX: center.x,\n          viewportY: center.y,\n          nextZoom,\n        },\n        appState\n      );\n      Object.assign(appState, {\n        zoom: zoomState.zoom,\n        scrollX: zoomState.scrollX + deltaX / nextZoom,\n        scrollY: zoomState.scrollY + deltaY / nextZoom,\n      });\n      callback();\n    } else {\n      gesture.lastCenter =\n        gesture.initialDistance =\n        gesture.initialScale =\n          null;\n    }\n  };\n  return {\n    gesture,\n    removePointer,\n    updateGestureOnPointerDown,\n    handleCanvasPointerMove,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__22e8h\",\"item\":\"index_item__o-hUS\",\"selected\":\"index_selected__3WGnX\"};","export const createIcon = (d, opts) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n    ...rest\n  } = typeof opts === \"number\" ? { width: opts } : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      style={style}\n      {...rest}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nconst tablerIconProps = {\n  width: 24,\n  height: 24,\n  fill: \"none\",\n  strokeWidth: 2,\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const RectangleIcon = createIcon(\n  <g strokeWidth=\"1.5\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>\n  </g>,\n  {\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const FreedrawIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"m7.643 15.69 7.774-7.773a2.357 2.357 0 1 0-3.334-3.334L4.31 12.357a3.333 3.333 0 0 0-.977 2.357v1.953h1.953c.884 0 1.732-.352 2.357-.977Z\"\n    />\n    <path d=\"m11.25 5.417 3.333 3.333\" />\n  </g>,\n  {\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n  }\n);\n\nexport const ExportImageIcon = createIcon(\n  <g strokeWidth=\"1.25\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M15 8h.01\"></path>\n    <path d=\"M12 20h-5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v5\"></path>\n    <path d=\"M4 15l4 -4c.928 -.893 2.072 -.893 3 0l4 4\"></path>\n    <path d=\"M14 14l1 -1c.617 -.593 1.328 -.793 2.009 -.598\"></path>\n    <path d=\"M19 16v6\"></path>\n    <path d=\"M22 19l-3 3l-3 -3\"></path>\n  </g>,\n  tablerIconProps\n);\n\nconst modifiedTablerIconProps = {\n  width: 20,\n  height: 20,\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n};\nexport const ZoomInIcon = createIcon(\n  <path strokeWidth=\"1.25\" d=\"M10 4.167v11.666M4.167 10h11.666\" />,\n  modifiedTablerIconProps\n);\n\nexport const ZoomOutIcon = createIcon(\n  <path d=\"M5 10h10\" strokeWidth=\"1.25\" />,\n  modifiedTablerIconProps\n);\n","class Scene {\n  constructor() {\n    const elements = JSON.parse(localStorage.getItem('elements'))\n    this.elements = elements || [];\n  }\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n  replaceAllElements(nextElements) {\n    this.elements = nextElements;\n  }\n}\n\nexport const scene = new Scene();\n\nexport default Scene;\n","import React, { memo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { RectangleIcon, FreedrawIcon, ExportImageIcon } from \"../icons\";\nimport { exportPng } from \"@/util/export\";\nimport { renderScene } from \"../../renderer\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\n\nconst SHAPES = [\n  {\n    type: \"rectangle\",\n    icon: RectangleIcon,\n  },\n  {\n    type: \"freedraw\",\n    icon: FreedrawIcon,\n  },\n];\nconst Index = memo(({ activeTool, onActiveToolChange }) => {\n  return (\n    <div className={styles.tools}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() => {\n          exportPng({\n            renderScene,\n            elements: scene.getElementsIncludingDeleted(),\n            appState,\n          });\n        }}\n      >\n        {ExportImageIcon}\n      </span>\n      {SHAPES.map((shape) => {\n        const isSelected = activeTool.type === shape.type;\n        return (\n          <span\n            key={shape.type}\n            className={[styles.item, isSelected && styles.selected].join(\" \")}\n            onClick={() =>\n              onActiveToolChange({ type: isSelected ? \"\" : shape.type })\n            }\n          >\n            {shape.icon}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {\"scale\":\"index_scale__-Xme5\",\"item\":\"index_item__JKmav\",\"value\":\"index_value__f1Juj\"};","import React, { memo } from \"react\";\nimport { ZoomInIcon, ZoomOutIcon } from \"../icons\";\nimport { getNormalizedZoom } from \"@/util/zoom\";\nimport styles from \"./index.module.less\";\n\nconst ZOOM_STEP = 0.1;\nconst Scale = memo(({ appState, onZoomChange }) => {\n  const zoomValue = `${(appState.zoom.value * 100).toFixed(0)}%`;\n\n  return (\n    <div className={styles.scale}>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value - ZOOM_STEP))\n        }\n      >\n        {ZoomOutIcon}\n      </span>\n      <span\n        className={styles.value}\n        onClick={() => onZoomChange(getNormalizedZoom(1))}\n      >\n        {zoomValue}\n      </span>\n      <span\n        className={[styles.item].join(\" \")}\n        onClick={() =>\n          onZoomChange(getNormalizedZoom(appState.zoom.value + ZOOM_STEP))\n        }\n      >\n        {ZoomInIcon}\n      </span>\n    </div>\n  );\n});\n\nexport default Scale;\n","// extracted by mini-css-extract-plugin\nexport default {\"layer\":\"index_layer__wGOXl\",\"ball_red\":\"index_ball_red__OOExQ\",\"move\":\"index_move__XhV1V\",\"boundceBall\":\"index_boundceBall__F5vh4\",\"shadowball\":\"index_shadowball__g4a+F\",\"shadowMove\":\"index_shadowMove__65Uwf\"};","import React, { memo } from \"react\";\nimport Tools from \"../tools\";\nimport Scale from \"../scale\";\nimport styles from \"./index.module.less\";\nconst LayerUI = memo(\n  ({ activeTool, onActiveToolChange, appState, onZoomChange }) => {\n    return (\n      <div className={styles.layer}>\n        <Scale appState={appState} onZoomChange={onZoomChange} />\n        <Tools\n          activeTool={activeTool}\n          onActiveToolChange={onActiveToolChange}\n        />\n        <div className={styles.boundceBall}>\n          <div className={styles.ball_red}></div>\n          <div className={styles.shadowball}></div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default LayerUI;\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"index_textarea__GZm7+\",\"textarea_copy\":\"index_textarea_copy__Jw9TD\"};","import React, {\n  memo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { deleteElementCache, renderScene } from \"../../renderer\";\nimport { viewportCoordsToSceneCoords, rgb, getFontString } from \"@/util\";\nimport { newTextElement } from \"../../element/newElement\";\nimport { scene } from \"../../scene/scene\";\nimport { appState } from \"../../index\";\nimport styles from \"./index.module.less\";\n\nconst Index = forwardRef(({ staticCanvasRef }, ref) => {\n  const textareaRef = useRef(null);\n  const [textareaValue, setTextAreaValue] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    startEditText: (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        event,\n        appState\n      );\n      const element = newTextElement({\n        x: sceneX,\n        y: sceneY,\n        strokeColor: rgb(),\n        backgroundColor: \"transparent\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        text: \"\",\n        fontSize: 20,\n        fontFamily: \"Virgil\", // Helvetica Cascadia\n        textAlign: \"left\",\n        verticalAlign: \"top\",\n      });\n      appState.draggingElement = element;\n      const textarea = textareaRef.current;\n      textarea.focus();\n      const left = event.clientX - appState.offsetLeft;\n      const top = event.clientY - appState.offsetTop;\n      const styleObj = {\n        font: getFontString(element),\n        left: `${left}px`,\n        top: `${top}px`,\n        opacity: 1,\n        color: element.strokeColor,\n        fontSize: element.fontSize,\n      };\n      Object.assign(textarea.style, styleObj);\n      const copyTextarea = document.getElementById(\"copyText\");\n      Object.assign(copyTextarea.style, styleObj);\n      // 输入框限制最大宽度，防止输入的文字超出画布宽度\n      const maxWidth = appState.canvasWidth - left;\n      // textarea.style.maxWidth = `${maxWidth}px`;\n      // textarea.style.width = `${element.fontSize}px`;\n      // textarea.style.height = `${element.fontSize * 1.2}px`;\n      Object.assign(textarea.style, {\n        zIndex: 1,\n        maxWidth: `${maxWidth}px`,\n        width: `${element.fontSize}px`,\n        height: `${element.fontSize * 1.2}px`,\n      });\n    },\n  }));\n  return (\n    <>\n      <textarea\n        onChange={(e) => {\n          let text = e.target.value;\n          const textarea = textareaRef.current;\n          const maxWidth = parseFloat(textarea.style.maxWidth);\n\n          const copyTextarea = document.getElementById(\"copyText\");\n          copyTextarea.innerText = text;\n          const copyTextWidth = copyTextarea.getBoundingClientRect().width;\n          if (copyTextWidth > maxWidth) {\n            // 正常输入的情况下，两者的差值不会太大，只有粘贴进来的文本才会导致\n            // copy text宽度突然增大\n            if (copyTextWidth - maxWidth < 30) {\n              text = copyTextarea.innerText =\n                text.slice(0, text.length - 1) +\n                \"\\n\" +\n                text.slice(text.length - 1);\n            } else {\n              let lines = text.split(\"\\n\");\n              const splitResult = [];\n              lines.forEach((line) => {\n                copyTextarea.innerText = line;\n                const copyTextWidth =\n                  copyTextarea.getBoundingClientRect().width;\n                if (copyTextWidth <= maxWidth) {\n                  splitResult.push(line);\n                } else {\n                  let lastIdx = 0;\n                  for (let i = 1; i < line.length; i++) {\n                    const str = line.slice(lastIdx, i);\n                    copyTextarea.innerText = str;\n                    const copyTextWidth =\n                      copyTextarea.getBoundingClientRect().width;\n                    if (copyTextWidth > maxWidth) {\n                      splitResult.push(line.slice(lastIdx, i - 1));\n                      lastIdx = i - 1;\n                    } else if (i === line.length - 1) {\n                      splitResult.push(line.slice(lastIdx, i));\n                    }\n                  }\n                }\n              });\n              text = splitResult.join(\"\\n\");\n              copyTextarea.innerText = text;\n            }\n          }\n\n          setTextAreaValue(text);\n          const { width, height } = copyTextarea.getBoundingClientRect();\n          textarea.style.width = `${width + 30}px`;\n          textarea.style.height = `${height}px`;\n\n          appState.draggingElement.text = text;\n        }}\n        onBlur={() => {\n          const element = appState.draggingElement;\n          const textarea = textareaRef.current;\n          const copyTextarea = document.getElementById(\"copyText\");\n          if (element.text) {\n            element.width = copyTextarea.offsetWidth;\n            element.height = copyTextarea.offsetHeight;\n            deleteElementCache(appState.draggingElement);\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              appState.draggingElement,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n              },\n            });\n            setTimeout(() => {\n              copyTextarea.innerText = \"\";\n              setTextAreaValue(\"\");\n            }, 200);\n          }\n          Object.assign(textarea.style, {\n            left: `0px`,\n            top: `0px`,\n            zIndex: -1,\n            opacity: 0,\n          });\n        }}\n        value={textareaValue}\n        className={styles.textarea}\n        ref={textareaRef}\n      ></textarea>\n      <div\n        style={{ background: \"grey\" }}\n        id=\"copyText\"\n        contentEditable={true}\n        className={[styles.textarea, styles.textarea_copy].join(\" \")}\n      ></div>\n    </>\n  );\n});\n\nexport default memo(Index);\n","import React, { memo, useRef, useEffect, useState } from \"react\";\nimport { distance } from \"@/util\";\n// import { isAndroid } from \"@/util/device\";\nimport {\n  withBatchedUpdatesThrottled,\n  viewportCoordsToSceneCoords,\n} from \"@/util\";\nimport { getNormalizedZoom, getStateForZoom } from \"@/util/zoom\";\nimport generateElements, { animateElements } from \"./generateElement\";\nimport { createElement } from \"./element/newElement\";\nimport { renderScene } from \"./renderer\";\nimport { useGesture } from \"./useGesture\";\nimport {\n  deleteElementCache,\n  // clearElementCache\n} from \"./renderer\";\nimport LayerUI from \"./components/layer-ui\";\nimport TextArea from \"./components/textarea\";\nimport { scene } from \"./scene/scene\";\nimport \"./index.less\";\nconst temp = JSON.parse(localStorage.getItem(\"appState\"));\nexport let appState = temp || {\n  zoom: { value: 1 },\n  scrollX: 0,\n  scrollY: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  draggingElement: null,\n  canvasWidth: 0,\n  canvasHeight: 0,\n};\nconst ZOOM_STEP = 0.1;\n\nconst Canvas = memo(() => {\n  // const canvasRef = useRef(null);\n  const canvasContainer = useRef(null);\n  const staticCanvasRef = useRef(null);\n  const svgContainerRef = useRef(null);\n  const cursorPosition = useRef({});\n  const textareaRef = useRef(null);\n  const rafRef = useRef(null);\n  const globalVarRef = useRef({});\n  const [flag, refreshFlag] = useState(false);\n  const [activeTool, setActiveTool] = useState({ type: \"\" });\n  const [testObj, setTestObj] = useState({ count: \"\", type: \"rectangle\" });\n  const [animate, setAnimate] = useState(false);\n  const willChangeRef = useRef(true);\n  const [renderEngine, setRenderEngine] = useState(\"canvas\");\n  const animateRef = useRef();\n  const refresh = () => {\n    refreshFlag(!flag);\n  };\n  useEffect(() => {\n    const setCanvasSize = (canvas) => {\n      canvas.width = offsetWidth * window.devicePixelRatio;\n      canvas.height = offsetHeight * window.devicePixelRatio;\n    };\n\n    // canvas分辨率矫正\n    const canvas = staticCanvasRef.current;\n    const { offsetWidth, offsetHeight } = canvas;\n    // setCanvasSize(canvas);\n    setCanvasSize(staticCanvasRef.current);\n\n    const { x, y } = canvas.getBoundingClientRect();\n    appState.offsetLeft = x;\n    appState.offsetTop = y;\n    appState.canvasWidth = offsetWidth;\n    appState.canvasHeight = offsetHeight;\n\n    // 绘制静态canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      renderEngine,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      svg: svgContainerRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n        accelerate: willChangeRef.current,\n      },\n    });\n  }, [renderEngine]);\n  useEffect(() => {\n    const wrap = canvasContainer.current;\n    const handleWheel = (e) => {\n      e.preventDefault();\n    };\n    // 防止双指滑动时切换页面\n    wrap.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    const updateCurrentCursorPosition = (event) => {\n      cursorPosition.current = {\n        cursorX: event.clientX,\n        cursorY: event.clientY,\n      };\n    };\n    const onTapStart = (e) => {\n      e.preventDefault();\n    };\n    const canvas = staticCanvasRef.current; //canvasRef.current;\n    canvas.addEventListener(\"touchstart\", onTapStart);\n    document.addEventListener(\"mousemove\", updateCurrentCursorPosition);\n    return () => {\n      canvas.removeEventListener(\"touchstart\", onTapStart);\n\n      wrap.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"mousemove\", updateCurrentCursorPosition);\n    };\n  }, []);\n  useEffect(() => {\n    let frame = 0;\n    let startTime = Date.now();\n\n    const loop = () => {\n      const currentTime = Date.now();\n      frame++;\n\n      if (currentTime > 1000 + startTime) {\n        const fps = Math.round((frame * 1000) / (currentTime - startTime));\n        rafRef.current.innerText = `FPS：${fps}`;\n        frame = 0;\n        startTime = currentTime;\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    loop();\n  }, []);\n  const {\n    updateGestureOnPointerDown,\n    handleCanvasPointerMove,\n    removePointer,\n    gesture,\n  } = useGesture(staticCanvasRef, appState);\n  const reDrawAfterZoom = () => {\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderEngine,\n      svg: svgContainerRef.current,\n      isTransform: true,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n        accelerate: willChangeRef.current,\n      },\n    });\n    if (globalVarRef.current.zoomTimerId) {\n      clearTimeout(globalVarRef.current.zoomTimerId);\n    }\n    globalVarRef.current.zoomTimerId = setTimeout(() => {\n      // clearElementCache();\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderEngine,\n        svg: svgContainerRef.current,\n        isTransform: true,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n          accelerate: willChangeRef.current,\n        },\n      });\n    }, 300);\n  };\n  const handleCanvasWheel = (event) => {\n    const { deltaX, deltaY } = event;\n    // 关于缩放：双指放大时，deltaY是负数，缩小时，deltaY是正数\n    // 缩放，本质上就是对某个点的坐标进行变换\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY); // 只有两种情况，要么+1，要么-1\n      const MAX_STEP = ZOOM_STEP * 100; // 10\n      const absDelta = Math.abs(deltaY);\n      let delta = deltaY;\n      // delta最大为10\n      if (absDelta > MAX_STEP) {\n        delta = MAX_STEP * sign;\n      }\n      let newZoom = appState.zoom.value - delta / 100;\n      newZoom +=\n        Math.log10(Math.max(1, appState.zoom.value)) *\n        -sign *\n        Math.min(1, absDelta / 20);\n      const nextZoom = getNormalizedZoom(newZoom);\n      Object.assign(appState, {\n        ...getStateForZoom(\n          {\n            viewportX: cursorPosition.current.cursorX,\n            viewportY: cursorPosition.current.cursorY,\n            nextZoom: nextZoom,\n          },\n          appState\n        ),\n      });\n      refresh();\n      reDrawAfterZoom();\n      return;\n    }\n    appState.scrollX = appState.scrollX - deltaX;\n    appState.scrollY = appState.scrollY - deltaY;\n\n    // 在滚动画布的过程中，只绘制底层的canvas\n    renderScene({\n      elements: scene.getElementsIncludingDeleted(),\n      isTransform: true,\n      appState: appState,\n      scale: window.devicePixelRatio,\n      canvas: staticCanvasRef.current,\n      renderEngine,\n      svg: svgContainerRef.current,\n      renderConfig: {\n        selectionColor: \"#6965db\",\n        scrollX: appState.scrollX,\n        scrollY: appState.scrollY,\n        viewBackgroundColor: \"#ffffff\",\n        zoom: appState.zoom,\n        accelerate: willChangeRef.current,\n      },\n    });\n  };\n\n  const handleCanvasPointerDown = (event) => {\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n    if (!activeTool.type) {\n      updateGestureOnPointerDown(event);\n      return;\n    }\n    const pointerDownState = initialPointerDownState(event);\n    const element = createElement({\n      elementType: activeTool.type,\n      pointerDownState,\n      appState,\n    });\n    appState.draggingElement = element;\n    deleteElementCache(element);\n    scene.replaceAllElements([\n      ...scene.getElementsIncludingDeleted(),\n      appState.draggingElement,\n    ]);\n    const onPointerMove =\n      onPointerMoveFromCanvasPointerDownHandler(pointerDownState);\n    const onPointerUp =\n      onPointerUpFromCanvasPointerDownHandler(pointerDownState);\n    window.addEventListener(\"pointermove\", onPointerMove);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  const onPointerMoveFromCanvasPointerDownHandler = (pointerDownState) =>\n    withBatchedUpdatesThrottled((event) => {\n      const pointerCoords = viewportCoordsToSceneCoords(event, appState);\n      pointerDownState.lastCoords.x = pointerCoords.x;\n      pointerDownState.lastCoords.y = pointerCoords.y;\n      if (activeTool.type === \"freedraw\") {\n        appState.draggingElement.points.push([\n          pointerCoords.x,\n          pointerCoords.y,\n        ]);\n      } else {\n        const pointerCoords = pointerDownState.lastCoords;\n        const originX = pointerDownState.origin.x;\n        const originY = pointerDownState.origin.y;\n        const x = pointerCoords.x;\n        const y = pointerCoords.y;\n        const width = distance(pointerDownState.origin.x, pointerCoords.x);\n        const height = distance(pointerDownState.origin.y, pointerCoords.y);\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n        appState.draggingElement.x = newX;\n        appState.draggingElement.y = newY;\n        appState.draggingElement.width = width;\n        appState.draggingElement.height = height;\n      }\n      deleteElementCache(appState.draggingElement);\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        renderEngine,\n        svg: svgContainerRef.current,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n          accelerate: willChangeRef.current,\n        },\n      });\n    });\n\n  const onPointerUpFromCanvasPointerDownHandler =\n    (pointerDownState) => (event) => {\n      // deleteElementCache(appState.draggingElement);\n      removePointer(event);\n      // scene.replaceAllElements([\n      //   ...scene.getElementsIncludingDeleted(),\n      //   appState.draggingElement,\n      // ]);\n\n      // 鼠标抬起后，先清空顶层的cavans\n      // const canvas = canvasRef.current;\n      // const context = canvas.getContext(\"2d\");\n      // context.clearRect(0, 0, canvas.width, canvas.height);\n      // 重绘底层canvas\n      renderScene({\n        elements: scene.getElementsIncludingDeleted(),\n        appState: appState,\n        scale: window.devicePixelRatio,\n        canvas: staticCanvasRef.current,\n        svg: svgContainerRef.current,\n        renderEngine,\n        renderConfig: {\n          selectionColor: \"#6965db\",\n          scrollX: appState.scrollX,\n          scrollY: appState.scrollY,\n          viewBackgroundColor: \"#ffffff\",\n          zoom: appState.zoom,\n          accelerate: willChangeRef.current,\n        },\n      });\n      window.removeEventListener(\n        \"pointermove\",\n        pointerDownState.eventListeners.onMove\n      );\n      window.removeEventListener(\n        \"pointerup\",\n        pointerDownState.eventListeners.onUp\n      );\n    };\n\n  const initialPointerDownState = (event) => {\n    const origin = viewportCoordsToSceneCoords(event, appState);\n    return {\n      origin,\n      lastCoords: { ...origin },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  };\n\n  const handleCanvasDoubleClick = (event) => {\n    if (activeTool.type) return;\n    // 创建新的文本元素\n    textareaRef.current.startEditText(event);\n  };\n  return (\n    <div className=\"svg-base\" ref={canvasContainer}>\n      {/* <div className=\"refer\">\n        参照物\n      </div> */}\n      <div className=\"container wrap\">\n        <div className=\"svg-container\" ref={svgContainerRef}></div>\n        <canvas\n          ref={staticCanvasRef}\n          className=\"canvas\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n          onPointerCancel={removePointer}\n          onPointerMove={(event) => {\n            handleCanvasPointerMove(event, () => {\n              refresh();\n              reDrawAfterZoom();\n            });\n          }}\n        >\n          静态canvas\n        </canvas>\n        {/* <canvas\n          ref={canvasRef}\n          className=\"canvas draw\"\n          onWheel={handleCanvasWheel}\n          onPointerDown={handleCanvasPointerDown}\n          onDoubleClick={handleCanvasDoubleClick}\n          onPointerCancel={removePointer}\n          onPointerMove={(event) => {\n            handleCanvasPointerMove(event, () => {\n              refresh();\n              reDrawAfterZoom();\n            });\n          }}\n        >\n          动态canvas\n        </canvas> */}\n        <LayerUI\n          activeTool={activeTool}\n          onZoomChange={(zoomVal) => {\n            if (appState.zoom.value === zoomVal) return;\n            Object.assign(appState, {\n              ...getStateForZoom(\n                {\n                  viewportX: appState.canvasWidth / 2 + appState.offsetLeft,\n                  viewportY: appState.canvasHeight / 2 + appState.offsetTop,\n                  nextZoom: zoomVal,\n                },\n                appState\n              ),\n            });\n            refresh();\n            reDrawAfterZoom();\n          }}\n          appState={{ ...appState }}\n          onActiveToolChange={(value) => {\n            setActiveTool(value);\n          }}\n        />\n        <TextArea ref={textareaRef} staticCanvasRef={staticCanvasRef} />\n      </div>\n      <div>\n        <span ref={rafRef}>FPS：--</span>\n        <span className=\"total\" id=\"canvas-total\"></span>\n        {/* <span className=\"willchange\">\n          <input\n            type=\"checkbox\"\n            checked={willChangeRef.current}\n            onChange={(e) => {\n              refresh();\n              willChangeRef.current = e.target.checked;\n            }}\n          />\n          开启硬件加速\n        </span> */}\n        <span className=\"render-engine\">\n          <input\n            type=\"checkbox\"\n            checked={renderEngine === \"svg\"}\n            onChange={(e) => {\n              if (renderEngine === \"canvas\") {\n                const ctx = staticCanvasRef.current.getContext('2d');\n                ctx.clearRect(\n                  0,\n                  0,\n                  staticCanvasRef.current.width,\n                  staticCanvasRef.current.height\n                );\n                // 再绘制svg\n                svgContainerRef.current.style.display = \"block\";\n                setRenderEngine(\"svg\");\n                renderScene({\n                  elements: scene.getElementsIncludingDeleted(),\n                  appState: appState,\n                  scale: window.devicePixelRatio,\n                  canvas: staticCanvasRef.current,\n                  svg: svgContainerRef.current,\n                  renderEngine: \"svg\",\n                  renderConfig: {\n                    selectionColor: \"#6965db\",\n                    scrollX: appState.scrollX,\n                    scrollY: appState.scrollY,\n                    viewBackgroundColor: \"#ffffff\",\n                    zoom: appState.zoom,\n                    accelerate: willChangeRef.current,\n                  },\n                });\n              }\n            }}\n          />\n          SVG渲染引擎\n          <input\n            type=\"checkbox\"\n            checked={renderEngine === \"canvas\"}\n            onChange={(e) => {\n              if (renderEngine === \"svg\") {\n                // 先清空svg\n                svgContainerRef.current.style.display = \"none\";\n                // 再绘制canvas\n                setRenderEngine(\"canvas\");\n                renderScene({\n                  elements: scene.getElementsIncludingDeleted(),\n                  appState: appState,\n                  scale: window.devicePixelRatio,\n                  canvas: staticCanvasRef.current,\n                  svg: svgContainerRef.current,\n                  renderEngine: \"canvas\",\n                  renderConfig: {\n                    selectionColor: \"#6965db\",\n                    scrollX: appState.scrollX,\n                    scrollY: appState.scrollY,\n                    viewBackgroundColor: \"#ffffff\",\n                    zoom: appState.zoom,\n                    accelerate: willChangeRef.current,\n                  },\n                });\n              }\n            }}\n          />\n          Canvas渲染引擎\n        </span>\n      </div>\n      <div className=\"row\">\n        <input\n          type=\"number\"\n          value={testObj.count}\n          onChange={(e) => setTestObj({ ...testObj, count: e.target.value })}\n        />\n        <select\n          value={testObj.type}\n          onChange={(e) => setTestObj({ ...testObj, type: e.target.value })}\n        >\n          <option value=\"freedraw\">freedraw</option>\n          <option value=\"rectangle\">rectangle</option>\n          <option value=\"text\">text</option>\n        </select>\n        <button\n          onClick={() => {\n            const elements = generateElements(\n              Number(testObj.count),\n              testObj.type,\n              appState\n            );\n            scene.replaceAllElements([\n              ...scene.getElementsIncludingDeleted(),\n              ...elements,\n            ]);\n            renderScene({\n              elements: scene.getElementsIncludingDeleted(),\n              appState: appState,\n              scale: window.devicePixelRatio,\n              canvas: staticCanvasRef.current,\n              svg: svgContainerRef.current,\n              renderEngine,\n              renderConfig: {\n                selectionColor: \"#6965db\",\n                scrollX: appState.scrollX,\n                scrollY: appState.scrollY,\n                viewBackgroundColor: \"#ffffff\",\n                zoom: appState.zoom,\n                accelerate: willChangeRef.current,\n              },\n            });\n          }}\n        >\n          生成\n        </button>\n        <button\n          onClick={() => {\n            setAnimate(!animate);\n            if (animateRef.current) {\n              cancelAnimationFrame(animateRef.current);\n            }\n            if (animate) return;\n            let diffTime = 100;\n            let lastDate = Date.now();\n            const tick = () => {\n              const currentDate = Date.now();\n              if (currentDate - lastDate >= diffTime) {\n                lastDate = currentDate;\n                const elements = animateElements(\n                  scene.getElementsIncludingDeleted(),\n                  appState\n                );\n                renderScene({\n                  elements: elements,\n                  appState: appState,\n                  scale: window.devicePixelRatio,\n                  canvas: staticCanvasRef.current,\n                  svg: svgContainerRef.current,\n                  renderEngine,\n                  renderConfig: {\n                    selectionColor: \"#6965db\",\n                    scrollX: appState.scrollX,\n                    scrollY: appState.scrollY,\n                    viewBackgroundColor: \"#ffffff\",\n                    zoom: appState.zoom,\n                    accelerate: willChangeRef.current,\n                  },\n                });\n              }\n\n              animateRef.current = requestAnimationFrame(tick);\n            };\n            animateRef.current = requestAnimationFrame(tick);\n          }}\n        >\n          {animate ? \"停止动画\" : \"动画\"}\n        </button>\n      </div>\n      <div id=\"placeholder\"></div>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import { getCommonBounds, distance } from \"./index\";\nexport const getCanvasSize = (elements, exportPadding) => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\nexport const canvasToDataURL = ({\n  renderScene,\n  isExport,\n  notUseCache,\n  elements,\n  appState,\n}) => {\n  const exportPadding = 10;\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width * window.devicePixelRatio;\n  canvas.height = height * window.devicePixelRatio;\n  renderScene({\n    elements,\n    appState: {\n      ...appState,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n    },\n    scale: window.devicePixelRatio,\n    canvas: canvas,\n    renderConfig: {\n      selectionColor: \"#6965db\",\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      viewBackgroundColor: \"#ffffff\",\n      zoom: { value: 1 },\n      isExport,\n      notUseCache,\n    },\n  });\n\n  return canvas.toDataURL();\n};\nexport const exportPng = ({\n  renderScene,\n  isExport = true,\n  notUseCache = true,\n  elements,\n  appState,\n}) => {\n  const dataUrl = canvasToDataURL({\n    renderScene,\n    isExport,\n    notUseCache,\n    elements,\n    appState,\n  });\n  var a = document.createElement(\"a\");\n  a.href = dataUrl;\n  a.download = \"canvas.png\";\n  a.click();\n};\n","export const getCenter = (pointers) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: sum(allCoords, (coords) => coords.x) / allCoords.length,\n    y: sum(allCoords, (coords) => coords.y) / allCoords.length,\n  };\n};\n\nexport const getDistance = ([a, b]) => Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = (array, mapper) =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n","import { unstable_batchedUpdates } from \"react-dom\";\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY },\n  { offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const x = sceneX + scrollX + offsetLeft;\n  const y = sceneY + scrollY + offsetTop;\n  return { x, y };\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY },\n  { zoom, offsetLeft, offsetTop, scrollX, scrollY }\n) => {\n  const zoomValue = zoom ? zoom.value : 1;\n  const x = (clientX - offsetLeft) / zoomValue - scrollX;\n  const y = (clientY - offsetTop) / zoomValue - scrollY;\n  return { x, y };\n};\n\n//rgb颜色随机\nexport const rgb = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport const throttleRAF = (fn, opts) => {\n  let timerId = null;\n  let lastArgs = null;\n  let lastArgsTrailing = null;\n\n  const scheduleFunc = (args) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\nexport const withBatchedUpdatesThrottled = (func) => {\n  return throttleRAF((event) => {\n    unstable_batchedUpdates(func, event);\n  });\n};\n\nexport const getBoundsFromPoints = (element) => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let points = element.points;\n  if (element.type === \"freedraw\") {\n    points = element.points.map((p) => {\n      return [p[0] - element.x, p[1] - element.y];\n    });\n  }\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const rotate = (x1, y1, x2, y2, angle) =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const getElementBounds = (element) => {\n  let bounds;\n\n  const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(element);\n\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\nexport const getCommonBounds = (elements) => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\nexport const getElementAbsoluteCoords = (element) => {\n  if (element.type === \"freedraw\") {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(element);\n    const x1 = minX + element.x;\n    const y1 = minY + element.y;\n    const x2 = maxX + element.x;\n    const y2 = maxY + element.y;\n    return [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2];\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n    element.x + element.width / 2,\n    element.y + element.height / 2,\n  ];\n};\n\nexport const distance = (x, y) => Math.abs(x - y);\n\nexport const getSizeFromPoints = (points) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nlet testIdBase = 0;\nexport const randomId = () => `id${testIdBase++}`;\nexport const randomInteger = () => Math.floor(Math.random() * 2 ** 31);\n\nexport const generateExcalidrawElements = () => {\n  const freeDrawElements =\n    JSON.parse(localStorage.getItem(\"free-draw-elements\")) || [];\n  const result = freeDrawElements.map((ele) => {\n    const points = ele.points.map((p) => {\n      return [p[0] - ele.x, p[1] - ele.y];\n    });\n    const { width, height } = getSizeFromPoints(points);\n    return {\n      id: randomId(),\n      type: \"freedraw\",\n      x: ele.x,\n      y: ele.y,\n      width: width,\n      height: height,\n      angle: 0,\n      strokeColor: ele.strokeStyle,\n      backgroundColor: \"transparent\",\n      fillStyle: \"hachure\",\n      strokeWidth: 1,\n      strokeStyle: \"solid\",\n      roughness: 1,\n      opacity: 100,\n      groupIds: [],\n      roundness: null,\n      seed: randomInteger(),\n      version: 1,\n      versionNonce: 0,\n      isDeleted: false,\n      boundElements: null,\n      updated: Date.now(),\n      link: null,\n      locked: false,\n      points: points,\n      pressures: [],\n      simulatePressure: true,\n      lastCommittedPoint: points[points.length - 1],\n    };\n  });\n  return result;\n};\n\n// for worker\n// window.__generateExcalidrawElements = generateExcalidrawElements;\n\nexport const getFontString = ({ fontSize, fontFamily }) => {\n  return `${fontSize}px ${fontFamily}, Segoe UI Emoji`;\n};\n","const MIN_ZOOM = 0.1;\n\nexport const getNormalizedZoom = (zoom) => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30));\n};\n\nexport const getStateForZoom = (\n  { viewportX, viewportY, nextZoom },\n  appState\n) => {\n  const screenX = viewportX - appState.offsetLeft;\n  const screenY = viewportY - appState.offsetTop;\n  const currentZoom = appState.zoom.value;\n\n  return {\n    scrollX: appState.scrollX + screenX / nextZoom - screenX / currentZoom,\n    scrollY: appState.scrollY + screenY / nextZoom - screenY / currentZoom,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n"],"names":["svg","_minX","_minY","newElement","type","x","y","strokeColor","backgroundColor","fillStyle","strokeWidth","strokeStyle","width","height","angle","points","rest","id","randomId","isDeleted","createElement","elementType","pointerDownState","appState","origin","currentItemStrokeColor","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","rgb","newTextElement","opts","text","fontSize","fontFamily","textAlign","verticalAlign","originalText","getRandomValue","n","m","Number","Math","random","toFixed","count","element","elements","i","scrollX","canvasWidth","scrollY","canvasHeight","abs","pointsNum","push","length","elementCache","SVG_NS","renderScene","svgContainer","scale","renderConfig","isTransform","accelerate","constainerStyle","zoom","value","setAttribute","replace","getCanvasSize","minX","minY","document","createElementNS","style","position","background","appendChild","left","top","map","index","el","originChange","draggingElement","__x","__y","__width","__height","p","ceil","join","renderElementToSvg","window","__svg2img","xml","XMLSerializer","serializeToString","image64","btoa","img","src","body","elementWithCanvasCache","WeakMap","generateElementWithCanvas","prevElementWithCanvas","get","console","log","notUseCache","elementWithCanvas","generateElementCanvas","set","rightContainer","getElementById","previewCanvas","canvas","context","getContext","padding","getCanvasPadding","removeChild","canvasOffsetX","canvasOffsetY","getElementAbsoluteCoords","x1","y1","x2","y2","distance","devicePixelRatio","translate","save","drawElementOnCanvas","restore","theme","canvasZoom","globalAlpha","opacity","lineJoin","lineCap","lineWidth","strokeRect","font","getFontString","lines","split","lineHeight","textBaseline","fillText","forEach","point","lineTo","moveTo","stroke","drawElementFromCanvas","cx","cy","drawImage","setTransform","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","ctx","rectH","rectW","beginPath","drawAxis","visibleElements","filter","viewTransformations","getElementBounds","topLeftSceneCoords","viewportCoordsToSceneCoords","clientX","offsetLeft","clientY","offsetTop","bottomRightSceneCoords","isVisibleElement","innerText","renderElement","localStorage","setItem","JSON","stringify","config","renderEngine","renderSceneSvg","renderSceneCanvas","deleteElementCache","delete","deleteElementCacheCanvas","gesture","pointers","Map","lastCenter","initialDistance","initialScale","useGesture","canvasRef","useEffect","current","onTouchEnd","event","touches","clear","addEventListener","removeEventListener","removePointer","pointerId","updateGestureOnPointerDown","size","getCenter","getDistance","Array","from","values","handleCanvasPointerMove","callback","has","center","deltaX","deltaY","scaleFactor","nextZoom","getNormalizedZoom","zoomState","getStateForZoom","viewportX","viewportY","Object","assign","createIcon","d","mirror","focusable","role","viewBox","fill","RectangleIcon","rx","strokeLinecap","strokeLinejoin","FreedrawIcon","clipRule","ExportImageIcon","modifiedTablerIconProps","ZoomInIcon","ZoomOutIcon","Scene","parse","getItem","this","nextElements","scene","SHAPES","icon","memo","activeTool","onActiveToolChange","className","styles","onClick","exportPng","getElementsIncludingDeleted","shape","isSelected","Scale","onZoomChange","zoomValue","LayerUI","Index","forwardRef","ref","staticCanvasRef","textareaRef","useRef","useState","textareaValue","setTextAreaValue","useImperativeHandle","startEditText","preventDefault","stopPropagation","sceneX","sceneY","textarea","focus","styleObj","color","copyTextarea","maxWidth","zIndex","onChange","e","target","parseFloat","copyTextWidth","getBoundingClientRect","slice","splitResult","line","lastIdx","str","onBlur","offsetWidth","offsetHeight","replaceAllElements","selectionColor","viewBackgroundColor","setTimeout","contentEditable","Canvas","canvasContainer","svgContainerRef","cursorPosition","rafRef","globalVarRef","flag","refreshFlag","setActiveTool","testObj","setTestObj","animate","setAnimate","willChangeRef","setRenderEngine","animateRef","refresh","setCanvasSize","wrap","handleWheel","passive","updateCurrentCursorPosition","cursorX","cursorY","onTapStart","frame","startTime","Date","now","loop","currentTime","fps","round","requestAnimationFrame","reDrawAfterZoom","zoomTimerId","clearTimeout","onPointerMoveFromCanvasPointerDownHandler","withBatchedUpdatesThrottled","pointerCoords","lastCoords","originX","originY","newX","newY","onPointerUpFromCanvasPointerDownHandler","eventListeners","onMove","onUp","initialPointerDownState","onKeyUp","onKeyDown","onWheel","metaKey","ctrlKey","sign","absDelta","delta","ZOOM_STEP","newZoom","log10","max","min","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","onPointerCancel","zoomVal","checked","display","generateElements","cancelAnimationFrame","lastDate","tick","currentDate","animateElements","exportPadding","getCommonBounds","maxX","maxY","isExport","dataUrl","toDataURL","canvasToDataURL","a","href","download","click","allCoords","sum","coords","b","hypot","array","mapper","reduce","acc","item","r","floor","g","func","fn","timerId","lastArgs","lastArgsTrailing","scheduleFunc","args","ret","trailing","flush","cancel","throttleRAF","unstable_batchedUpdates","getBoundsFromPoints","Infinity","rotate","cos","sin","x11","y11","x12","y12","x22","y22","x21","y21","testIdBase","screenX","screenY","currentZoom"],"sourceRoot":""}